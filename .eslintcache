[{"D:\\PROJECTS\\tech\\src\\index.js":"1","D:\\PROJECTS\\tech\\src\\reportWebVitals.js":"2","D:\\PROJECTS\\tech\\src\\redux\\redux-store.js":"3","D:\\PROJECTS\\tech\\src\\components\\App\\index.js":"4","D:\\PROJECTS\\tech\\src\\redux\\App-reducer.js":"5","D:\\PROJECTS\\tech\\src\\redux\\Auth-reducer.js":"6","D:\\PROJECTS\\tech\\src\\redux\\Users-reducer.js":"7","D:\\PROJECTS\\tech\\src\\redux\\Profile-reducer.js":"8","D:\\PROJECTS\\tech\\src\\redux\\Printers-reducer.js":"9","D:\\PROJECTS\\tech\\src\\redux\\Dialogs-reducer.js":"10","D:\\PROJECTS\\tech\\src\\redux\\Tech-reducer.js":"11","D:\\PROJECTS\\tech\\src\\components\\App\\App.jsx":"12","D:\\PROJECTS\\tech\\src\\api\\api.js":"13","D:\\PROJECTS\\tech\\src\\components\\App\\Authorization\\index.js":"14","D:\\PROJECTS\\tech\\src\\components\\App\\AppWithRouter\\index.js":"15","D:\\PROJECTS\\tech\\src\\components\\Header\\index.js":"16","D:\\PROJECTS\\tech\\src\\components\\App\\Authorization\\Authorization.jsx":"17","D:\\PROJECTS\\tech\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx":"18","D:\\PROJECTS\\tech\\src\\components\\Header\\Header.jsx":"19","D:\\PROJECTS\\tech\\src\\components\\Header\\Header.css.js":"20","D:\\PROJECTS\\tech\\src\\pages\\SignInPage\\index.js":"21","D:\\PROJECTS\\tech\\src\\pages\\UsersPage\\index.js":"22","D:\\PROJECTS\\tech\\src\\pages\\Profile\\index.js":"23","D:\\PROJECTS\\tech\\src\\pages\\TypesTechnicsPage\\index.js":"24","D:\\PROJECTS\\tech\\src\\pages\\TechnicPage\\index.js":"25","D:\\PROJECTS\\tech\\src\\pages\\PrintersPage\\index.js":"26","D:\\PROJECTS\\tech\\src\\pages\\LastRefuelingPage\\index.js":"27","D:\\PROJECTS\\tech\\src\\pages\\EventsPage\\index.js":"28","D:\\PROJECTS\\tech\\src\\pages\\RoomPage\\index.js":"29","D:\\PROJECTS\\tech\\src\\pages\\TypePage\\index.js":"30","D:\\PROJECTS\\tech\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx":"31","D:\\PROJECTS\\tech\\src\\pages\\LastRefuelingPage\\LastRefuelingPage.jsx":"32","D:\\PROJECTS\\tech\\src\\pages\\UsersPage\\UsersPage.jsx":"33","D:\\PROJECTS\\tech\\src\\pages\\Profile\\ProfilePage.jsx":"34","D:\\PROJECTS\\tech\\src\\pages\\SignInPage\\SignInPage.jsx":"35","D:\\PROJECTS\\tech\\src\\pages\\TechnicPage\\TechnicPage.jsx":"36","D:\\PROJECTS\\tech\\src\\pages\\RoomPage\\RoomPage.jsx":"37","D:\\PROJECTS\\tech\\src\\pages\\PrintersPage\\PrintersPage.jsx":"38","D:\\PROJECTS\\tech\\src\\pages\\EventsPage\\EventsPage.jsx":"39","D:\\PROJECTS\\tech\\src\\pages\\TypePage\\TypePage.jsx":"40","D:\\PROJECTS\\tech\\src\\components\\global\\images.js":"41","D:\\PROJECTS\\tech\\src\\components\\global\\groupElementsByDate.js":"42","D:\\PROJECTS\\tech\\src\\components\\LastRefueling\\index.js":"43","D:\\PROJECTS\\tech\\src\\components\\ListTypes\\index.js":"44","D:\\PROJECTS\\tech\\src\\components\\Users\\index.js":"45","D:\\PROJECTS\\tech\\src\\components\\global\\formatDate.js":"46","D:\\PROJECTS\\tech\\src\\components\\LastRefueling\\LastRefueling.jsx":"47","D:\\PROJECTS\\tech\\src\\components\\ListTypes\\ListTypes.jsx":"48","D:\\PROJECTS\\tech\\src\\components\\Users\\Users.jsx":"49","D:\\PROJECTS\\tech\\src\\components\\Modal\\index.js":"50","D:\\PROJECTS\\tech\\src\\components\\Icon\\index.js":"51","D:\\PROJECTS\\tech\\src\\components\\FiltersTechnic\\index.js":"52","D:\\PROJECTS\\tech\\src\\components\\ListTechnics1\\index.js":"53","D:\\PROJECTS\\tech\\src\\components\\ActiveCategories\\index.js":"54","D:\\PROJECTS\\tech\\src\\components\\Modal\\Modal.jsx":"55","D:\\PROJECTS\\tech\\src\\components\\Icon\\Icon.jsx":"56","D:\\PROJECTS\\tech\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx":"57","D:\\PROJECTS\\tech\\src\\components\\ActiveCategories\\ActiveCategories.jsx":"58","D:\\PROJECTS\\tech\\src\\components\\ListTechnics1\\ListTechnics.jsx":"59","D:\\PROJECTS\\tech\\src\\components\\global\\global.js":"60","D:\\PROJECTS\\tech\\src\\components\\global\\getProperty.js":"61","D:\\PROJECTS\\tech\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx":"62","D:\\PROJECTS\\tech\\src\\components\\MiniCardTechnic\\index.js":"63","D:\\PROJECTS\\tech\\src\\components\\Title\\index.js":"64","D:\\PROJECTS\\tech\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx":"65","D:\\PROJECTS\\tech\\src\\components\\Title\\Title.jsx":"66","D:\\PROJECTS\\tech\\src\\components\\global\\countDays.js":"67","D:\\PROJECTS\\tech\\src\\components\\Common\\TextError.jsx":"68","D:\\PROJECTS\\tech\\src\\components\\Accordion\\index.js":"69","D:\\PROJECTS\\tech\\src\\components\\StagesFueling\\index.js":"70","D:\\PROJECTS\\tech\\src\\components\\ListItemForm\\index.js":"71","D:\\PROJECTS\\tech\\src\\components\\Portfolio\\index.js":"72","D:\\PROJECTS\\tech\\src\\components\\Profile\\index.js":"73","D:\\PROJECTS\\tech\\src\\components\\Accordion\\Accordion.jsx":"74","D:\\PROJECTS\\tech\\src\\components\\StagesFueling\\StagesFueling.jsx":"75","D:\\PROJECTS\\tech\\src\\components\\ListItemForm\\ListItemForm.jsx":"76","D:\\PROJECTS\\tech\\src\\components\\Profile\\Profile.jsx":"77","D:\\PROJECTS\\tech\\src\\components\\Portfolio\\Portfolio.jsx":"78","D:\\PROJECTS\\tech\\src\\components\\AutocompleteTextarea\\index.js":"79","D:\\PROJECTS\\tech\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx":"80"},{"size":585,"mtime":1627375847798,"results":"81","hashOfConfig":"82"},{"size":375,"mtime":1623747530468,"results":"83","hashOfConfig":"82"},{"size":882,"mtime":1629100822733,"results":"84","hashOfConfig":"82"},{"size":364,"mtime":1628494126865,"results":"85","hashOfConfig":"82"},{"size":800,"mtime":1627286579153,"results":"86","hashOfConfig":"82"},{"size":2962,"mtime":1627286579154,"results":"87","hashOfConfig":"82"},{"size":4067,"mtime":1627286579156,"results":"88","hashOfConfig":"82"},{"size":2403,"mtime":1629791483243,"results":"89","hashOfConfig":"82"},{"size":2937,"mtime":1629439865023,"results":"90","hashOfConfig":"82"},{"size":2414,"mtime":1623747530444,"results":"91","hashOfConfig":"82"},{"size":12552,"mtime":1629897301743,"results":"92","hashOfConfig":"82"},{"size":511,"mtime":1629791483228,"results":"93","hashOfConfig":"82"},{"size":5066,"mtime":1629897215538,"results":"94","hashOfConfig":"82"},{"size":203,"mtime":1623747530391,"results":"95","hashOfConfig":"82"},{"size":198,"mtime":1623747530388,"results":"96","hashOfConfig":"82"},{"size":348,"mtime":1627286579008,"results":"97","hashOfConfig":"82"},{"size":362,"mtime":1623747530389,"results":"98","hashOfConfig":"82"},{"size":1647,"mtime":1629891364401,"results":"99","hashOfConfig":"82"},{"size":3063,"mtime":1629791483228,"results":"100","hashOfConfig":"82"},{"size":1741,"mtime":1623747530402,"results":"101","hashOfConfig":"82"},{"size":488,"mtime":1623747530440,"results":"102","hashOfConfig":"82"},{"size":456,"mtime":1627286579152,"results":"103","hashOfConfig":"82"},{"size":201,"mtime":1627286579144,"results":"104","hashOfConfig":"82"},{"size":415,"mtime":1627286579150,"results":"105","hashOfConfig":"82"},{"size":720,"mtime":1629798499739,"results":"106","hashOfConfig":"82"},{"size":641,"mtime":1629791483228,"results":"107","hashOfConfig":"82"},{"size":389,"mtime":1629791483228,"results":"108","hashOfConfig":"82"},{"size":363,"mtime":1629791483228,"results":"109","hashOfConfig":"82"},{"size":371,"mtime":1629096861308,"results":"110","hashOfConfig":"82"},{"size":518,"mtime":1629891797708,"results":"111","hashOfConfig":"82"},{"size":296,"mtime":1627386813767,"results":"112","hashOfConfig":"82"},{"size":326,"mtime":1629791483228,"results":"113","hashOfConfig":"82"},{"size":1920,"mtime":1629791483243,"results":"114","hashOfConfig":"82"},{"size":653,"mtime":1629791483243,"results":"115","hashOfConfig":"82"},{"size":3842,"mtime":1629791483243,"results":"116","hashOfConfig":"82"},{"size":13556,"mtime":1629884853464,"results":"117","hashOfConfig":"82"},{"size":2758,"mtime":1629791483243,"results":"118","hashOfConfig":"82"},{"size":3749,"mtime":1629791483228,"results":"119","hashOfConfig":"82"},{"size":5420,"mtime":1629791483228,"results":"120","hashOfConfig":"82"},{"size":9083,"mtime":1629899377376,"results":"121","hashOfConfig":"82"},{"size":5659,"mtime":1629123399160,"results":"122","hashOfConfig":"82"},{"size":963,"mtime":1629791483228,"results":"123","hashOfConfig":"82"},{"size":379,"mtime":1629791483228,"results":"124","hashOfConfig":"82"},{"size":385,"mtime":1627286579010,"results":"125","hashOfConfig":"82"},{"size":665,"mtime":1627286579141,"results":"126","hashOfConfig":"82"},{"size":257,"mtime":1629448449487,"results":"127","hashOfConfig":"82"},{"size":2139,"mtime":1629791483228,"results":"128","hashOfConfig":"82"},{"size":3153,"mtime":1629896446533,"results":"129","hashOfConfig":"82"},{"size":2563,"mtime":1627286579140,"results":"130","hashOfConfig":"82"},{"size":53,"mtime":1627286579076,"results":"131","hashOfConfig":"82"},{"size":211,"mtime":1628494126880,"results":"132","hashOfConfig":"82"},{"size":414,"mtime":1628664876645,"results":"133","hashOfConfig":"82"},{"size":540,"mtime":1629791483228,"results":"134","hashOfConfig":"82"},{"size":260,"mtime":1628686006049,"results":"135","hashOfConfig":"82"},{"size":455,"mtime":1628494126904,"results":"136","hashOfConfig":"82"},{"size":700,"mtime":1629096860652,"results":"137","hashOfConfig":"82"},{"size":4391,"mtime":1629879977798,"results":"138","hashOfConfig":"82"},{"size":1381,"mtime":1629899304176,"results":"139","hashOfConfig":"82"},{"size":4542,"mtime":1629871085993,"results":"140","hashOfConfig":"82"},{"size":1216,"mtime":1629179908974,"results":"141","hashOfConfig":"82"},{"size":171,"mtime":1628596564393,"results":"142","hashOfConfig":"82"},{"size":287,"mtime":1627286579074,"results":"143","hashOfConfig":"82"},{"size":390,"mtime":1628494126903,"results":"144","hashOfConfig":"82"},{"size":51,"mtime":1629791483228,"results":"145","hashOfConfig":"82"},{"size":1787,"mtime":1629096860777,"results":"146","hashOfConfig":"82"},{"size":184,"mtime":1629791483228,"results":"147","hashOfConfig":"82"},{"size":214,"mtime":1628494126906,"results":"148","hashOfConfig":"82"},{"size":205,"mtime":1623747530399,"results":"149","hashOfConfig":"82"},{"size":86,"mtime":1627388828905,"results":"150","hashOfConfig":"82"},{"size":488,"mtime":1629791483228,"results":"151","hashOfConfig":"82"},{"size":356,"mtime":1629871085992,"results":"152","hashOfConfig":"82"},{"size":189,"mtime":1629791483228,"results":"153","hashOfConfig":"82"},{"size":219,"mtime":1629791483228,"results":"154","hashOfConfig":"82"},{"size":4183,"mtime":1629102813026,"results":"155","hashOfConfig":"82"},{"size":6901,"mtime":1629791483228,"results":"156","hashOfConfig":"82"},{"size":2158,"mtime":1629871085992,"results":"157","hashOfConfig":"82"},{"size":2483,"mtime":1629791483228,"results":"158","hashOfConfig":"82"},{"size":1146,"mtime":1629791483228,"results":"159","hashOfConfig":"82"},{"size":478,"mtime":1629871085991,"results":"160","hashOfConfig":"82"},{"size":6040,"mtime":1629871085990,"results":"161","hashOfConfig":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"1vhryo1",{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"164"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"164"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"164"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"164"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"164"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"164"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"164"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"164"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"164"},{"filePath":"250","messages":"251","errorCount":4,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"164"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"164"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"164"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"164"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"164"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"164"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"164"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"164"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"164"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"164"},"D:\\PROJECTS\\tech\\src\\index.js",[],["342","343"],"D:\\PROJECTS\\tech\\src\\reportWebVitals.js",[],"D:\\PROJECTS\\tech\\src\\redux\\redux-store.js",[],"D:\\PROJECTS\\tech\\src\\components\\App\\index.js",[],"D:\\PROJECTS\\tech\\src\\redux\\App-reducer.js",[],"D:\\PROJECTS\\tech\\src\\redux\\Auth-reducer.js",[],"D:\\PROJECTS\\tech\\src\\redux\\Users-reducer.js",[],"D:\\PROJECTS\\tech\\src\\redux\\Profile-reducer.js",[],"D:\\PROJECTS\\tech\\src\\redux\\Printers-reducer.js",["344","345"],"import {printersAPI, techAPI} from \"../api/api\";\r\n\r\nconst GET_REFILLS = 'GET_REFILLS';\r\nconst GET_ALL_REFILLS = 'GET_ALL_REFILLS'\r\nconst GET_CURRENT_REFILLS = 'GET_CURRENT_REFILLS'\r\nconst SET_PRINTERS = 'SET_PRINTERS'\r\nconst SET_REFILL = 'SET_REFILL'\r\n\r\nlet initialState = {\r\n    refills: [],\r\n    printers: [],\r\n    allRefills: [],\r\n    currentRefills: []\r\n}\r\n\r\nconst PrintersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_REFILLS: {\r\n            return {\r\n                ...state,\r\n                refills: action.payload\r\n            }\r\n        }\r\n        case GET_ALL_REFILLS: {\r\n            return {\r\n                ...state,\r\n                allRefills: action.payload\r\n            }\r\n        }\r\n        case GET_CURRENT_REFILLS: {\r\n            return {\r\n                ...state,\r\n                currentRefills: action.payload\r\n            }\r\n        }\r\n        case SET_PRINTERS: {\r\n            return {\r\n                ...state,\r\n                printers: action.payload\r\n            }\r\n        }\r\n        case SET_REFILL: {\r\n            return {\r\n                ...state,\r\n                allRefills: [...state.allRefills, action.payload]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport const setAllRefillsAC = (payload) => {\r\n    return {type: GET_ALL_REFILLS, payload}\r\n};\r\nexport const setCurrentRefillsAC = (payload) => {\r\n    return {type: GET_CURRENT_REFILLS, payload}\r\n}\r\nexport const setRefillAC = (payload) => {\r\n    return {type: SET_REFILL, payload}\r\n}\r\n\r\nexport const setRefillsAC = (payload) => {\r\n    return {type: GET_REFILLS, payload}\r\n};\r\nexport const setPrintersAC = (payload) => {\r\n    return {type: SET_PRINTERS, payload}\r\n};\r\n\r\nexport const getAllRefills = () => async (dispatch) => {\r\n    let response = await printersAPI.getAllRefills()\r\n    dispatch(setAllRefillsAC(response))\r\n}\r\nexport const getRefills = (id) => async (dispatch) => {\r\n    let response = await printersAPI.getRefills(id)\r\n    dispatch(setRefillsAC(response))\r\n}\r\nexport const getCurrentRefills = () => async (dispatch) => {\r\n    let response = await printersAPI.getCurrentRefills()\r\n    dispatch(setCurrentRefillsAC(response))\r\n    return response\r\n}\r\n\r\nexport const getPrintersAll = () => async (dispatch) => {\r\n    let response = await printersAPI.getPrintersAll()\r\n    dispatch(setPrintersAC(response))\r\n}\r\nexport const sendOrder = (id) => async (dispatch) => {\r\n    let response = await printersAPI.sendOrder(id)\r\n    dispatch(setPrintersAC(response))\r\n}\r\n\r\nexport const updateCurrentRefills = (data) => async (dispatch) => {\r\n    let response = await printersAPI.updateCurrentRefills(data)\r\n}\r\n\r\nexport const addRefillForPrinter = (id, data) => {\r\n    return async (dispatch) => {\r\n        let response = await printersAPI.addRefillForPrinter(id, data)\r\n        dispatch(setRefillAC(response))\r\n    }\r\n}\r\n\r\nexport default PrintersReducer","D:\\PROJECTS\\tech\\src\\redux\\Dialogs-reducer.js",[],"D:\\PROJECTS\\tech\\src\\redux\\Tech-reducer.js",["346"],"D:\\PROJECTS\\tech\\src\\components\\App\\App.jsx",["347"],"import React, {useEffect} from \"react\";\r\nimport Header from \"../Header\";\r\nimport {Switch} from \"react-router-dom\";\r\nimport AppWithRouter from \"./AppWithRouter\";\r\nimport Authorization from \"./Authorization\";\r\n\r\nconst App = ({isAuth, getTypes}) => {\r\n    useEffect(() => {\r\n        getTypes()\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Switch>\r\n                {!isAuth ? <AppWithRouter/> : <Authorization/>}\r\n            </Switch>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default App\r\n","D:\\PROJECTS\\tech\\src\\api\\api.js",["348","349"],"D:\\PROJECTS\\tech\\src\\components\\App\\Authorization\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\App\\AppWithRouter\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\Header\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\App\\Authorization\\Authorization.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx",["350","351"],"D:\\PROJECTS\\tech\\src\\components\\Header\\Header.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\Header\\Header.css.js",[],"D:\\PROJECTS\\tech\\src\\pages\\SignInPage\\index.js",[],"D:\\PROJECTS\\tech\\src\\pages\\UsersPage\\index.js",[],"D:\\PROJECTS\\tech\\src\\pages\\Profile\\index.js",[],"D:\\PROJECTS\\tech\\src\\pages\\TypesTechnicsPage\\index.js",[],"D:\\PROJECTS\\tech\\src\\pages\\TechnicPage\\index.js",[],"D:\\PROJECTS\\tech\\src\\pages\\PrintersPage\\index.js",[],"D:\\PROJECTS\\tech\\src\\pages\\LastRefuelingPage\\index.js",[],"D:\\PROJECTS\\tech\\src\\pages\\EventsPage\\index.js",[],"D:\\PROJECTS\\tech\\src\\pages\\RoomPage\\index.js",[],"D:\\PROJECTS\\tech\\src\\pages\\TypePage\\index.js",["352"],"D:\\PROJECTS\\tech\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx",[],"D:\\PROJECTS\\tech\\src\\pages\\LastRefuelingPage\\LastRefuelingPage.jsx",["353","354"],"import groupElementsByDate from \"../../components/global/groupElementsByDate\";\r\nimport React, {useEffect} from \"react\";\r\n\r\nconst LastRefuelingPage = ({allRefills, getAllRefills}) => {\r\n\r\n    useEffect(() => {\r\n        getAllRefills()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>dsfs</>\r\n    )\r\n}\r\nexport default LastRefuelingPage","D:\\PROJECTS\\tech\\src\\pages\\UsersPage\\UsersPage.jsx",["355"],"import React, {useEffect} from \"react\";\r\nimport {Container, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport Users from \"../../components/Users\";\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n// });\r\n\r\nconst UsersPage = ({isFetching, rowsPerPage, currentPage, getUsers, match}) => {\r\n    let sectionUrl = match.params.section\r\n    const [value, setValue] = React.useState(0);\r\n    useEffect(() => {\r\n        if (sectionUrl === 'following') {\r\n            setValue(1)\r\n            getUsers(rowsPerPage, currentPage, true);\r\n        }\r\n        if (sectionUrl === 'allusers') {\r\n            setValue(0)\r\n            getUsers(rowsPerPage, currentPage, false);\r\n        }\r\n    }, [sectionUrl])\r\n    // const classes = useStyles();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!isFetching\r\n                ? <Container>\r\n                    <Typography variant=\"body1\" component=\"span\">\r\n                    </Typography>\r\n                    <Paper square>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={handleChange}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"All Users\" component={Link} to=\"/users/allusers\"/>\r\n                            <Tab label=\"following\" component={Link} to=\"/users/following\"/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <Users/>\r\n                </Container>\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersPage)","D:\\PROJECTS\\tech\\src\\pages\\Profile\\ProfilePage.jsx",["356","357"],"import {Container} from \"@material-ui/core\";\r\nimport ProfileInfo from \"../../components/Profile\";\r\nimport Portfolio from \"../../components/Portfolio\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {useState} from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    div: {\r\n        height: \"200px\",\r\n        background: \"red\",\r\n        width: \"200px\"\r\n    },\r\n    divheight: {\r\n        height: \"800px\"\r\n    }\r\n}))\r\n\r\n\r\nconst ProfilePage = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container>\r\n            <ProfileInfo/>\r\n            <Portfolio/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n\r\n","D:\\PROJECTS\\tech\\src\\pages\\SignInPage\\SignInPage.jsx",[],"D:\\PROJECTS\\tech\\src\\pages\\TechnicPage\\TechnicPage.jsx",["358","359","360","361"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Divider,\r\n    Grid, IconButton,\r\n    List, ListItem, ListItemAvatar, ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {deepOrange} from '@material-ui/core/colors';\r\nimport ControlledAccordions from \"../../components/Accordion\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemForm from \"../../components/ListItemForm\";\r\nimport Icon from \"../../components/Icon\";\r\nimport countDays from \"../../components/global/countDays\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {format} from \"date-fns\";\r\nimport images from \"../../components/global/images\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport LineWeightIcon from '@material-ui/icons/LineWeight';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatarWrapper: {\r\n        padding: \"20px\",\r\n        textAlign: \"center\"\r\n    },\r\n    devider: {\r\n        margin: \"20px\"\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        margin: \"0 auto\",\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n        cursor: \"pointer\"\r\n    },\r\n    technicInfoWrapper: {\r\n        padding: \"20px\"\r\n    },\r\n    listItemText: {\r\n        fontSize: '1.1em',\r\n        fontWeight: \"bold\"\r\n    },\r\n    paper: {\r\n        padding: \"10px\",\r\n        width: \"100%\"\r\n    },\r\n    repairs: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    repair: {\r\n        minWidth: \"200px\",\r\n        width: \"23%\",\r\n        textAlign: \"center\"\r\n    },\r\n    margin: {\r\n        margin: \"20px 0\"\r\n    }\r\n}))\r\nlet repair = [\r\n    {\r\n        id: '1',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '2',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '3',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '4',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n\r\n]\r\n\r\nconst TechnicPage = ({\r\n                         activeTechnic,\r\n                         getTechnicInfo,\r\n                         users,\r\n                         addComment,\r\n                         activeTechnicComments,\r\n                         getComments,\r\n                         getRefills,\r\n                         deleteTechnic,\r\n                         refills\r\n                     }) => {\r\n    useEffect(() => {\r\n        getTechnicInfo(params.id)\r\n        getComments(params.id)\r\n        getRefills(params.id)\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    let history = useHistory();\r\n\r\n\r\n    const [aaa, setAaa] = useState(false)\r\n    const [bbb, setBbb] = useState(false)\r\n    const [ccc, setCcc] = useState(false)\r\n\r\n    const {register, handleSubmit, watch, formState: {errors}} = useForm();\r\n    const onSubmit = data => {\r\n        addComment(activeTechnic.id, data.msg)\r\n    };\r\n\r\n    const formatDate = (value) => {\r\n        return format(new Date(value), 'dd.MM.yyyy')\r\n    }\r\n    const deleteTech = (id) => {\r\n        deleteTechnic(id)\r\n        history.goBack()\r\n    } // Удалить объект по id / Переход на предыдущую страницу\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Paper>\r\n                        <div className={classes.avatarWrapper}>\r\n                            <Avatar\r\n                                variant={\"square\"}\r\n                                src={images[activeTechnic.name]}\r\n                                className={classes.avatar}\r\n                            >\r\n                            </Avatar>\r\n                            <Divider className={classes.devider}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"type\"} text={\"Тип\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"name\"} text={\"Наименование\"}/>\r\n\r\n                        </div>\r\n                    </Paper>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                        <IconButton aria-label=\"delete\" color={aaa ? \"primary\" : \"secondary\"}\r\n                                    onClick={() => setAaa(!aaa)}>\r\n                            <SettingsIcon/>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"delete\" color={bbb ? \"primary\" : \"secondary\"}\r\n                                    onClick={() => setBbb(!bbb)}>\r\n                            <CommentIcon/>\r\n                        </IconButton>\r\n                        {\r\n                            ((activeTechnic.type === 'Принтер') || (activeTechnic.type === 'МФУ') || (activeTechnic.type === 'Ксерокс')) &&\r\n                            <IconButton aria-label=\"delete\" color={bbb ? \"primary\" : \"secondary\"}\r\n                                        onClick={() => setCcc(!ccc)}>\r\n                                <LineWeightIcon/>\r\n                            </IconButton>\r\n                        }\r\n                        <IconButton aria-label=\"delete\" onClick={() => deleteTech(params.id)}>\r\n                            <DeleteIcon/>\r\n                        </IconButton>\r\n                    </div> //Кнопки показать/скрыть\r\n\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Место установки\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <List>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"room\"} text={\"Кабинет\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"build\"} text={\"Корпус\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"user\"} text={\"ФИО сотрудника\"}\r\n                                              array={users}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"date\"} text={\"Дата получения\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"faculty\"} text={\"Факультет\"}/>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Бухгалтерия\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"invent\"} text={\"Инвентарный номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"zavod\"} text={\"Заводской номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"matfyo\"}\r\n                                          text={\"Материально-ответственное лицо\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"year\"} text={\"Год выпуска\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"print\"} text={\"Наклейка\"}/>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {aaa && <Grid className={classes.margin} container spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                        Комментарии\r\n                    </Typography>\r\n                    <Typography>Описание: {activeTechnic.desc}</Typography>\r\n                    <Typography>Проблема: {activeTechnic.problem}</Typography>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input defaultValue=\"test\" {...register(\"msg\")} />\r\n                        <input type=\"submit\"/>\r\n                    </form>\r\n                    <List>\r\n                        {activeTechnicComments.map((el, i) => {\r\n                            return <ListItem key={i}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={el.body} secondary={formatDate(el.date)}/>\r\n                            </ListItem>\r\n                        })}\r\n\r\n                    </List>\r\n\r\n\r\n                </Paper>\r\n\r\n            </Grid>}  {/*//Комментарии*/}\r\n\r\n            {bbb && <Grid container className={classes.margin} spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Заявки на ремонт\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<Icon type={\"send\"}></Icon>}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className={classes.repairs}>\r\n                        {repair.map(el => {\r\n                            return <Card className={classes.repair}>\r\n                                <CardContent>\r\n                                    <Typography>Дата заявки: {el.application}</Typography>\r\n                                    <Typography>Проблема: {el.message}</Typography>\r\n                                    <Typography>Дата передачи: {el.dispatch}</Typography>\r\n                                    <Typography>Дата получения: {el.getting}</Typography>\r\n                                    <Typography>Всего в ремонте: {countDays(el.dispatch, el.getting)}</Typography>\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        })}\r\n                    </div>\r\n                </Paper>\r\n\r\n            </Grid>} {/*//Заявки на ремонт*/}\r\n            {ccc && <Grid container className={classes.margin} spacing={2}>\r\n                {\r\n                    ((activeTechnic.type === 'Принтер') || (activeTechnic.type === 'МФУ') || (activeTechnic.type === 'Ксерокс')) &&\r\n                    <Paper className={classes.paper}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Заправки\r\n                        </Typography>\r\n                        <Button component={Link} to={\"/printers\"} variant={\"contained\"}\r\n                                color={\"primary\"}>Заполнить</Button>\r\n                        <Typography variant={\"body2\"}>Максимальное количество\r\n                            заправок за год: 2</Typography>\r\n                        <Divider/>\r\n                        {/*<Steppers/>*/}\r\n\r\n                        {refills ? <>\r\n                            <div>\r\n\r\n                                <ControlledAccordions array={refills}/>\r\n                            </div>\r\n                        </> : <Button component={Link} to={\"/printers\"}>Заполнить</Button>}\r\n                    </Paper>\r\n                }\r\n            </Grid>} {/*//Последние заправки*/}\r\n\r\n            <Grid container className={classes.margin} spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Техника в этом кабинете\r\n                        </Typography>\r\n                    </div>\r\n                    <div>\r\n                        <Button component={Link} to={`/room/${activeTechnic.room}`}>Техника кабинета</Button>\r\n\r\n                    </div>\r\n\r\n                </Paper>\r\n\r\n            </Grid> {/*//Техника в этом кабинете*/}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TechnicPage;","D:\\PROJECTS\\tech\\src\\pages\\RoomPage\\RoomPage.jsx",["362","363","364"],"import {Avatar, Card, Container, Grid, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useEffect, useState} from \"react\";\r\nimport images from \"../../components/global/images\";\r\n\r\nconst layout = [\"Системный блок\", \"Компьютер (комплект)\", \"Монитор\", \"Моноблок\", \"Ноутбук\",\"Телевизор\",  \"Проектор\",\"Принтер\", \"МФУ\",\"Сканер\",\"Ксерокс\",\r\n    \"Акустическая система\",\"Планшет\",\"Веб-камера\", \"Мышь\",  \"Клавиатура\", \"Фотоаппарат\", \"Документ-камера\", \"Перфобиндер\"]\r\n\r\nconst RoomPage = ({getTechnicsByRoom, technicsByRoom}) => {\r\n    let {room} = useParams();\r\n    const [technics, setTechnics] = useState(\"\")\r\n    useEffect(() => {\r\n        async function getTechnics() {\r\n            let response = await getTechnicsByRoom(room)\r\n            return response\r\n        }\r\n        getTechnics().then(response => setTechnics(response))\r\n    }, [])\r\n    return <Container>\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Typography>Перечень техники кабинета {room}</Typography>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} style={{display: \"flex\",justifyContent: \"space-around\", flexWrap: \"wrap\"}}>\r\n\r\n                {technicsByRoom.map(obj => {\r\n                    return <Card style={{maxWidth: \"300px\", minWidth: \"300px\", marginTop: \"15px\"}}>\r\n                        {obj.user}\r\n                        <List>\r\n                            {\r\n                                layout.map(el => {\r\n                                   return  obj.properties.map(technic => {\r\n                                        if (el === technic.type) {\r\n                                            return <ListItem component={Link} to={`/technics/${technic.id}`}>\r\n                                                <ListItemIcon>\r\n                                                    <Avatar variant={\"square\"} src={images[technic.name]}></Avatar>\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary={technic.name} secondary={technic.type}/>\r\n                                            </ListItem>\r\n                                        }\r\n                                    })\r\n                                })\r\n                            }\r\n                        </List>\r\n\r\n                    </Card>\r\n                })}\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n    </Container>\r\n}\r\n\r\nexport default RoomPage","D:\\PROJECTS\\tech\\src\\pages\\PrintersPage\\PrintersPage.jsx",["365","366","367","368","369","370"],"import {\r\n    Button,\r\n    Container, Divider,\r\n\r\n} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nimport groupElementsByDate from \"../../components/global/groupElementsByDate\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport StagesFueling from \"../../components/StagesFueling\";\r\nimport LastRefueling from \"../../components/LastRefueling\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst PrintersPage = ({\r\n                          allRefills,\r\n                          getPrintersAll,\r\n                          printers,\r\n                          addRefillForPrinter,\r\n                          updateCurrentRefills\r\n                      }) => {\r\n\r\n    useEffect(() => {\r\n        getPrintersAll()\r\n    }, [])\r\n\r\n    const [currentRefill, setCurrentRefill] = useState([])\r\n\r\n\r\n    const getCountRefill = (id) => {\r\n        let count = allRefills.filter(el => el.technicId === id).length\r\n        return count\r\n    }\r\n\r\n    const handlerRefills = (el) => {\r\n        let obj = {\r\n            \"technicId\": el.id,\r\n            \"name\": el.name,\r\n            \"user\": el.user,\r\n            \"createDate\": Date.now(),\r\n            \"countRefill\": getCountRefill(el.id) + 1\r\n        }\r\n        changeCategory(obj, 'new')\r\n    }\r\n    const changeCategory = (el, index) => {\r\n        let a = currentRefill.map((obj, i) => {\r\n            if (index === 3) {\r\n                index = 'finish'\r\n            }\r\n            if (index === 'new') {\r\n                if (i === 0) {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: [...obj.arr, el]\r\n                    }\r\n                } else {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: obj.arr\r\n                    }\r\n                }\r\n            } else if (index === 'finish') {\r\n                if (i === 3) {\r\n                    addRefillForPrinter(el.technicId, el)\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: obj.arr.filter(elem => el.technicId !== elem.technicId)\r\n                    }\r\n                } else {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: [...obj.arr]\r\n                    }\r\n                }\r\n            } else {\r\n                if (i === index) {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: obj.arr.filter(elem => el.technicId !== elem.technicId)\r\n                    }\r\n                } else if (i === (index + 1)) {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: [...obj.arr, el]\r\n                    }\r\n                } else {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: obj.arr\r\n                    }\r\n                }\r\n\r\n            }\r\n        })\r\n        setCurrentRefill(a)\r\n        updateCurrentRefills(a)\r\n    }\r\n    return (\r\n        <Container>\r\n            <StagesFueling\r\n                changeCategory={changeCategory}\r\n                currentRefill={currentRefill}\r\n                setCurrentRefill={setCurrentRefill}\r\n            />\r\n            {/*<Divider/>*/}\r\n            {/*<Button variant={\"contained\"} color={\"primary\"}>Добавить</Button>*/}\r\n            {/*<Button variant={\"contained\"} color={\"primary\"} component={Link} to={\"/printers/lastrefueling\"}>Список*/}\r\n            {/*    последних заправок</Button>*/}\r\n            {/*<Divider/>*/}\r\n            <LastRefueling printers={printers} handlerRefills={handlerRefills}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PrintersPage","D:\\PROJECTS\\tech\\src\\pages\\EventsPage\\EventsPage.jsx",["371","372"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Container} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n\r\n\r\nconst EventsPage = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container>\r\n            <div>\r\n\r\n            </div>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary=\"Клевжиц А.Ю. изменил инвентарный номер в принтере HP 1005\"\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    16.08.2021\r\n                                </Typography>\r\n                                {\" — Клевжиц А.Ю.\"}\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\"/>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary=\"Клевжиц А.Ю. изменил инвентарный номер в принтере HP 1005\"\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    16.08.2021\r\n                                </Typography>\r\n                                {\" — Клевжиц А.Ю.\"}\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\"/>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary=\"Клевжиц А.Ю. изменил инвентарный номер в принтере HP 1005\"\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    16.08.2021\r\n                                </Typography>\r\n                                {\" — Клевжиц А.Ю.\"}\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\"/>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary=\"Клевжиц А.Ю. изменил инвентарный номер в принтере HP 1005\"\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    16.08.2021\r\n                                </Typography>\r\n                                {\" — Клевжиц А.Ю.\"}\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n            </List>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default EventsPage","D:\\PROJECTS\\tech\\src\\pages\\TypePage\\TypePage.jsx",["373","374","375","376","377","378","379","380","381"],"D:\\PROJECTS\\tech\\src\\components\\global\\images.js",[],"D:\\PROJECTS\\tech\\src\\components\\global\\groupElementsByDate.js",["382"],"import formatDate from \"./formatDate\";\r\n\r\nconst groupElementsByDate = (array, property) => {\r\n    if (array) {\r\n        return array.reduce((previousValue, currentValue) => {\r\n            let b = formatDate(currentValue[property])\r\n            let objType = previousValue.find((element) => {\r\n                    let a = element[\"date\"]\r\n                    if (a === b) {\r\n                        return element\r\n                    }\r\n                }\r\n            );\r\n            if (!objType) {\r\n                const currentValueDDMMYYYY = formatDate(currentValue[property])\r\n                previousValue.push({\r\n                    \"date\": currentValueDDMMYYYY,\r\n                    properties: [currentValue]\r\n                });\r\n            } else {\r\n                objType.properties.push(currentValue);\r\n            }\r\n            return previousValue;\r\n        }, [])\r\n    } else {\r\n        return []\r\n    }\r\n\r\n}\r\nexport default groupElementsByDate","D:\\PROJECTS\\tech\\src\\components\\LastRefueling\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\ListTypes\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\Users\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\global\\formatDate.js",[],"D:\\PROJECTS\\tech\\src\\components\\LastRefueling\\LastRefueling.jsx",["383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403"],"import React, {useEffect, useState} from \"react\";\r\n\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {\r\n    Avatar,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText\r\n} from \"@material-ui/core\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport images from \"../global/images\";\r\nimport groupElementsByDate from \"../global/groupElementsByDate\";\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        height: 224,\r\n    },\r\n    tabs: {},\r\n}));\r\n\r\n\r\nconst LastRefueling = ({printers, handlerRefills, allRefills, getAllRefills}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const [activeCategory, setActiveCategory] = useState('')\r\n    const [refills, setRefills] = useState('')\r\n    const handleChange = (event, newValue) => setValue(newValue);\r\n\r\n    useEffect(() => {\r\n        setActiveCategory(printers)\r\n    }, [printers])\r\n\r\n    useEffect(() => {\r\n        getAllRefills()\r\n    }, [])\r\n    useEffect(() => {\r\n        setRefills(allRefills)\r\n    }, [allRefills])\r\n\r\n    return (\r\n            <h2>Список</h2>\r\n    )\r\n}\r\n\r\nexport default LastRefueling","D:\\PROJECTS\\tech\\src\\components\\ListTypes\\ListTypes.jsx",["404","405"],"D:\\PROJECTS\\tech\\src\\components\\Users\\Users.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\Modal\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\Icon\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\FiltersTechnic\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\ListTechnics1\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\ActiveCategories\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\Modal\\Modal.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\Icon\\Icon.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx",["406","407","408"],"import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport {List, ListItem, ListItemText} from \"@material-ui/core\";\r\nimport Icon from \"../Icon\";\r\nimport getProperty from \"../global/getProperty\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: 224,\r\n    },\r\n    tabs: {\r\n        width: \"30%\",\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    statisticItems: {\r\n        height: \"180px\",\r\n        overflow: \"auto\"\r\n    },\r\n    tabPanel: {\r\n        width: \"70%\",\r\n    },\r\n    active: {\r\n        background: \"red\"\r\n    }\r\n}));\r\n\r\n\r\nconst FiltersTechnics = ({getStatistic, technics, paramsTechnics, statistics, categories, handlerCategory}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    let val = paramsTechnics[value].property\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        getStatistic(val)\r\n    }, [value, technics])\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                {paramsTechnics.map((el, i) => {\r\n                    return <Tab key={i} label={el.title} {...a11yProps(i)} />\r\n                })}\r\n\r\n            </Tabs>\r\n\r\n            {paramsTechnics.map((el, i) => {\r\n                return <TabPanel\r\n                    className={classes.tabPanel}\r\n                    value={value} index={i}>\r\n                    <List key={i} className={classes.statisticItems}>\r\n                        {\r\n                            statistics.map((obj,i) => {\r\n                                let prop = getProperty(obj)\r\n                                let abbreviation = obj.[val]\r\n                                if (val === 'faculty') {\r\n                                    abbreviation = obj.[val]\r\n                                }\r\n                                const isContains = () => {\r\n                                    let a = categories.some(el => {\r\n                                        if (obj[prop] === el[prop]) {\r\n                                            return true\r\n                                        }\r\n                                    })\r\n                                    return a\r\n                                }\r\n                                return <ListItem key={i} onClick={() => handlerCategory(val, (obj.[val]))} button\r\n                                                 className={isContains() ? classes.active : null}>\r\n                                    <Icon type={val}/>\r\n                                    <ListItemText\r\n                                        primary={`${abbreviation || 'Не указано'} - ${obj.properties.length} шт`}/>\r\n                                </ListItem>\r\n                            })\r\n                        }\r\n                    </List>\r\n\r\n                </TabPanel>\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\nconst TabPanel = (props) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default FiltersTechnics","D:\\PROJECTS\\tech\\src\\components\\ActiveCategories\\ActiveCategories.jsx",["409"],"import React, {useEffect} from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Icon from \"../Icon\";\r\n\r\nconst ActiveCategories = ({categories, handlerCategory}) => {\r\n    const generateUrl = (arr) => {\r\n        let str = categories.map(el => {\r\n            if (el.length === 0) {\r\n                return null\r\n            } else {\r\n                return `${Object.keys(el)}=${Object.values(el)}`\r\n            }\r\n        })\r\n        return str.filter(n => n).join('&')\r\n    } // Генерация URL на основе активных категорий\r\n    let history = useHistory();\r\n    const categoriesElements = categories.map((el, i) => {\r\n        let type = Object.keys(el)[0]\r\n        let value = Object.values(el)[0]\r\n        return <Chip style={{cursor: \"pointer\"}} onClick={() => handlerCategory(type, value)} key={i}\r\n                     avatar={<Icon type={type}></Icon>} label={value}/>\r\n    }) // Генерация карточек по кабинетам\r\n\r\n    useEffect(() => {\r\n        let urlData = generateUrl(categories)\r\n        history.push({\r\n            search: `${(urlData === '&') ? '' : urlData}`\r\n        });\r\n    }, [categories])\r\n    return (\r\n        <>\r\n            {categoriesElements}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActiveCategories","D:\\PROJECTS\\tech\\src\\components\\ListTechnics1\\ListTechnics.jsx",["410","411","412","413","414","415","416","417"],"import React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Divider, List, Paper} from \"@material-ui/core\";\r\nimport Title from \"../Title\";\r\nimport MiniCardTechnic from \"../MiniCardTechnic\";\r\nimport MiniCardTechnicSkeleton from \"../MiniCardTechnic/MiniCardTechnicSceleton\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \"address\": {\r\n        textAlign: \"center\"\r\n    },\r\n    \"paper\": {\r\n        marginBottom: \"20px\"\r\n    }\r\n}));\r\n\r\nconst ListTechnics = ({getSchemaTechnics, schema, tech, categories, setCategories}) => {\r\n    const classes = useStyles()\r\n\r\n    const [schemaTechnics, setSchemaTechnics] = useState('')\r\n    const [technics, setSTechnics] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        getSchemaTechnics()\r\n    }, []) // Получение схемы кабинетов\r\n    useEffect(() => {\r\n        setSchemaTechnics(schema)\r\n    }, [schema]) // Записываем в useState схему\r\n    useEffect(() => {\r\n        setSTechnics(tech)\r\n    }, [tech]) // Записываем в useState выбранный тип техники\r\n    useEffect(() => {\r\n        if (technics) {\r\n            const isVisibleMinicard = (el) => {\r\n                let result = categories.some(element => {\r\n                    let aa = el.[Object.keys(element)]\r\n                    let bb = element.[Object.keys(element)]\r\n                    if (aa === bb) {\r\n                        return true\r\n                    } else {\r\n                        return false\r\n                    }\r\n                })\r\n                return result\r\n            }\r\n            let bbb = technics.map(el => {\r\n                if (isVisibleMinicard(el)) {\r\n                    return {...el, \"visible\": true}\r\n                } else {\r\n                    if (categories.length === 0) {\r\n                        return {...el, \"visible\": true}\r\n                    } else {\r\n                        return {...el, \"visible\": false}\r\n                    }\r\n\r\n                }\r\n            })\r\n            setSTechnics(bbb)\r\n        }\r\n    }, [categories]) // Скрываем элементы при фильтрации\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                schemaTechnics && <>\r\n                    {schemaTechnics.map(build => {\r\n                            if (technics.some(buildElement => buildElement.build === build.build)) {\r\n                                return <CardBuild classes={classes} build={build} technics={technics}/>\r\n                            }\r\n                        }\r\n                    )}\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListTechnics\r\n\r\n\r\nconst CardBuild = ({classes, build, technics}) => {\r\n    const isDisplayedBlock = (obj) => {\r\n        let b = technics.some(element => {\r\n            if (obj.rooms.includes(element.room)) {\r\n                return true\r\n            }\r\n        })\r\n        return b\r\n    } // Проверка, отображаем ли пустой блок\r\n\r\n    return <Paper className={classes.paper}>\r\n        <Title className={classes.address} text={build.address}/>\r\n        {\r\n            build.blocks.map(block => {\r\n                    if (isDisplayedBlock(block)) {\r\n                        return <CardBlock block={block} technics={technics} build={build}/>\r\n                    }\r\n\r\n                }\r\n            )\r\n        }\r\n        <Divider/>\r\n    </Paper>\r\n}\r\nconst CardBlock = ({block, technics, build}) => {\r\n    return <>\r\n        {\r\n            block.rooms.map(room => {\r\n                if (technics.some(el => ((el.room === room) && (el.visible !== false))) ) {\r\n                    return <div>\r\n                        <Typography>{block.name} <Link to={`/room/${room}`}>{room} кабинет</Link></Typography>\r\n                        {\r\n                            technics && <CardRoom technics={technics} room={room} build={build}/>\r\n                        }\r\n                        <Divider/>\r\n                    </div>\r\n                }\r\n            })}</>\r\n}\r\nconst CardRoom = ({technics, room, build}) => {\r\n    return <List dense>\r\n        {\r\n            technics.map((element, i) => {\r\n                if ((element.room === room) && (element.build === build.build) && (element.visible !== false)) {\r\n                    return <MiniCardTechnic key={i} el={element}/>\r\n                }\r\n            })\r\n        }\r\n    </List>\r\n}\r\n","D:\\PROJECTS\\tech\\src\\components\\global\\global.js",[],"D:\\PROJECTS\\tech\\src\\components\\global\\getProperty.js",[],"D:\\PROJECTS\\tech\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\MiniCardTechnic\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\Title\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx",["418","419","420"],"// import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n        Button,\r\n    Chip,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText, Tooltip\r\n} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Icon from \"../Icon\";\r\nimport images from \"../global/images\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n// const useStyles = makeStyles((theme) => ({}))\r\n\r\nconst MiniCardTechnic = ({el, keys}) => {\r\n\r\n    // const classes = useStyles();\r\n    return (\r\n        <ListItem component={Link} key={el} to={`/technics/${el.id}`} button>\r\n\r\n            <ListItemIcon>\r\n                <Avatar variant={\"square\"} src={images[el.name]}></Avatar>\r\n                {/*<Icon type={el.type} />*/}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={`[${!el.invent ?\r\n                    <Button color=\"secondary\">Заполнить</Button> : el.invent}] - ${el.name}`}\r\n                secondary={`${el.year} ${el.user}`}\r\n            />\r\n            <ListItemSecondaryAction style={{display: \"flex\"}}>\r\n                {Object.keys(keys).map(key => {\r\n                    if (!el[keys[key].key]) {\r\n                        return <Tooltip key={key} title={keys[key].name}><span style={{\r\n                            display: \"block\",\r\n                            width: \"10px\",\r\n                            textAlign: \"center\",\r\n                            color: \"white\",\r\n                            marginRight: \"2px\",\r\n                            background: keys[key].bg\r\n                        }}>!</span></Tooltip>\r\n                    }\r\n                })}\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MiniCardTechnic","D:\\PROJECTS\\tech\\src\\components\\Title\\Title.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\global\\countDays.js",[],"D:\\PROJECTS\\tech\\src\\components\\Common\\TextError.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\Accordion\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\StagesFueling\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\ListItemForm\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\Portfolio\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\Profile\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\Accordion\\Accordion.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\StagesFueling\\StagesFueling.jsx",["421","422","423","424"],"import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardContent, DialogActions, DialogContent, DialogContentText,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Menu, MenuItem\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport Modal from \"../Modal\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    copyText: {\r\n        marginLeft: \"10px\",\r\n        border: \"1px solid #a0a0a0\",\r\n        borderRadius: \"7px\",\r\n        cursor: \"pointer\",\r\n        padding: \"6px\",\r\n        '&:hover': {\r\n            backgroundColor: '#e6e6e6'\r\n        }\r\n    },\r\n}))\r\n\r\nconst StagesFueling = ({getCurrentRefills, addRefillForPrinter, setCurrentRefill, currentRefill, changeCategory}) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        async function fetchCurrentRefills() {\r\n            let response = await getCurrentRefills()\r\n            setCurrentRefill(response)\r\n            return response\r\n        }\r\n\r\n        fetchCurrentRefills()\r\n    }, [])\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [activeElement, setActiveElement] = useState('')\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    const handleClick = (event, el) => {\r\n        setActiveElement(el)\r\n        setOpen(true)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {currentRefill && <div style={{display: \"flex\", justifyContent: \"space-evenly\", margin: \"20px 0\"}}>\r\n                {currentRefill.map((obj, i) => {\r\n                    return <Card style={{width: \"23%\"}}>\r\n                        <CardContent>\r\n                            <Typography variant={\"h6\"}>{obj.name}</Typography>\r\n                            <List dense>\r\n                                {obj.arr.map(el => {\r\n                                    return <ListItem onDoubleClick={() => changeCategory(el, i)} button>\r\n                                        <ListItemText primary={`[${el.countRefill || 1}]  ${el.name}`}\r\n                                                      secondary={`${el.user}`}></ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton color=\"secondary\" aria-controls=\"simple-menu\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        onClick={(e) => handleClick(e, el)}>\r\n                                                <ArrowDropDownIcon/>\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                })}\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                })\r\n                }\r\n\r\n            </div>}\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleClose}>Далее</MenuItem>\r\n                <MenuItem onClick={handleClose}>Информация</MenuItem>\r\n                <MenuItem onClick={handleClose}>Удалить</MenuItem>\r\n            </Menu>\r\n            <Modal open={open} handleClose={handleClose} title={\"Добавить тип\"}>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Ссылка на заполнение (старых/пустых) картриджей - <a target={\"_blank\"}\r\n                                                                             href=\"https://docs.google.com/forms/d/e/1FAIpQLSfwyQfBoHyUEOBPXQfIfcq4CTGpxdW3SxuR842KNBWhLMqo_w/viewform\">здесь</a>\r\n                    </DialogContentText>\r\n                    <Typography>ФИО ответственного лица\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Клевжиц Александр Юрьевич')\r\n                        }}>Клевжиц Александр Юрьевич</Typography>\r\n                    </Typography>\r\n                    <Typography>Адрес электронной почты\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('ipkip.bspu@gmail.com@bspu.by')\r\n                        }}>ipkip.bspu@gmail.com</Typography>\r\n                    </Typography>\r\n                    <Typography>Номер кабинета\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Запрос')\r\n                        }}>Запрос</Typography>\r\n                    </Typography>\r\n                    <Typography>Год выпуска\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Запрос')\r\n                        }}>Запрос</Typography>\r\n                    </Typography>\r\n                    <Typography>Инвентарный номер оргтехники\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Запрос')\r\n                        }}>Запрос</Typography>\r\n                    </Typography>\r\n                    <Typography>Модель оргтехники и номер картриджа\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Запрос')\r\n                        }}>Запрос</Typography>\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose1} color=\"primary\">\r\n                        Отмена\r\n                    </Button>\r\n                    <Button onClick={handleClose1} color=\"primary\">\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StagesFueling","D:\\PROJECTS\\tech\\src\\components\\ListItemForm\\ListItemForm.jsx",[],"D:\\PROJECTS\\tech\\src\\components\\Profile\\Profile.jsx",["425","426","427"],"import {\r\n    Avatar, Divider,\r\n    Grid, Paper, Typography,\r\n} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport klevzhits from '../../assets/img/technics/klevzhits.jpg'\r\nimport Title from \"../Title\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    name: {\r\n        padding: \"20px\"\r\n    },\r\n    avatar: {\r\n        margin: '0 auto',\r\n    },\r\n    avatarInput: {\r\n        display: \"none\"\r\n    },\r\n    label: {\r\n        background: \"red\"\r\n    }\r\n\r\n}))\r\n\r\nconst Profile = ({user}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <>\r\n                <Grid item xs={4}>\r\n                    <Avatar\r\n                        className={classes.avatar}\r\n                        src={klevzhits}\r\n                        variant=\"circular\"\r\n                    />\r\n                    <Typography>\r\n                        {\r\n                            Object.keys(user.socialLinks).map(key => {\r\n                                return <a href={user.socialLinks[key]}>{key}</a>\r\n                            })\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Typography variant=\"h5\" component=\"h3\" className={classes.name}>{user.name}</Typography>\r\n                    <Divider/>\r\n                    <Title text=\"О себе\"></Title>\r\n                    <Typography>{user.aboutMe}</Typography>\r\n                    <Divider/>\r\n\r\n                    <Title text=\"Контакты\"></Title>\r\n                    <Typography>{user.phone}</Typography>\r\n                    <Typography>{user.email}</Typography>\r\n                    <Divider/>\r\n\r\n                    <Title text=\"Опыт работы\"></Title>\r\n                    <Typography>{user.workExperience.map(el => {\r\n                        return <Typography>{el.company}</Typography>\r\n                    })\r\n                    }</Typography>\r\n                    <Divider/>\r\n\r\n                    <Title text=\"Образование\"></Title>\r\n                    <Typography>{user.education.map(el => {\r\n                        return <Typography>{el.company}</Typography>\r\n                    })\r\n                    }</Typography>\r\n                </Grid>\r\n            </>\r\n        </Grid>\r\n    )\r\n}\r\nexport default withRouter(Profile);","D:\\PROJECTS\\tech\\src\\components\\Portfolio\\Portfolio.jsx",["428"],"import {withRouter} from \"react-router\";\r\nimport React from \"react\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\n\r\nconst Portfolio = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Paper>\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Portfolio);","D:\\PROJECTS\\tech\\src\\components\\AutocompleteTextarea\\index.js",[],"D:\\PROJECTS\\tech\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx",["429","430"],"import {IconButton, TextField} from \"@material-ui/core\";\r\nimport Autocomplete, {createFilterOptions} from \"@material-ui/lab/Autocomplete\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    }\r\n}))\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst AutocompleteTextarea = ({\r\n                                  activeTechnic,\r\n                                  property,\r\n                                  updateTechnic,\r\n                                  setEditMode,\r\n                                  getDataAutocomplete,\r\n                                  text,\r\n                                  autocompleteData\r\n                              }) => {\r\n    const classes = useStyles()\r\n    const [array, setArray] = useState([''])\r\n    const [value, setValue] = useState(null)\r\n\r\n    const {register, handleSubmit, control, reset} = useForm();\r\n\r\n    useEffect(() => {\r\n        getDataAutocomplete(property)\r\n    }, [])\r\n    useEffect(() => {\r\n        setArray(autocompleteData)\r\n    }, [autocompleteData])\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSubmit(onSubmit)();\r\n            setArray([])\r\n        }\r\n        if (e.key === 'Escape') {\r\n            setEditMode(false)\r\n        }\r\n    }\r\n    const selectItem = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setValue({\r\n                [property]: newValue,\r\n            });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setValue({\r\n                [property]: newValue.inputValue,\r\n            });\r\n        } else {\r\n            setValue(newValue);\r\n            debugger\r\n        }\r\n    }\r\n    const onSubmit = (obj) => {\r\n        if (obj[property] === undefined) {\r\n            let val = {\r\n                [property]: value[property]\r\n            }\r\n            updateTechnic(activeTechnic.id, val)\r\n            setEditMode(false)\r\n            reset()\r\n        } else {\r\n            updateTechnic(activeTechnic.id, obj)\r\n            setEditMode(false)\r\n            reset()\r\n        }\r\n    }\r\n    const handleClickAway = () => {\r\n        setEditMode(false)\r\n        setArray('')\r\n    };\r\n    return (\r\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            {\r\n                ((property === 'date') || (property === 'year')) &&\r\n                <ClickAwayListener onClickAway={handleClickAway}><TextField\r\n                    id=\"date\"\r\n                    label={text}\r\n                    type=\"date\"\r\n                    {...register(property)}\r\n                    defaultValue=\"2017-05-24\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                /></ClickAwayListener>\r\n            }\r\n\r\n            {\r\n                ((property === 'invent') || (property === 'zavod')) &&\r\n                <ClickAwayListener onClickAway={handleClickAway}>\r\n                    <TextField onKeyDown={handleKeyDown} defaultValue={activeTechnic[property]}\r\n                               autoFocus={true} {...register(property)} />\r\n                </ClickAwayListener>\r\n            }\r\n\r\n            {\r\n                (\r\n                    (property === 'room')\r\n                    || (property === 'build')\r\n                    || (property === 'user')\r\n                    || (property === 'faculty')\r\n                    || (property === 'matfyo')\r\n                    || (property === 'type')\r\n                    || (property === 'name')\r\n                ) &&\r\n                <Controller\r\n                    name={property}\r\n                    control={control}\r\n                    render={({field}) =><Autocomplete\r\n                        filterOptions={(options, params) => {\r\n                            const filtered = filter(options, params);\r\n                            if (params.inputValue !== '') {\r\n                                filtered.push({\r\n                                    inputValue: params.inputValue,\r\n                                    [property]: `Add \"${params.inputValue}\"`,\r\n                                });\r\n                            }\r\n                            return filtered;\r\n                        }}\r\n                        selectOnFocus\r\n                        defaultValue={activeTechnic[property]}\r\n                        clearOnBlur\r\n                        onKeyDown={handleKeyDown}\r\n                        onChange={selectItem}\r\n                        handleHomeEndKeys\r\n                        id=\"free-solo-with-text-demo\"\r\n                        options={array}\r\n                        getOptionLabel={(option) => {\r\n                            if (typeof option === 'string') {\r\n                                return option;\r\n                            }\r\n                            if (option.inputValue) {\r\n                                return option.inputValue;\r\n                            }\r\n                            return option[property];\r\n                        }}\r\n                        renderOption={(option) => option[property]}\r\n                        style={{width: 250}}\r\n                        freeSolo\r\n                        renderInput={(field) => (\r\n                            <TextField autoFocus={true} {...field} label={text} variant=\"outlined\"/>\r\n                        )}\r\n                    />\r\n\r\n\r\n                    }\r\n                />\r\n            }\r\n\r\n            <div>\r\n                <IconButton\r\n                    color=\"primary\" aria-label=\"upload picture\" type=\"submit\"\r\n                >\r\n                    <SaveIcon/>\r\n                </IconButton>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nexport default AutocompleteTextarea",{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","severity":1,"message":"436","line":1,"column":22,"nodeType":"437","messageId":"438","endLine":1,"endColumn":29},{"ruleId":"435","severity":1,"message":"439","line":94,"column":9,"nodeType":"437","messageId":"438","endLine":94,"endColumn":17},{"ruleId":"435","severity":1,"message":"439","line":444,"column":13,"nodeType":"437","messageId":"438","endLine":444,"endColumn":21},{"ruleId":"440","severity":1,"message":"441","line":10,"column":8,"nodeType":"442","endLine":10,"endColumn":10,"suggestions":"443"},{"ruleId":"435","severity":1,"message":"444","line":2,"column":9,"nodeType":"437","messageId":"438","endLine":2,"endColumn":18},{"ruleId":"435","severity":1,"message":"445","line":2,"column":20,"nodeType":"437","messageId":"438","endLine":2,"endColumn":40},{"ruleId":"435","severity":1,"message":"446","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":17},{"ruleId":"435","severity":1,"message":"447","line":6,"column":8,"nodeType":"437","messageId":"438","endLine":6,"endColumn":17},{"ruleId":"435","severity":1,"message":"448","line":3,"column":9,"nodeType":"437","messageId":"438","endLine":3,"endColumn":16},{"ruleId":"435","severity":1,"message":"449","line":1,"column":8,"nodeType":"437","messageId":"438","endLine":1,"endColumn":27},{"ruleId":"440","severity":1,"message":"450","line":8,"column":8,"nodeType":"442","endLine":8,"endColumn":10,"suggestions":"451"},{"ruleId":"440","severity":1,"message":"452","line":25,"column":8,"nodeType":"442","endLine":25,"endColumn":20,"suggestions":"453"},{"ruleId":"435","severity":1,"message":"454","line":5,"column":9,"nodeType":"437","messageId":"438","endLine":5,"endColumn":17},{"ruleId":"435","severity":1,"message":"455","line":20,"column":11,"nodeType":"437","messageId":"438","endLine":20,"endColumn":18},{"ruleId":"440","severity":1,"message":"456","line":117,"column":8,"nodeType":"442","endLine":117,"endColumn":10,"suggestions":"457"},{"ruleId":"435","severity":1,"message":"458","line":128,"column":36,"nodeType":"437","messageId":"438","endLine":128,"endColumn":41},{"ruleId":"435","severity":1,"message":"459","line":128,"column":55,"nodeType":"437","messageId":"438","endLine":128,"endColumn":61},{"ruleId":"460","severity":1,"message":"461","line":178,"column":27,"nodeType":"462","endLine":180,"endColumn":17},{"ruleId":"435","severity":1,"message":"463","line":12,"column":12,"nodeType":"437","messageId":"438","endLine":12,"endColumn":20},{"ruleId":"440","severity":1,"message":"464","line":19,"column":8,"nodeType":"442","endLine":19,"endColumn":10,"suggestions":"465"},{"ruleId":"466","severity":1,"message":"467","line":34,"column":71,"nodeType":"468","messageId":"469","endLine":34,"endColumn":73},{"ruleId":"435","severity":1,"message":"470","line":2,"column":5,"nodeType":"437","messageId":"438","endLine":2,"endColumn":11},{"ruleId":"435","severity":1,"message":"471","line":3,"column":16,"nodeType":"437","messageId":"438","endLine":3,"endColumn":23},{"ruleId":"435","severity":1,"message":"449","line":8,"column":8,"nodeType":"437","messageId":"438","endLine":8,"endColumn":27},{"ruleId":"435","severity":1,"message":"472","line":9,"column":9,"nodeType":"437","messageId":"438","endLine":9,"endColumn":19},{"ruleId":"435","severity":1,"message":"473","line":12,"column":9,"nodeType":"437","messageId":"438","endLine":12,"endColumn":13},{"ruleId":"440","severity":1,"message":"474","line":24,"column":8,"nodeType":"442","endLine":24,"endColumn":10,"suggestions":"475"},{"ruleId":"435","severity":1,"message":"476","line":1,"column":16,"nodeType":"437","messageId":"438","endLine":1,"endColumn":25},{"ruleId":"435","severity":1,"message":"454","line":1,"column":27,"nodeType":"437","messageId":"438","endLine":1,"endColumn":35},{"ruleId":"435","severity":1,"message":"477","line":1,"column":32,"nodeType":"437","messageId":"438","endLine":1,"endColumn":43},{"ruleId":"435","severity":1,"message":"478","line":1,"column":45,"nodeType":"437","messageId":"438","endLine":1,"endColumn":55},{"ruleId":"435","severity":1,"message":"479","line":105,"column":11,"nodeType":"437","messageId":"438","endLine":105,"endColumn":17},{"ruleId":"435","severity":1,"message":"480","line":108,"column":25,"nodeType":"437","messageId":"438","endLine":108,"endColumn":39},{"ruleId":"440","severity":1,"message":"481","line":134,"column":8,"nodeType":"442","endLine":134,"endColumn":21,"suggestions":"482"},{"ruleId":"483","severity":2,"message":"484","line":144,"column":49,"nodeType":"437","messageId":"485","endLine":144,"endColumn":59},{"ruleId":"483","severity":2,"message":"484","line":146,"column":63,"nodeType":"437","messageId":"485","endLine":146,"endColumn":73},{"ruleId":"483","severity":2,"message":"484","line":148,"column":44,"nodeType":"437","messageId":"485","endLine":148,"endColumn":54},{"ruleId":"483","severity":2,"message":"484","line":178,"column":14,"nodeType":"437","messageId":"485","endLine":178,"endColumn":24},{"ruleId":"466","severity":1,"message":"486","line":7,"column":56,"nodeType":"468","messageId":"469","endLine":7,"endColumn":58},{"ruleId":"435","severity":1,"message":"487","line":4,"column":8,"nodeType":"437","messageId":"438","endLine":4,"endColumn":12},{"ruleId":"435","severity":1,"message":"488","line":5,"column":8,"nodeType":"437","messageId":"438","endLine":5,"endColumn":11},{"ruleId":"435","severity":1,"message":"473","line":8,"column":9,"nodeType":"437","messageId":"438","endLine":8,"endColumn":13},{"ruleId":"435","severity":1,"message":"489","line":10,"column":5,"nodeType":"437","messageId":"438","endLine":10,"endColumn":11},{"ruleId":"435","severity":1,"message":"490","line":11,"column":5,"nodeType":"437","messageId":"438","endLine":11,"endColumn":15},{"ruleId":"435","severity":1,"message":"491","line":12,"column":5,"nodeType":"437","messageId":"438","endLine":12,"endColumn":9},{"ruleId":"435","severity":1,"message":"492","line":13,"column":5,"nodeType":"437","messageId":"438","endLine":13,"endColumn":13},{"ruleId":"435","severity":1,"message":"493","line":14,"column":5,"nodeType":"437","messageId":"438","endLine":14,"endColumn":19},{"ruleId":"435","severity":1,"message":"494","line":15,"column":5,"nodeType":"437","messageId":"438","endLine":15,"endColumn":28},{"ruleId":"435","severity":1,"message":"495","line":16,"column":5,"nodeType":"437","messageId":"438","endLine":16,"endColumn":17},{"ruleId":"435","severity":1,"message":"496","line":18,"column":8,"nodeType":"437","messageId":"438","endLine":18,"endColumn":25},{"ruleId":"435","severity":1,"message":"497","line":19,"column":8,"nodeType":"437","messageId":"438","endLine":19,"endColumn":14},{"ruleId":"435","severity":1,"message":"449","line":20,"column":8,"nodeType":"437","messageId":"438","endLine":20,"endColumn":27},{"ruleId":"435","severity":1,"message":"498","line":22,"column":10,"nodeType":"437","messageId":"438","endLine":22,"endColumn":18},{"ruleId":"435","severity":1,"message":"499","line":42,"column":10,"nodeType":"437","messageId":"438","endLine":42,"endColumn":19},{"ruleId":"435","severity":1,"message":"455","line":60,"column":11,"nodeType":"437","messageId":"438","endLine":60,"endColumn":18},{"ruleId":"435","severity":1,"message":"500","line":61,"column":12,"nodeType":"437","messageId":"438","endLine":61,"endColumn":17},{"ruleId":"435","severity":1,"message":"501","line":62,"column":12,"nodeType":"437","messageId":"438","endLine":62,"endColumn":26},{"ruleId":"435","severity":1,"message":"502","line":63,"column":12,"nodeType":"437","messageId":"438","endLine":63,"endColumn":19},{"ruleId":"435","severity":1,"message":"503","line":64,"column":11,"nodeType":"437","messageId":"438","endLine":64,"endColumn":23},{"ruleId":"440","severity":1,"message":"450","line":72,"column":8,"nodeType":"442","endLine":72,"endColumn":10,"suggestions":"504"},{"ruleId":"435","severity":1,"message":"479","line":29,"column":11,"nodeType":"437","messageId":"438","endLine":29,"endColumn":17},{"ruleId":"440","severity":1,"message":"441","line":44,"column":8,"nodeType":"442","endLine":44,"endColumn":10,"suggestions":"505"},{"ruleId":"435","severity":1,"message":"454","line":1,"column":27,"nodeType":"437","messageId":"438","endLine":1,"endColumn":35},{"ruleId":"440","severity":1,"message":"506","line":45,"column":8,"nodeType":"442","endLine":45,"endColumn":25,"suggestions":"507"},{"ruleId":"466","severity":1,"message":"508","line":75,"column":64,"nodeType":"468","messageId":"469","endLine":75,"endColumn":66},{"ruleId":"440","severity":1,"message":"509","line":30,"column":8,"nodeType":"442","endLine":30,"endColumn":20,"suggestions":"510"},{"ruleId":"435","severity":1,"message":"511","line":7,"column":8,"nodeType":"437","messageId":"438","endLine":7,"endColumn":31},{"ruleId":"440","severity":1,"message":"512","line":28,"column":8,"nodeType":"442","endLine":28,"endColumn":10,"suggestions":"513"},{"ruleId":"440","severity":1,"message":"514","line":63,"column":8,"nodeType":"442","endLine":63,"endColumn":20,"suggestions":"515"},{"ruleId":"466","severity":1,"message":"467","line":70,"column":47,"nodeType":"468","messageId":"469","endLine":70,"endColumn":49},{"ruleId":"466","severity":1,"message":"508","line":87,"column":39,"nodeType":"468","messageId":"469","endLine":87,"endColumn":41},{"ruleId":"466","severity":1,"message":"467","line":98,"column":36,"nodeType":"468","messageId":"469","endLine":98,"endColumn":38},{"ruleId":"466","severity":1,"message":"467","line":112,"column":34,"nodeType":"468","messageId":"469","endLine":112,"endColumn":36},{"ruleId":"466","severity":1,"message":"467","line":127,"column":39,"nodeType":"468","messageId":"469","endLine":127,"endColumn":41},{"ruleId":"435","severity":1,"message":"516","line":4,"column":5,"nodeType":"437","messageId":"438","endLine":4,"endColumn":9},{"ruleId":"435","severity":1,"message":"517","line":12,"column":8,"nodeType":"437","messageId":"438","endLine":12,"endColumn":12},{"ruleId":"466","severity":1,"message":"467","line":34,"column":44,"nodeType":"468","messageId":"469","endLine":34,"endColumn":46},{"ruleId":"440","severity":1,"message":"518","line":42,"column":8,"nodeType":"442","endLine":42,"endColumn":10,"suggestions":"519"},{"ruleId":"435","severity":1,"message":"520","line":45,"column":12,"nodeType":"437","messageId":"438","endLine":45,"endColumn":25},{"ruleId":"435","severity":1,"message":"521","line":58,"column":11,"nodeType":"437","messageId":"438","endLine":58,"endColumn":26},{"ruleId":"522","severity":1,"message":"523","line":107,"column":75,"nodeType":"524","endLine":108,"endColumn":185},{"ruleId":"435","severity":1,"message":"525","line":3,"column":11,"nodeType":"437","messageId":"438","endLine":3,"endColumn":16},{"ruleId":"435","severity":1,"message":"476","line":5,"column":16,"nodeType":"437","messageId":"438","endLine":5,"endColumn":25},{"ruleId":"435","severity":1,"message":"454","line":5,"column":27,"nodeType":"437","messageId":"438","endLine":5,"endColumn":35},{"ruleId":"435","severity":1,"message":"526","line":3,"column":9,"nodeType":"437","messageId":"438","endLine":3,"endColumn":13},{"ruleId":"435","severity":1,"message":"527","line":3,"column":27,"nodeType":"437","messageId":"438","endLine":3,"endColumn":33},{"ruleId":"440","severity":1,"message":"528","line":34,"column":8,"nodeType":"442","endLine":34,"endColumn":10,"suggestions":"529"},"no-native-reassign",["530"],"no-negated-in-lhs",["531"],"no-unused-vars","'techAPI' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTypes'. Either include it or remove the dependency array. If 'getTypes' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["532"],"'sendOrder' is defined but never used.","'updateCurrentRefills' is defined but never used.","'UsersPage' is defined but never used.","'TypesPage' is defined but never used.","'addUser' is defined but never used.","'groupElementsByDate' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllRefills'. Either include it or remove the dependency array. If 'getAllRefills' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["533"],"React Hook useEffect has missing dependencies: 'currentPage', 'getUsers', and 'rowsPerPage'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["534"],"'useState' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getComments', 'getRefills', 'getTechnicInfo', and 'params.id'. Either include them or remove the dependency array. If 'getTechnicInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["535"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'technics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTechnicsByRoom' and 'room'. Either include them or remove the dependency array. If 'getTechnicsByRoom' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["536"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used.","'Divider' is defined but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getPrintersAll'. Either include it or remove the dependency array. If 'getPrintersAll' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["537"],"'useEffect' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'params' is assigned a value but never used.","'setActiveTypes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTechnics'. Either include it or remove the dependency array. If 'getTechnics' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["538"],"no-undef","'activeType' is not defined.","undef","Array.prototype.find() expects a value to be returned at the end of arrow function.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Avatar' is defined but never used.","'IconButton' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'images' is defined but never used.","'TabPanel' is defined but never used.","'a11yProps' is defined but never used.","'value' is assigned a value but never used.","'activeCategory' is assigned a value but never used.","'refills' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["539"],["540"],"React Hook useEffect has missing dependencies: 'getStatistic' and 'val'. Either include them or remove the dependency array. If 'getStatistic' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["541"],"Array.prototype.some() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'generateUrl' and 'history'. Either include them or remove the dependency array.",["542"],"'MiniCardTechnicSkeleton' is defined but never used.","React Hook useEffect has a missing dependency: 'getSchemaTechnics'. Either include it or remove the dependency array. If 'getSchemaTechnics' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["543"],"React Hook useEffect has a missing dependency: 'technics'. Either include it or remove the dependency array.",["544"],"'Chip' is defined but never used.","'Icon' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentRefills' and 'setCurrentRefill'. Either include them or remove the dependency array. If 'getCurrentRefills' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["545"],"'activeElement' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Paper' is defined but never used.","'Grid' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'getDataAutocomplete' and 'property'. Either include them or remove the dependency array. If 'getDataAutocomplete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["546"],"no-global-assign","no-unsafe-negation",{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"549","fix":"561"},{"desc":"547","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},"Update the dependencies array to be: [getTypes]",{"range":"575","text":"576"},"Update the dependencies array to be: [getAllRefills]",{"range":"577","text":"578"},"Update the dependencies array to be: [currentPage, getUsers, rowsPerPage, sectionUrl]",{"range":"579","text":"580"},"Update the dependencies array to be: [getComments, getRefills, getTechnicInfo, params.id]",{"range":"581","text":"582"},"Update the dependencies array to be: [getTechnicsByRoom, room]",{"range":"583","text":"584"},"Update the dependencies array to be: [getPrintersAll]",{"range":"585","text":"586"},"Update the dependencies array to be: [activeTypes, getTechnics]",{"range":"587","text":"588"},{"range":"589","text":"578"},{"range":"590","text":"576"},"Update the dependencies array to be: [value, technics, getStatistic, val]",{"range":"591","text":"592"},"Update the dependencies array to be: [categories, generateUrl, history]",{"range":"593","text":"594"},"Update the dependencies array to be: [getSchemaTechnics]",{"range":"595","text":"596"},"Update the dependencies array to be: [categories, technics]",{"range":"597","text":"598"},"Update the dependencies array to be: [getCurrentRefills, setCurrentRefill]",{"range":"599","text":"600"},"Update the dependencies array to be: [getDataAutocomplete, property]",{"range":"601","text":"602"},[299,301],"[getTypes]",[242,244],"[getAllRefills]",[830,842],"[currentPage, getUsers, rowsPerPage, sectionUrl]",[3312,3314],"[getComments, getRefills, getTechnicInfo, params.id]",[970,972],"[getTechnicsByRoom, room]",[754,756],"[getPrintersAll]",[3936,3949],"[activeTypes, getTechnics]",[1966,1968],[1248,1250],[1346,1363],"[value, technics, getStatistic, val]",[1149,1161],"[categories, generateUrl, history]",[886,888],"[getSchemaTechnics]",[2121,2133],"[categories, technics]",[1198,1200],"[getCurrentRefills, setCurrentRefill]",[1243,1245],"[getDataAutocomplete, property]"]
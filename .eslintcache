[{"D:\\newprojects\\techs\\src\\index.js":"1","D:\\newprojects\\techs\\src\\reportWebVitals.js":"2","D:\\newprojects\\techs\\src\\redux\\redux-store.js":"3","D:\\newprojects\\techs\\src\\components\\App\\index.js":"4","D:\\newprojects\\techs\\src\\redux\\Users-reducer.js":"5","D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js":"6","D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js":"7","D:\\newprojects\\techs\\src\\redux\\App-reducer.js":"8","D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js":"9","D:\\newprojects\\techs\\src\\api\\api.js":"10","D:\\newprojects\\techs\\src\\components\\App\\App.jsx":"11","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js":"12","D:\\newprojects\\techs\\src\\components\\Header\\index.js":"13","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js":"14","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx":"15","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx":"16","D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx":"17","D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js":"18","D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js":"19","D:\\newprojects\\techs\\src\\pages\\Profile\\index.js":"20","D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js":"21","D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx":"22","D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx":"23","D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx":"24","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx":"25","D:\\newprojects\\techs\\src\\components\\Preloader\\index.js":"26","D:\\newprojects\\techs\\src\\components\\Profile\\index.js":"27","D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx":"28","D:\\newprojects\\techs\\src\\components\\Preloader\\Preloader.jsx":"29","D:\\newprojects\\techs\\src\\components\\Profile\\ProfileEdit.jsx":"30","D:\\newprojects\\techs\\src\\components\\Profile\\ProfileView.jsx":"31","D:\\newprojects\\techs\\src\\components\\FollowList\\index.js":"32","D:\\newprojects\\techs\\src\\components\\SocialLink\\index.js":"33","D:\\newprojects\\techs\\src\\components\\Status\\index.js":"34","D:\\newprojects\\techs\\src\\components\\SocialLink\\SocialLink.jsx":"35","D:\\newprojects\\techs\\src\\components\\FollowList\\FolowList.jsx":"36","D:\\newprojects\\techs\\src\\components\\Status\\Status.jsx":"37","D:\\newprojects\\techs\\src\\components\\global\\global.js":"38","D:\\newprojects\\techs\\src\\components\\Users\\index.js":"39","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx":"40","D:\\newprojects\\techs\\src\\components\\Button\\index.js":"41","D:\\newprojects\\techs\\src\\components\\Button\\Button.jsx":"42","D:\\newprojects\\techs\\src\\components\\Users\\SectionsUsers\\index.js":"43","D:\\newprojects\\techs\\src\\components\\Users\\SectionsUsers\\SectionsUsers.jsx":"44","D:\\newprojects\\techs\\src\\components\\Posts\\index.js":"45","D:\\newprojects\\techs\\src\\components\\Posts\\Posts.jsx":"46","D:\\newprojects\\techs\\src\\components\\Post\\Post.jsx":"47","D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js":"48","D:\\newprojects\\techs\\src\\components\\Technics\\index.js":"49","D:\\newprojects\\techs\\src\\components\\Technics\\Technics.jsx":"50","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js":"51","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx":"52","D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js":"53","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx":"54","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js":"55","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx":"56","D:\\newprojects\\techs\\src\\components\\Modal\\index.js":"57","D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx":"58","D:\\newprojects\\techs\\src\\components\\FormTech\\FormTech.jsx":"59"},{"size":585,"mtime":1619453189691,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"61"},{"size":799,"mtime":1623688791559,"results":"63","hashOfConfig":"61"},{"size":366,"mtime":1620070726968,"results":"64","hashOfConfig":"61"},{"size":4067,"mtime":1622231323629,"results":"65","hashOfConfig":"61"},{"size":7712,"mtime":1622835922035,"results":"66","hashOfConfig":"61"},{"size":2414,"mtime":1613510004007,"results":"67","hashOfConfig":"61"},{"size":800,"mtime":1624975646264,"results":"68","hashOfConfig":"61"},{"size":2962,"mtime":1622061365007,"results":"69","hashOfConfig":"61"},{"size":3257,"mtime":1625906688231,"results":"70","hashOfConfig":"61"},{"size":758,"mtime":1624975680468,"results":"71","hashOfConfig":"61"},{"size":198,"mtime":1622062179840,"results":"72","hashOfConfig":"61"},{"size":348,"mtime":1620069278960,"results":"73","hashOfConfig":"61"},{"size":203,"mtime":1619365649818,"results":"74","hashOfConfig":"61"},{"size":362,"mtime":1619813994120,"results":"75","hashOfConfig":"61"},{"size":1413,"mtime":1625045909040,"results":"76","hashOfConfig":"61"},{"size":2821,"mtime":1624985699994,"results":"77","hashOfConfig":"61"},{"size":1741,"mtime":1619363631463,"results":"78","hashOfConfig":"61"},{"size":488,"mtime":1620058626451,"results":"79","hashOfConfig":"61"},{"size":201,"mtime":1621960851643,"results":"80","hashOfConfig":"61"},{"size":456,"mtime":1621279691901,"results":"81","hashOfConfig":"61"},{"size":3943,"mtime":1620319031757,"results":"82","hashOfConfig":"61"},{"size":335,"mtime":1622107163360,"results":"83","hashOfConfig":"61"},{"size":2033,"mtime":1622836417830,"results":"84","hashOfConfig":"61"},{"size":205,"mtime":1618141801688,"results":"85","hashOfConfig":"61"},{"size":63,"mtime":1619384275192,"results":"86","hashOfConfig":"61"},{"size":444,"mtime":1622282851834,"results":"87","hashOfConfig":"61"},{"size":4020,"mtime":1622285407784,"results":"88","hashOfConfig":"61"},{"size":154,"mtime":1619384365533,"results":"89","hashOfConfig":"61"},{"size":4362,"mtime":1622276878074,"results":"90","hashOfConfig":"61"},{"size":1658,"mtime":1622276863657,"results":"91","hashOfConfig":"61"},{"size":260,"mtime":1622060242810,"results":"92","hashOfConfig":"61"},{"size":68,"mtime":1619550059029,"results":"93","hashOfConfig":"61"},{"size":337,"mtime":1620320732531,"results":"94","hashOfConfig":"61"},{"size":760,"mtime":1621022329453,"results":"95","hashOfConfig":"61"},{"size":1056,"mtime":1622060047880,"results":"96","hashOfConfig":"61"},{"size":1437,"mtime":1621022383173,"results":"97","hashOfConfig":"61"},{"size":335,"mtime":1620575691521,"results":"98","hashOfConfig":"61"},{"size":665,"mtime":1621020966360,"results":"99","hashOfConfig":"61"},{"size":2563,"mtime":1622837644323,"results":"100","hashOfConfig":"61"},{"size":55,"mtime":1619455832234,"results":"101","hashOfConfig":"61"},{"size":261,"mtime":1619465929329,"results":"102","hashOfConfig":"61"},{"size":76,"mtime":1621280760539,"results":"103","hashOfConfig":"61"},{"size":559,"mtime":1621281847854,"results":"104","hashOfConfig":"61"},{"size":217,"mtime":1622829046391,"results":"105","hashOfConfig":"61"},{"size":608,"mtime":1622835984835,"results":"106","hashOfConfig":"61"},{"size":1140,"mtime":1622835387711,"results":"107","hashOfConfig":"61"},{"size":6361,"mtime":1626686057461,"results":"108","hashOfConfig":"61"},{"size":360,"mtime":1623704848703,"results":"109","hashOfConfig":"61"},{"size":509,"mtime":1623785969763,"results":"110","hashOfConfig":"61"},{"size":415,"mtime":1625133389273,"results":"111","hashOfConfig":"61"},{"size":1845,"mtime":1625133416507,"results":"112","hashOfConfig":"61"},{"size":612,"mtime":1626250523536,"results":"113","hashOfConfig":"61"},{"size":11709,"mtime":1626798013406,"results":"114","hashOfConfig":"61"},{"size":371,"mtime":1625047268985,"results":"115","hashOfConfig":"61"},{"size":3012,"mtime":1626713377356,"results":"116","hashOfConfig":"61"},{"size":53,"mtime":1625225106329,"results":"117","hashOfConfig":"61"},{"size":962,"mtime":1626115748645,"results":"118","hashOfConfig":"61"},{"size":3189,"mtime":1626645438720,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"17rpeos",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"122"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"122"},"D:\\newprojects\\techs\\src\\index.js",[],["253","254"],"D:\\newprojects\\techs\\src\\reportWebVitals.js",[],"D:\\newprojects\\techs\\src\\redux\\redux-store.js",[],"D:\\newprojects\\techs\\src\\components\\App\\index.js",[],"D:\\newprojects\\techs\\src\\redux\\Users-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\App-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js",[],"D:\\newprojects\\techs\\src\\api\\api.js",[],"D:\\newprojects\\techs\\src\\components\\App\\App.jsx",["255"],"import React, {useEffect} from \"react\";\r\nimport Header from \"../Header\";\r\nimport {Switch} from \"react-router-dom\";\r\nimport AppWithRouter from \"./AppWithRouter\";\r\nimport Authorization from \"./Authorization\";\r\nimport Preloader from \"../Preloader\";\r\n\r\nconst App = ({isAuth, initialize, initialized}) => {\r\n    // useEffect(() => {\r\n    //     initialize()\r\n    // },[initialize]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !initialized ? <Preloader />\r\n                : <>\r\n                    <Header/>\r\n\r\n                        <Switch>\r\n                            {!isAuth ? <AppWithRouter/> : <Authorization/>}\r\n\r\n                        </Switch>\r\n                </>\r\n            }\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default App\r\n","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Header\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js",[],"D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx",["256"],"import React, {useEffect} from \"react\";\r\nimport {Container, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport Preloader from \"../../components/Preloader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n// import {makeStyles} from \"@material-ui/styles\";\r\nimport Users from \"../../components/Users\";\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n// });\r\n\r\nconst UsersPage = ({isFetching, rowsPerPage, currentPage, getUsers, match}) => {\r\n    let sectionUrl = match.params.section\r\n    const [value, setValue] = React.useState(0);\r\n    useEffect(() => {\r\n        if (sectionUrl === 'following') {\r\n            setValue(1)\r\n            getUsers(rowsPerPage, currentPage, true);\r\n        }\r\n        if (sectionUrl === 'allusers') {\r\n            setValue(0)\r\n            getUsers(rowsPerPage, currentPage, false);\r\n        }\r\n    }, [sectionUrl])\r\n    // const classes = useStyles();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!isFetching\r\n                ? <Container>\r\n                    <Typography variant=\"body1\" component=\"span\">\r\n                    </Typography>\r\n                    <Paper square>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={handleChange}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"All Users\" component={Link} to=\"/users/allusers\"/>\r\n                            <Tab label=\"following\" component={Link} to=\"/users/following\"/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <Users/>\r\n                </Container>\r\n                : <Preloader/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersPage)","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx",[],"D:\\newprojects\\techs\\src\\components\\Preloader\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx",["257"],"import {\r\n    Avatar, Button,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport s from \"./Profile.module.scss\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../Preloader\";\r\nimport ProfileView from \"./ProfileView\";\r\nimport ProfileEdit from \"./ProfileEdit\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        \"&:hover\": {\r\n            opacity: \"0.6\"\r\n        },\r\n        cursor: \"pointer\"\r\n    },\r\n    avatarInput: {\r\n        display: \"none\"\r\n    },\r\n    label: {\r\n        background: \"red\"\r\n    }\r\n\r\n})\r\n\r\nconst Profile = ({user, id, getUserInfo, updateUserInfo, isUpdateProfile, uploadPhoto, match}) => {\r\n    const classes = useStyles();\r\n\r\n    // Считывание URL\r\n    let userIdURL = match.params.uID;\r\n    // если undefined , то присваиваем id авторизованного\r\n    if (!userIdURL) {\r\n        userIdURL = id\r\n    }\r\n\r\n    // переключение режима профайла (простмотр/редактирование)\r\n    let [editMode, setEditMode] = useState(false)\r\n    const toogleMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    // проверка владельца\r\n    const checkIsOwner = () => {\r\n        if (userIdURL === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    let [userId, setUserId] = useState(userIdURL)\r\n    useEffect(() => {\r\n        getUserInfo(userId)\r\n    }, [getUserInfo, userId,userIdURL]);\r\n\r\n    // обновление картинки профиля\r\n    const onImageChange = (e) => {\r\n        uploadPhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={s.profile}>\r\n            {!user\r\n                ? <Preloader/>\r\n                : <>\r\n                    <Grid item xs={4}>\r\n                        <label className={classes.label}  htmlFor=\"contained-button-file\">\r\n                            <Avatar\r\n                                className={classes.avatar}\r\n                                style={{height: '300px', width: '300px', margin: '0 auto'}}\r\n                                src={user.photos.large}\r\n                                variant=\"circular\"\r\n                            />\r\n                        </label>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            onChange={onImageChange}\r\n                            className={classes.avatarInput}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            name=\"image\"\r\n                            type=\"file\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        className={s.profile__info}\r\n                        item xs>\r\n                        {checkIsOwner() &&\r\n                        <Button\r\n                            onClick={toogleMode}\r\n                            variant=\"outlined\"\r\n                            className={s.profile__edit}\r\n                        >\r\n                            {editMode\r\n                                ? 'Назад'\r\n                                : 'Редактировать профиль'\r\n                            }\r\n\r\n                        </Button> }\r\n                        {\r\n                            isUpdateProfile && <Preloader/>\r\n                        }\r\n                        {\r\n                            !editMode && <ProfileView user={user}/>\r\n                        }\r\n                        {\r\n                            editMode && <ProfileEdit\r\n                                user={user}\r\n                                toogleMode={toogleMode}\r\n                                updateUserInfo={updateUserInfo}\r\n                            />\r\n                        }\r\n\r\n                    </Grid>\r\n                </>}\r\n        </Grid>\r\n    )\r\n}\r\nexport default withRouter(Profile);","D:\\newprojects\\techs\\src\\components\\Preloader\\Preloader.jsx",[],"D:\\newprojects\\techs\\src\\components\\Profile\\ProfileEdit.jsx",[],"D:\\newprojects\\techs\\src\\components\\Profile\\ProfileView.jsx",[],"D:\\newprojects\\techs\\src\\components\\FollowList\\index.js",[],"D:\\newprojects\\techs\\src\\components\\SocialLink\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Status\\index.js",[],"D:\\newprojects\\techs\\src\\components\\SocialLink\\SocialLink.jsx",[],"D:\\newprojects\\techs\\src\\components\\FollowList\\FolowList.jsx",[],"D:\\newprojects\\techs\\src\\components\\Status\\Status.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\global.js",[],"D:\\newprojects\\techs\\src\\components\\Users\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx",[],"D:\\newprojects\\techs\\src\\components\\Button\\index.js",[],["258","259"],"D:\\newprojects\\techs\\src\\components\\Button\\Button.jsx",[],"D:\\newprojects\\techs\\src\\components\\Users\\SectionsUsers\\index.js",[],["260","261"],"D:\\newprojects\\techs\\src\\components\\Users\\SectionsUsers\\SectionsUsers.jsx",[],"D:\\newprojects\\techs\\src\\components\\Posts\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Posts\\Posts.jsx",[],"D:\\newprojects\\techs\\src\\components\\Post\\Post.jsx",["262","263"],"import {Button, Card, CardActionArea, CardActions, CardContent, CardMedia} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\nconst Post = ({post}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={post.picture}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Lizard\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {post.text}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post","D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js",[],"D:\\newprojects\\techs\\src\\components\\Technics\\index.js",[],["264","265"],"D:\\newprojects\\techs\\src\\components\\Technics\\Technics.jsx",["266"],"D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx",["267"],"import React, {useEffect} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport {List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, ListSubheader} from \"@material-ui/core\";\r\nimport {DeleteOutline} from \"@material-ui/icons\";\r\n\r\nconst TypesTechnicsPage = ({getTypes, deleteType, addType, types}) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = data => addType(data);\r\n    useEffect(() => {\r\n        getTypes()\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input {...register(\"type\")} defaultValue=\"type\"/>\r\n                <input {...register(\"name\")} defaultValue=\"name\"/>\r\n                <input type=\"submit\"/>\r\n            </form>\r\n            {types.length === 0\r\n                ? <div>\r\n                    <h2>Типов техники нет, введи выше</h2>\r\n                </div>\r\n                : \"\"}\r\n            <List subheader={<ListSubheader>Settings</ListSubheader>}>\r\n                {types.map(el => {\r\n                        return <ListItem component={Link} to={`/types/${el.type}`} key={el.id}>\r\n                            <ListItemIcon>\r\n                                <WifiIcon/>\r\n                            </ListItemIcon>\r\n                            <ListItemText id=\"switch-list-label-wifi\" primary={el.name}/>\r\n                            <ListItemSecondaryAction>\r\n                                <DeleteOutline onClick={() => deleteType(el.id)}/>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    }\r\n                )}\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(TypesTechnicsPage)","D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js",["268"],"import {connect} from \"react-redux\";\r\nimport TypePage from \"./TypePage\";\r\nimport {addUser, getActiveType, getTechnicsForType, updateTechnic} from \"../../redux/Tech-reducer\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeType: state.techs.activeType,\r\n        technics: state.techs.technics,\r\n        yearsOfProduction: state.techs.yearsOfProduction,\r\n        users: state.techs.users,\r\n        subdivisions: state.techs.subdivisions}\r\n}\r\nconst mapToDispatch = {\r\n    getActiveType,\r\n    updateTechnic,\r\n    addUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapToDispatch)(TypePage)\r\n","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx",["269","270","271","272","273","274","275","276","277","278","279","280","281"],"import {withRouter, useParams, Link} from \"react-router-dom\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Divider, Fab,\r\n    Grid,\r\n    Icon,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon, ListItemSecondaryAction, ListItemText,\r\n    Paper, TextField\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Modal from \"../../components/Modal\";\r\nimport {useForm, FormProvider, useFormContext} from \"react-hook-form\";\r\nimport FormTechItem from \"../../components/FormTech/FormTech\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        position: \"relative\",\r\n        height: \"200px\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n\r\n    typeInfoWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    imageType: {\r\n        background: \"#3f51b5\",\r\n        color: \"white\",\r\n        display: \"block\",\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n        textAlign: \"center\",\r\n        marginRight: \"20px\",\r\n    },\r\n    wrapperInfo: {\r\n        marginTop: \"50px\"\r\n    },\r\n    icon: {\r\n        fontSize: \"2.5em\",\r\n        paddingTop: \"10px\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n\r\n}));\r\n\r\nconst TypePage = ({\r\n                      getActiveType,\r\n                      activeType,\r\n                      technics,\r\n                      yearsOfProduction,\r\n                  }) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [technicActive, setTechnicActive] = useState({});\r\n    const [formData, setFormData] = useState({});\r\n    const methods = useForm();\r\n\r\n    const handleClickOpen = (el) => {\r\n        setOpen(true);\r\n        setTechnicActive(el)\r\n    };\r\n\r\n    const selectIcon = () => {\r\n        console.log('icon')\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const params = useParams();\r\n    useEffect(() => {\r\n        getActiveType(params.type)\r\n    }, [])\r\n\r\n    const {register, handleSubmit, control, watch, formState: {errors}} = useForm();\r\n    const onSubmit = data => {\r\n        setFormData(data)\r\n        // updateTechnic(technicActive.id, formData)\r\n        // setOpen(false);\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid container className={classes.wrapperInfo} spacing={3}>\r\n                <Grid item xs={3}>\r\n\r\n                    <Paper className={classes.paper}>\r\n                        <div className={classes.typeInfoWrapper}>\r\n                            <Paper className={classes.imageType} style={{cursor: \"pointer\"}} onClick={selectIcon}>\r\n                                <PrintIcon className={classes.icon}/>\r\n                            </Paper>\r\n                            <div className={classes.typeInfo}>\r\n                                <Typography color={\"primary\"}>Тип</Typography>\r\n                                <Typography variant=\"h6\">{activeType.name}</Typography>\r\n                                <Typography variant=\"body2\" gutterBottom>\r\n                                    [ {activeType.type} ]\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                        <Divider/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography  color={\"primary\"}>Годы выпуска</Typography>\r\n                        <Divider/>\r\n                        <div>\r\n                            {Object.keys(yearsOfProduction).map((key) => {\r\n                                return <Typography variant={\"body2\"}  key={key}>{key} - {yearsOfProduction[key].length}</Typography>\r\n                            })}\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography color={\"primary\"} >Корпуса</Typography>\r\n                        {[\"1\",\"9\"].map((key) => {\r\n                            return <Typography variant={\"body2\"} key={key}>{key} - 15 шт </Typography>\r\n                        })}\r\n                        <Divider/>\r\n                        <Typography color={\"primary\"}>Факультеты</Typography>\r\n                        {[\"1\",\"9\"].map((key) => {\r\n                            return <Typography variant={\"body2\"} key={key}>{key} - 15 шт </Typography>\r\n                        })}\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography>Материально-ответственные лица</Typography>\r\n                        <Divider/>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            {activeType ? <>\r\n            </> : \"\"}\r\n            <div>\r\n                {Object.keys(technics).map(key => {\r\n                    return (\r\n                        <Paper key={key}>\r\n                            <h2>{technics[key][0].room} кабинет</h2>\r\n                            <List dense >\r\n                            {technics[key].map(el => {\r\n                                return <ListItem component={Link} key={el.id} to={`/technics/${el.id}`} button>\r\n                                    <ListItemIcon>\r\n                                        <DraftsIcon/>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={el.name}\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body2\"\r\n                                                    className={classes.inline}\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    {el.fyo}\r\n                                                </Typography>\r\n                                                - [ {!el.invent ? <Button color=\"secondary\">Заполнить</Button> : el.invent} ]- [ {!el.zavod ? <Button color=\"secondary\">Заполнить</Button> : el.zavod} ]\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                    <ListItemSecondaryAction>\r\n                                        {/*<Fab size=\"small\" color=\"secondary\"*/}\r\n                                        {/*     onClick={() => handleClickOpen(el)}><EditIcon/></Fab>*/}\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            })}\r\n                            </List>\r\n                        </Paper>\r\n                    )\r\n\r\n\r\n                })}\r\n            </div>\r\n            <Modal handleClose={handleClose} open={open} title={technicActive.name}>\r\n                <FormProvider>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Grid container spacing={3}>\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} property={\"name\"} label={\"Наименование\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} property={\"type\"} label={\"Тип\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} property={\"invent\"}*/}\r\n                            {/*                  label={\"Инвентарный номер\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} property={\"zavod\"}*/}\r\n                            {/*                  label={\"Заводской номер\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} addUser={addUser} items={users}*/}\r\n                            {/*                  property={\"fyo\"} label={\"ФИО сотрудника\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} addUser={addUser} items={users}*/}\r\n                            {/*                  property={\"matfyo\"} label={\"Материально-ответственное лицо\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} property={\"korpus\"} label={\"Корпус\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} property={\"room\"} label={\"Кабинет\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} items={subdivisions}*/}\r\n                            {/*                  property={\"subdivision\"} label={\"Подразделение\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} property={\"year\"} label={\"Год получения\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            {/*<Grid item xs={12} sm={6}>*/}\r\n                            {/*    <FormTechItem technicActive={technicActive} property={\"isTrusted\"}*/}\r\n                            {/*                  label={\"Комментарий\"}/>*/}\r\n                            {/*</Grid>*/}\r\n                            <TextField {...register(\"property\")} label={\"label\"} fullWidth variant=\"outlined\"/>\r\n                            <TextField {...register(\"property1\")} label={\"label1\"} fullWidth variant=\"outlined\"/>\r\n                            <TextField {...register(\"property2\")} label={\"label2\"} fullWidth variant=\"outlined\"/>\r\n                        </Grid>\r\n                        <input type=\"submit\"/>\r\n\r\n                    </form>\r\n                </FormProvider>\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(TypePage)","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx",["282","283","284","285","286","287","288"],"import React, {useEffect, Component} from \"react\";\r\nimport {useParams, withRouter} from \"react-router-dom\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Container, Divider, Grid, TextField} from \"@material-ui/core\";\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport {deepOrange} from '@material-ui/core/colors';\r\nimport {FormProvider, useForm} from \"react-hook-form\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatarWrapper: {\r\n        padding: \"20px\",\r\n        textAlign: \"center\"\r\n    },\r\n    devider: {\r\n        margin: \"20px\"\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        margin: \"0 auto\",\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n}))\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n        <SvgIcon {...props}>\r\n            <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"/>\r\n        </SvgIcon>\r\n    );\r\n}\r\n\r\nconst TechnicPage = ({activeTechnic, getTechnicInfo}) => {\r\n    useEffect(() => {\r\n        getTechnicInfo(params.id)\r\n    }, [])\r\n\r\n    const onSubmit = data => {\r\n        // setFormData(data)\r\n        console.log(data)\r\n        // updateTechnic(technicActive.id, formData)\r\n        // setOpen(false);\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    const { register, handleSubmit, setValue, reset } = useForm();\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Paper>\r\n                        <div className={classes.avatarWrapper}>\r\n                            <Avatar\r\n                                className={classes.avatar}\r\n                            ><HomeIcon style={{fontSize: 75}}/>\r\n                            </Avatar>\r\n                            <Divider className={classes.devider}/>\r\n                            <Typography variant={\"body2\"} component={\"span\"}>{activeTechnic.type}</Typography>\r\n                            <Typography variant={\"h6\"} component={\"h1\"}>{activeTechnic.name}</Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Paper>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <input {...register(\"firstName\")} defaultValue={activeTechnic.name} />\r\n                            <input {...register(\"lastName\")} defaultValue={activeTechnic.type} />\r\n                            <input type=\"submit\" />\r\n                        </form>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default connect(({ firstName, lastName }) => ({ firstName, lastName }))(TechnicPage);","D:\\newprojects\\techs\\src\\components\\Modal\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx",["289","290","291"],"import React from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField, Typography\r\n} from \"@material-ui/core\";\r\n\r\nconst Modal = ({open, handleClose, title, children}) => {\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n                <DialogContent>\r\n                    {children}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal",["292","293"],"D:\\newprojects\\techs\\src\\components\\FormTech\\FormTech.jsx",["294","295"],"import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useFormContext} from \"react-hook-form\";\r\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\r\nimport {addUser} from \"../../redux/Tech-reducer\";\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst FormTechItem = ({technicActive, property, label, items, addUser}) => {\r\n    const [value, setValue] = React.useState(technicActive[property]);\r\n    const {register} = useFormContext();\r\n    return (\r\n        <>\r\n            {items ? <Autocomplete\r\n                    defaultValue={value}\r\n                    onChange={(event, newValue) => {\r\n                        if (typeof newValue === 'string') {\r\n                            setValue({\r\n                                name: newValue,\r\n                            });\r\n                        } else if (newValue && newValue.inputValue) {\r\n                            setValue({\r\n                                name: newValue.inputValue,\r\n                            });\r\n                            addUser(newValue.inputValue)\r\n                        } else {\r\n                            setValue(newValue);\r\n                        }\r\n\r\n                    }}\r\n                    filterOptions={(options, params) => {\r\n                        const filtered = filter(options, params);\r\n\r\n                        // Suggest the creation of a new value\r\n                        if (params.inputValue !== '') {\r\n                            filtered.push({\r\n                                inputValue: params.inputValue,\r\n                                name: `Add \"${params.inputValue}\"`,\r\n                            });\r\n                        }\r\n\r\n                        return filtered;\r\n                    }}\r\n                    selectOnFocus\r\n                    clearOnBlur\r\n                    handleHomeEndKeys\r\n                    id=\"free-solo-with-text-demo\"\r\n                    options={items}\r\n                    getOptionLabel={(option) => {\r\n                        // Value selected with enter, right from the input\r\n                        if (typeof option === 'string') {\r\n                            return option;\r\n                        }\r\n                        // Add \"xxx\" option created dynamically\r\n                        if (option.inputValue) {\r\n                            return option.inputValue;\r\n                        }\r\n                        // Regular option\r\n                        return option.name;\r\n                    }}\r\n                    renderOption={(option) => option.name}\r\n                    freeSolo\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} label={label}\r\n                                   fullWidth variant=\"outlined\"/>\r\n                    )}\r\n                />\r\n                : <input\r\n                    type={(property === \"year\" ? \"date\" : '')}\r\n                    label={(property === \"year\" ? '' : label)}\r\n                    defaultValue={technicActive[property]}\r\n                    variant=\"outlined\"/>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FormTechItem",{"ruleId":"296","replacedBy":"297"},{"ruleId":"298","replacedBy":"299"},{"ruleId":"300","severity":1,"message":"301","line":1,"column":16,"nodeType":"302","messageId":"303","endLine":1,"endColumn":25},{"ruleId":"304","severity":1,"message":"305","line":27,"column":8,"nodeType":"306","endLine":27,"endColumn":20,"suggestions":"307"},{"ruleId":"300","severity":1,"message":"308","line":52,"column":18,"nodeType":"302","messageId":"303","endLine":52,"endColumn":27},{"ruleId":"296","replacedBy":"309"},{"ruleId":"298","replacedBy":"310"},{"ruleId":"296","replacedBy":"311"},{"ruleId":"298","replacedBy":"312"},{"ruleId":"300","severity":1,"message":"313","line":1,"column":9,"nodeType":"302","messageId":"303","endLine":1,"endColumn":15},{"ruleId":"300","severity":1,"message":"314","line":1,"column":39,"nodeType":"302","messageId":"303","endLine":1,"endColumn":50},{"ruleId":"296","replacedBy":"315"},{"ruleId":"298","replacedBy":"316"},{"ruleId":"304","severity":1,"message":"317","line":7,"column":8,"nodeType":"306","endLine":7,"endColumn":18,"suggestions":"318"},{"ruleId":"304","severity":1,"message":"319","line":13,"column":8,"nodeType":"306","endLine":13,"endColumn":10,"suggestions":"320"},{"ruleId":"300","severity":1,"message":"321","line":3,"column":33,"nodeType":"302","messageId":"303","endLine":3,"endColumn":51},{"ruleId":"300","severity":1,"message":"322","line":5,"column":14,"nodeType":"302","messageId":"303","endLine":5,"endColumn":17},{"ruleId":"300","severity":1,"message":"323","line":7,"column":5,"nodeType":"302","messageId":"303","endLine":7,"endColumn":9},{"ruleId":"300","severity":1,"message":"324","line":18,"column":8,"nodeType":"302","messageId":"303","endLine":18,"endColumn":16},{"ruleId":"300","severity":1,"message":"325","line":20,"column":32,"nodeType":"302","messageId":"303","endLine":20,"endColumn":46},{"ruleId":"300","severity":1,"message":"326","line":21,"column":8,"nodeType":"302","messageId":"303","endLine":21,"endColumn":20},{"ruleId":"300","severity":1,"message":"327","line":22,"column":9,"nodeType":"302","messageId":"303","endLine":22,"endColumn":14},{"ruleId":"300","severity":1,"message":"328","line":78,"column":12,"nodeType":"302","messageId":"303","endLine":78,"endColumn":20},{"ruleId":"300","severity":1,"message":"329","line":79,"column":11,"nodeType":"302","messageId":"303","endLine":79,"endColumn":18},{"ruleId":"300","severity":1,"message":"330","line":81,"column":11,"nodeType":"302","messageId":"303","endLine":81,"endColumn":26},{"ruleId":"304","severity":1,"message":"331","line":97,"column":8,"nodeType":"306","endLine":97,"endColumn":10,"suggestions":"332"},{"ruleId":"300","severity":1,"message":"333","line":99,"column":36,"nodeType":"302","messageId":"303","endLine":99,"endColumn":43},{"ruleId":"300","severity":1,"message":"334","line":99,"column":45,"nodeType":"302","messageId":"303","endLine":99,"endColumn":50},{"ruleId":"300","severity":1,"message":"335","line":99,"column":64,"nodeType":"302","messageId":"303","endLine":99,"endColumn":70},{"ruleId":"300","severity":1,"message":"336","line":1,"column":27,"nodeType":"302","messageId":"303","endLine":1,"endColumn":36},{"ruleId":"300","severity":1,"message":"337","line":2,"column":20,"nodeType":"302","messageId":"303","endLine":2,"endColumn":30},{"ruleId":"300","severity":1,"message":"338","line":7,"column":35,"nodeType":"302","messageId":"303","endLine":7,"endColumn":44},{"ruleId":"300","severity":1,"message":"339","line":10,"column":9,"nodeType":"302","messageId":"303","endLine":10,"endColumn":21},{"ruleId":"304","severity":1,"message":"340","line":41,"column":8,"nodeType":"306","endLine":41,"endColumn":10,"suggestions":"341"},{"ruleId":"300","severity":1,"message":"342","line":52,"column":37,"nodeType":"302","messageId":"303","endLine":52,"endColumn":45},{"ruleId":"300","severity":1,"message":"343","line":52,"column":47,"nodeType":"302","messageId":"303","endLine":52,"endColumn":52},{"ruleId":"300","severity":1,"message":"344","line":7,"column":5,"nodeType":"302","messageId":"303","endLine":7,"endColumn":22},{"ruleId":"300","severity":1,"message":"338","line":9,"column":5,"nodeType":"302","messageId":"303","endLine":9,"endColumn":14},{"ruleId":"300","severity":1,"message":"345","line":9,"column":16,"nodeType":"302","messageId":"303","endLine":9,"endColumn":26},{"ruleId":"296","replacedBy":"346"},{"ruleId":"298","replacedBy":"347"},{"ruleId":"300","severity":1,"message":"348","line":5,"column":9,"nodeType":"302","messageId":"303","endLine":5,"endColumn":16},{"ruleId":"300","severity":1,"message":"349","line":11,"column":12,"nodeType":"302","messageId":"303","endLine":11,"endColumn":20},"no-native-reassign",["350"],"no-negated-in-lhs",["351"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'getUsers', and 'rowsPerPage'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["352"],"'setUserId' is assigned a value but never used.",["350"],["351"],["350"],["351"],"'Button' is defined but never used.","'CardActions' is defined but never used.",["350"],["351"],"React Hook useEffect has a missing dependency: 'getTechnicForTypes'. Either include it or remove the dependency array. If 'getTechnicForTypes' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["353"],"React Hook useEffect has a missing dependency: 'getTypes'. Either include it or remove the dependency array. If 'getTypes' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["354"],"'getTechnicsForType' is defined but never used.","'Fab' is defined but never used.","'Icon' is defined but never used.","'EditIcon' is defined but never used.","'useFormContext' is defined but never used.","'FormTechItem' is defined but never used.","'Alert' is defined but never used.","'formData' is assigned a value but never used.","'methods' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getActiveType' and 'params.type'. Either include them or remove the dependency array. If 'getActiveType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["355"],"'control' is assigned a value but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'Component' is defined but never used.","'withRouter' is defined but never used.","'TextField' is defined but never used.","'FormProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'getTechnicInfo' and 'params.id'. Either include them or remove the dependency array. If 'getTechnicInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["356"],"'setValue' is assigned a value but never used.","'reset' is assigned a value but never used.","'DialogContentText' is defined but never used.","'Typography' is defined but never used.",["350"],["351"],"'addUser' is defined but never used.","'register' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},"Update the dependencies array to be: [currentPage, getUsers, rowsPerPage, sectionUrl]",{"range":"367","text":"368"},"Update the dependencies array to be: [getTechnicForTypes, technics]",{"range":"369","text":"370"},"Update the dependencies array to be: [getTypes]",{"range":"371","text":"372"},"Update the dependencies array to be: [getActiveType, params.type]",{"range":"373","text":"374"},"Update the dependencies array to be: [getTechnicInfo, params.id]",{"range":"375","text":"376"},[935,947],"[currentPage, getUsers, rowsPerPage, sectionUrl]",[255,265],"[getTechnicForTypes, technics]",[573,575],"[getTypes]",[2559,2561],"[getActiveType, params.type]",[1288,1290],"[getTechnicInfo, params.id]"]
[{"D:\\newprojects\\techs\\src\\index.js":"1","D:\\newprojects\\techs\\src\\reportWebVitals.js":"2","D:\\newprojects\\techs\\src\\redux\\redux-store.js":"3","D:\\newprojects\\techs\\src\\components\\App\\index.js":"4","D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js":"5","D:\\newprojects\\techs\\src\\redux\\Users-reducer.js":"6","D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js":"7","D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js":"8","D:\\newprojects\\techs\\src\\redux\\App-reducer.js":"9","D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js":"10","D:\\newprojects\\techs\\src\\api\\api.js":"11","D:\\newprojects\\techs\\src\\components\\App\\App.jsx":"12","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js":"13","D:\\newprojects\\techs\\src\\components\\Preloader\\index.js":"14","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js":"15","D:\\newprojects\\techs\\src\\components\\Header\\index.js":"16","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx":"17","D:\\newprojects\\techs\\src\\components\\Preloader\\Preloader.jsx":"18","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx":"19","D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx":"20","D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js":"21","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js":"22","D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js":"23","D:\\newprojects\\techs\\src\\pages\\Profile\\index.js":"24","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js":"25","D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js":"26","D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js":"27","D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx":"28","D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx":"29","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx":"30","D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx":"31","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx":"32","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx":"33","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx":"34","D:\\newprojects\\techs\\src\\components\\global\\global.js":"35","D:\\newprojects\\techs\\src\\components\\Posts\\index.js":"36","D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js":"37","D:\\newprojects\\techs\\src\\components\\Users\\index.js":"38","D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js":"39","D:\\newprojects\\techs\\src\\components\\Posts\\Posts.jsx":"40","D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx":"41","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx":"42","D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx":"43","D:\\newprojects\\techs\\src\\components\\Post\\Post.jsx":"44","D:\\newprojects\\techs\\src\\components\\Modal\\index.js":"45","D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx":"46","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx":"47","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js":"48","D:\\newprojects\\techs\\src\\components\\Accordion\\index.js":"49","D:\\newprojects\\techs\\src\\components\\Profile\\index.js":"50","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx":"51","D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx":"52","D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx":"53","D:\\newprojects\\techs\\src\\components\\Profile\\ProfileEdit.jsx":"54","D:\\newprojects\\techs\\src\\components\\Profile\\ProfileView.jsx":"55","D:\\newprojects\\techs\\src\\components\\SocialLink\\index.js":"56","D:\\newprojects\\techs\\src\\components\\Status\\index.js":"57","D:\\newprojects\\techs\\src\\components\\FollowList\\index.js":"58","D:\\newprojects\\techs\\src\\components\\SocialLink\\SocialLink.jsx":"59","D:\\newprojects\\techs\\src\\components\\Status\\Status.jsx":"60","D:\\newprojects\\techs\\src\\components\\FollowList\\FolowList.jsx":"61"},{"size":585,"mtime":1619453189691,"results":"62","hashOfConfig":"63"},{"size":362,"mtime":499162500000,"results":"64","hashOfConfig":"63"},{"size":799,"mtime":1623688791559,"results":"65","hashOfConfig":"63"},{"size":366,"mtime":1620070726968,"results":"66","hashOfConfig":"63"},{"size":2962,"mtime":1622061365007,"results":"67","hashOfConfig":"63"},{"size":4067,"mtime":1622231323629,"results":"68","hashOfConfig":"63"},{"size":2414,"mtime":1613510004007,"results":"69","hashOfConfig":"63"},{"size":7712,"mtime":1622835922035,"results":"70","hashOfConfig":"63"},{"size":800,"mtime":1624975646264,"results":"71","hashOfConfig":"63"},{"size":8828,"mtime":1627506381532,"results":"72","hashOfConfig":"63"},{"size":3262,"mtime":1627505731350,"results":"73","hashOfConfig":"63"},{"size":758,"mtime":1627507651341,"results":"74","hashOfConfig":"63"},{"size":198,"mtime":1622062179840,"results":"75","hashOfConfig":"63"},{"size":63,"mtime":1619384275192,"results":"76","hashOfConfig":"63"},{"size":203,"mtime":1619365649818,"results":"77","hashOfConfig":"63"},{"size":348,"mtime":1620069278960,"results":"78","hashOfConfig":"63"},{"size":362,"mtime":1619813994120,"results":"79","hashOfConfig":"63"},{"size":154,"mtime":1619384365533,"results":"80","hashOfConfig":"63"},{"size":1413,"mtime":1625045909040,"results":"81","hashOfConfig":"63"},{"size":2821,"mtime":1624985699994,"results":"82","hashOfConfig":"63"},{"size":1741,"mtime":1619363631463,"results":"83","hashOfConfig":"63"},{"size":415,"mtime":1625133389273,"results":"84","hashOfConfig":"63"},{"size":752,"mtime":1627408270784,"results":"85","hashOfConfig":"63"},{"size":201,"mtime":1621960851643,"results":"86","hashOfConfig":"63"},{"size":406,"mtime":1627421312016,"results":"87","hashOfConfig":"63"},{"size":488,"mtime":1620058626451,"results":"88","hashOfConfig":"63"},{"size":456,"mtime":1621279691901,"results":"89","hashOfConfig":"63"},{"size":3943,"mtime":1620319031757,"results":"90","hashOfConfig":"63"},{"size":335,"mtime":1622107163360,"results":"91","hashOfConfig":"63"},{"size":7631,"mtime":1627408270783,"results":"92","hashOfConfig":"63"},{"size":2033,"mtime":1622836417830,"results":"93","hashOfConfig":"63"},{"size":296,"mtime":1627408270784,"results":"94","hashOfConfig":"63"},{"size":6154,"mtime":1627509944032,"results":"95","hashOfConfig":"63"},{"size":287,"mtime":1627054954773,"results":"96","hashOfConfig":"63"},{"size":563,"mtime":1627420767941,"results":"97","hashOfConfig":"63"},{"size":217,"mtime":1622829046391,"results":"98","hashOfConfig":"63"},{"size":385,"mtime":1627054954769,"results":"99","hashOfConfig":"63"},{"size":665,"mtime":1621020966360,"results":"100","hashOfConfig":"63"},{"size":356,"mtime":1627509801290,"results":"101","hashOfConfig":"63"},{"size":608,"mtime":1622835984835,"results":"102","hashOfConfig":"63"},{"size":2943,"mtime":1627054954768,"results":"103","hashOfConfig":"63"},{"size":2563,"mtime":1622837644323,"results":"104","hashOfConfig":"63"},{"size":4403,"mtime":1627510064145,"results":"105","hashOfConfig":"63"},{"size":1140,"mtime":1622835387711,"results":"106","hashOfConfig":"63"},{"size":53,"mtime":1625225106329,"results":"107","hashOfConfig":"63"},{"size":567,"mtime":1627316966071,"results":"108","hashOfConfig":"63"},{"size":205,"mtime":1618141801688,"results":"109","hashOfConfig":"63"},{"size":292,"mtime":1627054954774,"results":"110","hashOfConfig":"63"},{"size":86,"mtime":1627408270781,"results":"111","hashOfConfig":"63"},{"size":444,"mtime":1622282851834,"results":"112","hashOfConfig":"63"},{"size":2867,"mtime":1627408270782,"results":"113","hashOfConfig":"63"},{"size":4025,"mtime":1627408270780,"results":"114","hashOfConfig":"63"},{"size":4020,"mtime":1622285407784,"results":"115","hashOfConfig":"63"},{"size":4362,"mtime":1622276878074,"results":"116","hashOfConfig":"63"},{"size":1658,"mtime":1622276863657,"results":"117","hashOfConfig":"63"},{"size":68,"mtime":1619550059029,"results":"118","hashOfConfig":"63"},{"size":337,"mtime":1620320732531,"results":"119","hashOfConfig":"63"},{"size":260,"mtime":1622060242810,"results":"120","hashOfConfig":"63"},{"size":760,"mtime":1621022329453,"results":"121","hashOfConfig":"63"},{"size":1437,"mtime":1621022383173,"results":"122","hashOfConfig":"63"},{"size":1056,"mtime":1622060047880,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"17rpeos",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"126"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"126"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"126"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"126"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"126"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"126"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"126"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"D:\\newprojects\\techs\\src\\index.js",[],["255","256"],"D:\\newprojects\\techs\\src\\reportWebVitals.js",[],"D:\\newprojects\\techs\\src\\redux\\redux-store.js",[],"D:\\newprojects\\techs\\src\\components\\App\\index.js",[],"D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Users-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\App-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js",[],"D:\\newprojects\\techs\\src\\api\\api.js",[],"D:\\newprojects\\techs\\src\\components\\App\\App.jsx",["257"],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Preloader\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Header\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx",[],"D:\\newprojects\\techs\\src\\components\\Preloader\\Preloader.jsx",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js",[],"D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx",["258","259"],"import {withRouter, useParams} from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    List,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Modal from \"../../components/Modal\";\r\nimport MiniCardTechnic from \"../../components/MiniCardTechnic\";\r\nimport ListTypes from \"../../components/ListTypes\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport MiniCardTechnicSkeleton from \"../../components/MiniCardTechnic/MiniCardTechnicSceleton\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        position: \"relative\",\r\n        height: \"200px\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n\r\n    typeInfoWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    imageType: {\r\n        background: \"#3f51b5\",\r\n        color: \"white\",\r\n        display: \"block\",\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n        textAlign: \"center\",\r\n        marginRight: \"20px\",\r\n    },\r\n    wrapperInfo: {\r\n        marginTop: \"50px\"\r\n    },\r\n    icon: {\r\n        fontSize: \"2.5em\",\r\n        paddingTop: \"10px\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n    roomItem: {\r\n        marginTop: \"20px\",\r\n        padding: \"7px\"\r\n    },\r\n    roomNumber: {}\r\n\r\n}));\r\n\r\nconst TypePage = ({\r\n                      getActiveType,\r\n                      activeType,\r\n                      technics,\r\n                      yearsOfProduction,\r\n                      toogleLoadingInfoFotType,\r\n                      matfyos,\r\n                      korpuses\r\n                  }) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [technicActive, setTechnicActive] = useState({});\r\n    // const handleClickOpen = (el) => {\r\n    //     setOpen(true);\r\n    //     setTechnicActive(el)\r\n    // };\r\n\r\n    // const selectIcon = () => {\r\n    //     console.log('icon')\r\n    // }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const params = useParams();\r\n    useEffect(() => {\r\n        getActiveType(params.type)\r\n    }, [params])\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container className={classes.wrapperInfo} spacing={3}>\r\n                <Grid item xs={3}>\r\n\r\n                    <Paper className={classes.paper}>\r\n                        {toogleLoadingInfoFotType ? <SceletonInfoType/> : <>\r\n                            <div className={classes.typeInfoWrapper}>\r\n                                <div className={classes.typeInfo}>\r\n                                    <Typography color={\"primary\"}>Тип</Typography>\r\n                                    <Typography variant=\"h6\">{activeType.name}</Typography>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        [ {activeType.type} ]\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                            <Divider/>\r\n                        </>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        {toogleLoadingInfoFotType ? <SceletonInfoType/> : <>\r\n                            <Typography color={\"primary\"}>Годы выпуска</Typography>\r\n                            <Divider/>\r\n                            <div>\r\n                                {\r\n                                    yearsOfProduction.map(el => {\r\n                                        return <Typography variant={\"body2\"}\r\n                                                           key={el.year}>{el.year} - {el.properties.length}</Typography>\r\n                                    })\r\n                                }\r\n\r\n                            </div>\r\n                        </>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        {toogleLoadingInfoFotType ? <SceletonInfoType/> : <>\r\n                            <Typography color={\"primary\"}>Корпуса</Typography>\r\n                            {korpuses.map((el) => {\r\n                                return <Typography variant={\"body2\"}\r\n                                                   key={el.korpus}>{el.korpus} - {el.properties.length}</Typography>\r\n                            })}\r\n                            <Divider/>\r\n                            <Typography color={\"primary\"}>Факультеты</Typography>\r\n                            {[\"1\", \"9\"].map((key) => {\r\n                                return <Typography variant={\"body2\"} key={key}>{key} - 15 шт </Typography>\r\n                            })}\r\n                        </>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        {toogleLoadingInfoFotType ? <SceletonInfoType/> : <>\r\n                            <Typography>Материально-ответственные лица</Typography>\r\n                            <Divider/>\r\n                            {matfyos.map((el) => {\r\n                                return <Typography variant={\"body2\"}\r\n                                                   key={el.matfyo}>{el.matfyo} - {el.properties.length}</Typography>\r\n                            })}\r\n                        </>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {activeType ? <>\r\n            </> : \"\"}\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                    {technics.map(key => {\r\n                        return (\r\n                            <Card key={key.room} className={classes.roomItem}>\r\n                                <Typography variant={\"h5\"}\r\n                                            className={`${classes.roomNumber} `}>{!(Number.parseInt(key.room)) ? key.room : `${key.room} кабинет`}</Typography>\r\n                                <List dense>\r\n                                    {key.properties.map((el, i) => {\r\n                                        return !toogleLoadingInfoFotType ? <MiniCardTechnic key={i} el={el}/> :\r\n                                            <MiniCardTechnicSkeleton key={i}/>\r\n                                    })}\r\n                                </List>\r\n                            </Card>\r\n                        )\r\n\r\n\r\n                    })}\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <ListTypes/>\r\n                </Grid>\r\n            </Grid>\r\n            <Modal handleClose={handleClose} open={open} title={technicActive.name}>\r\n\r\n\r\n            </Modal>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(TypePage)\r\n\r\nexport const SceletonInfoType = () => {\r\n    return <div>\r\n        <Skeleton/>\r\n        <Skeleton animation={false}/>\r\n        <Skeleton animation=\"wave\"/>\r\n    </div>\r\n}\r\n\r\n","D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx",["260"],"import React, {useEffect} from \"react\";\r\nimport {Container, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport Preloader from \"../../components/Preloader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n// import {makeStyles} from \"@material-ui/styles\";\r\nimport Users from \"../../components/Users\";\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n// });\r\n\r\nconst UsersPage = ({isFetching, rowsPerPage, currentPage, getUsers, match}) => {\r\n    let sectionUrl = match.params.section\r\n    const [value, setValue] = React.useState(0);\r\n    useEffect(() => {\r\n        if (sectionUrl === 'following') {\r\n            setValue(1)\r\n            getUsers(rowsPerPage, currentPage, true);\r\n        }\r\n        if (sectionUrl === 'allusers') {\r\n            setValue(0)\r\n            getUsers(rowsPerPage, currentPage, false);\r\n        }\r\n    }, [sectionUrl])\r\n    // const classes = useStyles();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!isFetching\r\n                ? <Container>\r\n                    <Typography variant=\"body1\" component=\"span\">\r\n                    </Typography>\r\n                    <Paper square>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={handleChange}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"All Users\" component={Link} to=\"/users/allusers\"/>\r\n                            <Tab label=\"following\" component={Link} to=\"/users/following\"/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <Users/>\r\n                </Container>\r\n                : <Preloader/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersPage)","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx",["261","262","263"],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\global.js",[],"D:\\newprojects\\techs\\src\\components\\Posts\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Users\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Posts\\Posts.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx",["264","265"],"import {\r\n    Button, Dialog, DialogActions, DialogContent,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    ListSubheader, TextField\r\n} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport WifiIcon from \"@material-ui/icons/Wifi\";\r\nimport {DeleteOutline} from \"@material-ui/icons\";\r\nimport React, {useEffect} from \"react\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from \"../Modal\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ListTypes = ({types, deleteType, getTypes, addType}) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = data => addType(data);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        getTypes()\r\n    }, [])\r\n    return (\r\n        <>\r\n            {types &&\r\n            <List subheader={<ListSubheader>Settings</ListSubheader>}>\r\n                {types.map(el => {\r\n                        return <ListItem component={Link} to={`/types/${el.type}`} key={el.id}>\r\n                            <ListItemIcon>\r\n                                <WifiIcon/>\r\n                            </ListItemIcon>\r\n                            <ListItemText id=\"switch-list-label-wifi\" primary={el.name}/>\r\n                            <ListItemSecondaryAction>\r\n                                <DeleteOutline onClick={() => deleteType(el.id)}/>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    }\r\n                )}\r\n            </List>\r\n            }\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                startIcon={<CloudUploadIcon/>} onClick={handleClickOpen}>\r\n                Добавить тип\r\n            </Button>\r\n\r\n            <Modal open={open} handleClose={handleClose} title={\"Добавить тип\"}>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <DialogContent>\r\n                        <TextField {...register(\"type\")} defaultValue=\"type\"/>\r\n                        <TextField {...register(\"name\")} defaultValue=\"name\"/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </DialogActions>\r\n                </form>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListTypes\r\n\r\n","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx",["266"],"D:\\newprojects\\techs\\src\\components\\Post\\Post.jsx",["267","268"],"import {Button, Card, CardActionArea, CardActions, CardContent, CardMedia} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\nconst Post = ({post}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={post.picture}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Lizard\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {post.text}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post","D:\\newprojects\\techs\\src\\components\\Modal\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx",["269","270","271","272","273","274"],"import React from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField, Typography\r\n} from \"@material-ui/core\";\r\n\r\nconst Modal = ({open, handleClose, title, children, button}) => {\r\n    return (\r\n        <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\r\n                {children}\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Accordion\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx",["275","276"],"import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Chip,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText, Tooltip\r\n} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}))\r\n\r\nconst MiniCardTechnic = ({el,keys}) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <ListItem component={Link} key={el} to={`/technics/${el.id}`} button>\r\n            <ListItemIcon>\r\n                <Avatar>{el.type.toString()[0]}</Avatar>\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={el.name}\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {el.fyo}\r\n                        </Typography>\r\n                        - [ {!el.invent ?\r\n                        <Button color=\"secondary\">Заполнить</Button> : el.invent} ]\r\n                        <>\r\n                            {\r\n                                (typeof el.type === 'object')\r\n                                    ? <>{el.type.map(el => {\r\n                                        return <Chip\r\n                                            avatar={<Avatar>{el[0]}</Avatar>}\r\n                                            label={el}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    })}</>\r\n\r\n\r\n                                    : <Chip\r\n                                        avatar={<Avatar>{el.type[0]}</Avatar>}\r\n                                        label={el.type}\r\n                                        variant=\"outlined\"\r\n                                    />}\r\n                        </>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n            <ListItemSecondaryAction style={{display: \"flex\"}}>\r\n                {Object.keys(keys).map(key => {\r\n                    if (!el[keys[key].key]) {\r\n                        return <Tooltip title={keys[key].name}><span style={{\r\n                            display: \"block\",\r\n                            width: \"10px\",\r\n                            textAlign: \"center\",\r\n                            color: \"white\",\r\n                            marginRight: \"2px\",\r\n                            background: keys[key].bg\r\n                        }}>!</span></Tooltip>\r\n                    }\r\n                })}\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MiniCardTechnic","D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx",["277"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    details: {\r\n        flexDirection: \"column\"\r\n    }\r\n}));\r\n\r\nexport default function ControlledAccordions({array}) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const aaaa = (arr) => {\r\n        let years = arr.map(el => {\r\n            return new Date(el.receiverDate).getFullYear()\r\n        }).sort((a,b) => b - a)\r\n        let uniqueYears = [...new Set(years.map((year) => year))]\r\n        const countDays = (a,b) => {\r\n            let dateA = new Date(a).getTime()\r\n            let dateB = new Date(b).getTime()\r\n            let days = ((dateB - dateA) / (60*60*24*1000)) % 365\r\n            return days\r\n        }\r\n        return uniqueYears.map(year => {\r\n            return <>\r\n                <p>{year} год</p>\r\n                <ul>\r\n                    {arr.map((el,i) => {\r\n                        if (new Date(el.receiverDate).getFullYear() === year) {\r\n                            // return <li>{i} == {el.receiverDate} - ({el.receiverName})</li>\r\n                            return <Accordion expanded={expanded === el.id} onChange={handleChange(el.id)}>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls={`${el.id}bh-content`}\r\n                                    id={`${el.id}bh-content`}\r\n                                >\r\n                                    <Typography className={classes.heading}>{el.receiverDate}</Typography>\r\n                                    <Typography className={classes.secondaryHeading}>{el.receiverName}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails className={classes.details}>\r\n                                    <Typography variant={\"p\"}>Дата заявки: {el.report}</Typography>\r\n                                    <Typography variant={\"p\"}><Typography variant={\"subtitle2\"} component={\"span\"}>({countDays(el.report,el.transmissionDate)} дней)</Typography> Дата передачи картриджей в ЦРИТ: {el.transmissionDate}</Typography>\r\n                                    <Typography variant={\"p\"}><Typography variant={\"subtitle2\"} component={\"span\"}>({countDays(el.report,el.dateOfReceiving)} дней)</Typography> Дата получения картриджей из ЦРИТ: {el.dateOfReceiving}</Typography>\r\n                                    <Typography variant={\"p\"}><Typography variant={\"subtitle2\"} component={\"span\"}>({countDays(el.report,el.receiverDate)} дней)</Typography>Выдача сотруднику: {el.receiverDate}</Typography>\r\n                                    <Typography variant={\"p\"}>Сотрудник, который получил картридж: {el.receiverName}</Typography>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        }\r\n                    })}\r\n                </ul>\r\n            </>\r\n        })\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            {aaaa(array)}\r\n        </div>\r\n    );\r\n}\r\n","D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx",["278"],"import {\r\n    Avatar, Button,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport s from \"./Profile.module.scss\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../Preloader\";\r\nimport ProfileView from \"./ProfileView\";\r\nimport ProfileEdit from \"./ProfileEdit\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        \"&:hover\": {\r\n            opacity: \"0.6\"\r\n        },\r\n        cursor: \"pointer\"\r\n    },\r\n    avatarInput: {\r\n        display: \"none\"\r\n    },\r\n    label: {\r\n        background: \"red\"\r\n    }\r\n\r\n})\r\n\r\nconst Profile = ({user, id, getUserInfo, updateUserInfo, isUpdateProfile, uploadPhoto, match}) => {\r\n    const classes = useStyles();\r\n\r\n    // Считывание URL\r\n    let userIdURL = match.params.uID;\r\n    // если undefined , то присваиваем id авторизованного\r\n    if (!userIdURL) {\r\n        userIdURL = id\r\n    }\r\n\r\n    // переключение режима профайла (простмотр/редактирование)\r\n    let [editMode, setEditMode] = useState(false)\r\n    const toogleMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    // проверка владельца\r\n    const checkIsOwner = () => {\r\n        if (userIdURL === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    let [userId, setUserId] = useState(userIdURL)\r\n    useEffect(() => {\r\n        getUserInfo(userId)\r\n    }, [getUserInfo, userId,userIdURL]);\r\n\r\n    // обновление картинки профиля\r\n    const onImageChange = (e) => {\r\n        uploadPhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={s.profile}>\r\n            {!user\r\n                ? <Preloader/>\r\n                : <>\r\n                    <Grid item xs={4}>\r\n                        <label className={classes.label}  htmlFor=\"contained-button-file\">\r\n                            <Avatar\r\n                                className={classes.avatar}\r\n                                style={{height: '300px', width: '300px', margin: '0 auto'}}\r\n                                src={user.photos.large}\r\n                                variant=\"circular\"\r\n                            />\r\n                        </label>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            onChange={onImageChange}\r\n                            className={classes.avatarInput}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            name=\"image\"\r\n                            type=\"file\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        className={s.profile__info}\r\n                        item xs>\r\n                        {checkIsOwner() &&\r\n                        <Button\r\n                            onClick={toogleMode}\r\n                            variant=\"outlined\"\r\n                            className={s.profile__edit}\r\n                        >\r\n                            {editMode\r\n                                ? 'Назад'\r\n                                : 'Редактировать профиль'\r\n                            }\r\n\r\n                        </Button> }\r\n                        {\r\n                            isUpdateProfile && <Preloader/>\r\n                        }\r\n                        {\r\n                            !editMode && <ProfileView user={user}/>\r\n                        }\r\n                        {\r\n                            editMode && <ProfileEdit\r\n                                user={user}\r\n                                toogleMode={toogleMode}\r\n                                updateUserInfo={updateUserInfo}\r\n                            />\r\n                        }\r\n\r\n                    </Grid>\r\n                </>}\r\n        </Grid>\r\n    )\r\n}\r\nexport default withRouter(Profile);","D:\\newprojects\\techs\\src\\components\\Profile\\ProfileEdit.jsx",[],"D:\\newprojects\\techs\\src\\components\\Profile\\ProfileView.jsx",[],"D:\\newprojects\\techs\\src\\components\\SocialLink\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Status\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FollowList\\index.js",[],"D:\\newprojects\\techs\\src\\components\\SocialLink\\SocialLink.jsx",[],"D:\\newprojects\\techs\\src\\components\\Status\\Status.jsx",[],"D:\\newprojects\\techs\\src\\components\\FollowList\\FolowList.jsx",[],{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","severity":1,"message":"284","line":1,"column":16,"nodeType":"285","messageId":"286","endLine":1,"endColumn":25},{"ruleId":"283","severity":1,"message":"287","line":81,"column":27,"nodeType":"285","messageId":"286","endLine":81,"endColumn":43},{"ruleId":"288","severity":1,"message":"289","line":98,"column":8,"nodeType":"290","endLine":98,"endColumn":16,"suggestions":"291"},{"ruleId":"288","severity":1,"message":"292","line":27,"column":8,"nodeType":"290","endLine":27,"endColumn":20,"suggestions":"293"},{"ruleId":"283","severity":1,"message":"294","line":48,"column":12,"nodeType":"285","messageId":"286","endLine":48,"endColumn":20},{"ruleId":"283","severity":1,"message":"295","line":48,"column":22,"nodeType":"285","messageId":"286","endLine":48,"endColumn":34},{"ruleId":"288","severity":1,"message":"296","line":51,"column":8,"nodeType":"290","endLine":51,"endColumn":10,"suggestions":"297"},{"ruleId":"283","severity":1,"message":"298","line":2,"column":13,"nodeType":"285","messageId":"286","endLine":2,"endColumn":19},{"ruleId":"288","severity":1,"message":"299","line":39,"column":8,"nodeType":"290","endLine":39,"endColumn":10,"suggestions":"300"},{"ruleId":"283","severity":1,"message":"301","line":28,"column":12,"nodeType":"285","messageId":"286","endLine":28,"endColumn":17},{"ruleId":"283","severity":1,"message":"302","line":1,"column":9,"nodeType":"285","messageId":"286","endLine":1,"endColumn":15},{"ruleId":"283","severity":1,"message":"303","line":1,"column":39,"nodeType":"285","messageId":"286","endLine":1,"endColumn":50},{"ruleId":"283","severity":1,"message":"302","line":3,"column":5,"nodeType":"285","messageId":"286","endLine":3,"endColumn":11},{"ruleId":"283","severity":1,"message":"304","line":5,"column":5,"nodeType":"285","messageId":"286","endLine":5,"endColumn":18},{"ruleId":"283","severity":1,"message":"305","line":6,"column":5,"nodeType":"285","messageId":"286","endLine":6,"endColumn":18},{"ruleId":"283","severity":1,"message":"306","line":7,"column":5,"nodeType":"285","messageId":"286","endLine":7,"endColumn":22},{"ruleId":"283","severity":1,"message":"307","line":9,"column":5,"nodeType":"285","messageId":"286","endLine":9,"endColumn":14},{"ruleId":"283","severity":1,"message":"308","line":9,"column":16,"nodeType":"285","messageId":"286","endLine":9,"endColumn":26},{"ruleId":"283","severity":1,"message":"309","line":19,"column":11,"nodeType":"285","messageId":"286","endLine":19,"endColumn":18},{"ruleId":"310","severity":1,"message":"311","line":60,"column":44,"nodeType":"312","messageId":"313","endLine":60,"endColumn":46},{"ruleId":"310","severity":1,"message":"311","line":49,"column":37,"nodeType":"312","messageId":"313","endLine":49,"endColumn":39},{"ruleId":"283","severity":1,"message":"314","line":52,"column":18,"nodeType":"285","messageId":"286","endLine":52,"endColumn":27},"no-native-reassign",["315"],"no-negated-in-lhs",["316"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setTechnicActive' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getActiveType'. Either include it or remove the dependency array. If 'getActiveType' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["317"],"React Hook useEffect has missing dependencies: 'currentPage', 'getUsers', and 'rowsPerPage'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["318"],"'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTechnicInfo' and 'params.id'. Either include them or remove the dependency array. If 'getTechnicInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["319"],"'Dialog' is defined but never used.","React Hook useEffect has a missing dependency: 'getTypes'. Either include it or remove the dependency array. If 'getTypes' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["320"],"'value' is assigned a value but never used.","'Button' is defined but never used.","'CardActions' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setUserId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},"Update the dependencies array to be: [getActiveType, params]",{"range":"329","text":"330"},"Update the dependencies array to be: [currentPage, getUsers, rowsPerPage, sectionUrl]",{"range":"331","text":"332"},"Update the dependencies array to be: [getTechnicInfo, params.id]",{"range":"333","text":"334"},"Update the dependencies array to be: [getTypes]",{"range":"335","text":"336"},[2528,2536],"[getActiveType, params]",[935,947],"[currentPage, getUsers, rowsPerPage, sectionUrl]",[1471,1473],"[getTechnicInfo, params.id]",[1129,1131],"[getTypes]"]
[{"D:\\newprojects\\techs\\src\\index.js":"1","D:\\newprojects\\techs\\src\\reportWebVitals.js":"2","D:\\newprojects\\techs\\src\\redux\\redux-store.js":"3","D:\\newprojects\\techs\\src\\components\\App\\index.js":"4","D:\\newprojects\\techs\\src\\redux\\Users-reducer.js":"5","D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js":"6","D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js":"7","D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js":"8","D:\\newprojects\\techs\\src\\redux\\App-reducer.js":"9","D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js":"10","D:\\newprojects\\techs\\src\\redux\\Printers-reducer.js":"11","D:\\newprojects\\techs\\src\\components\\App\\App.jsx":"12","D:\\newprojects\\techs\\src\\api\\api.js":"13","D:\\newprojects\\techs\\src\\components\\Header\\index.js":"14","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js":"15","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js":"16","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx":"17","D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx":"18","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx":"19","D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js":"20","D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js":"21","D:\\newprojects\\techs\\src\\pages\\Profile\\index.js":"22","D:\\newprojects\\techs\\src\\pages\\RoomPage\\index.js":"23","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js":"24","D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js":"25","D:\\newprojects\\techs\\src\\pages\\EventsPage\\index.js":"26","D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js":"27","D:\\newprojects\\techs\\src\\pages\\PrintersPage\\index.js":"28","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js":"29","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx":"30","D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx":"31","D:\\newprojects\\techs\\src\\pages\\EventsPage\\EventsPage.jsx":"32","D:\\newprojects\\techs\\src\\pages\\RoomPage\\RoomPage.jsx":"33","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx":"34","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx":"35","D:\\newprojects\\techs\\src\\pages\\PrintersPage\\PrintersPage.jsx":"36","D:\\newprojects\\techs\\src\\components\\global\\groupElementsByDate.js":"37","D:\\newprojects\\techs\\src\\components\\global\\images.js":"38","D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js":"39","D:\\newprojects\\techs\\src\\components\\Users\\index.js":"40","D:\\newprojects\\techs\\src\\components\\global\\formatDate.js":"41","D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx":"42","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx":"43","D:\\newprojects\\techs\\src\\components\\global\\countDays.js":"44","D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx":"45","D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx":"46","D:\\newprojects\\techs\\src\\components\\Icon\\index.js":"47","D:\\newprojects\\techs\\src\\components\\Accordion\\index.js":"48","D:\\newprojects\\techs\\src\\components\\Modal\\index.js":"49","D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\index.js":"50","D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js":"51","D:\\newprojects\\techs\\src\\components\\ActiveCategories\\index.js":"52","D:\\newprojects\\techs\\src\\components\\ListTechnics\\index.js":"53","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx":"54","D:\\newprojects\\techs\\src\\components\\Icon\\Icon.jsx":"55","D:\\newprojects\\techs\\src\\components\\ListTechnics\\ListTechnics.jsx":"56","D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx":"57","D:\\newprojects\\techs\\src\\components\\ActiveCategories\\ActiveCategories.jsx":"58","D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx":"59","D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx":"60","D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx":"61","D:\\newprojects\\techs\\src\\components\\Profile\\index.js":"62","D:\\newprojects\\techs\\src\\components\\global\\global.js":"63","D:\\newprojects\\techs\\src\\components\\global\\groupArray.js":"64","D:\\newprojects\\techs\\src\\components\\global\\getProperty.js":"65","D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx":"66","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\index.js":"67","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx":"68","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js":"69","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx":"70","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx":"71","D:\\newprojects\\techs\\src\\components\\Portfolio\\index.js":"72","D:\\newprojects\\techs\\src\\components\\Portfolio\\Portfolio.jsx":"73","D:\\newprojects\\techs\\src\\components\\Title\\index.js":"74","D:\\newprojects\\techs\\src\\components\\Title\\Title.jsx":"75","D:\\newprojects\\techs\\src\\components\\StagesFueling\\index.js":"76","D:\\newprojects\\techs\\src\\components\\StagesFueling\\StagesFueling.jsx":"77"},{"size":585,"mtime":1619453189691,"results":"78","hashOfConfig":"79"},{"size":362,"mtime":499162500000,"results":"80","hashOfConfig":"79"},{"size":882,"mtime":1629140912939,"results":"81","hashOfConfig":"79"},{"size":364,"mtime":1628266721671,"results":"82","hashOfConfig":"79"},{"size":4067,"mtime":1622231323629,"results":"83","hashOfConfig":"79"},{"size":2414,"mtime":1613510004007,"results":"84","hashOfConfig":"79"},{"size":2962,"mtime":1622061365007,"results":"85","hashOfConfig":"79"},{"size":2403,"mtime":1629473228161,"results":"86","hashOfConfig":"79"},{"size":800,"mtime":1624975646264,"results":"87","hashOfConfig":"79"},{"size":11955,"mtime":1629389784014,"results":"88","hashOfConfig":"79"},{"size":2937,"mtime":1629404711828,"results":"89","hashOfConfig":"79"},{"size":511,"mtime":1629471241286,"results":"90","hashOfConfig":"79"},{"size":5508,"mtime":1629469969762,"results":"91","hashOfConfig":"79"},{"size":348,"mtime":1620069278960,"results":"92","hashOfConfig":"79"},{"size":203,"mtime":1619365649818,"results":"93","hashOfConfig":"79"},{"size":198,"mtime":1622062179840,"results":"94","hashOfConfig":"79"},{"size":362,"mtime":1619813994120,"results":"95","hashOfConfig":"79"},{"size":3063,"mtime":1629470113430,"results":"96","hashOfConfig":"79"},{"size":1543,"mtime":1629471264224,"results":"97","hashOfConfig":"79"},{"size":1741,"mtime":1619363631463,"results":"98","hashOfConfig":"79"},{"size":488,"mtime":1620058626451,"results":"99","hashOfConfig":"79"},{"size":201,"mtime":1621960851643,"results":"100","hashOfConfig":"79"},{"size":371,"mtime":1628955384434,"results":"101","hashOfConfig":"79"},{"size":687,"mtime":1629140912939,"results":"102","hashOfConfig":"79"},{"size":456,"mtime":1621279691901,"results":"103","hashOfConfig":"79"},{"size":66,"mtime":1629140912939,"results":"104","hashOfConfig":"79"},{"size":522,"mtime":1629053061231,"results":"105","hashOfConfig":"79"},{"size":676,"mtime":1629389784014,"results":"106","hashOfConfig":"79"},{"size":415,"mtime":1625133389273,"results":"107","hashOfConfig":"79"},{"size":296,"mtime":1627408270784,"results":"108","hashOfConfig":"79"},{"size":1920,"mtime":1629494860475,"results":"109","hashOfConfig":"79"},{"size":5367,"mtime":1629140912939,"results":"110","hashOfConfig":"79"},{"size":2758,"mtime":1629471538729,"results":"111","hashOfConfig":"79"},{"size":9020,"mtime":1629546850690,"results":"112","hashOfConfig":"79"},{"size":12344,"mtime":1629217422232,"results":"113","hashOfConfig":"79"},{"size":3860,"mtime":1629547637600,"results":"114","hashOfConfig":"79"},{"size":819,"mtime":1629469849697,"results":"115","hashOfConfig":"79"},{"size":5659,"mtime":1629140912939,"results":"116","hashOfConfig":"79"},{"size":385,"mtime":1627054954769,"results":"117","hashOfConfig":"79"},{"size":665,"mtime":1621020966360,"results":"118","hashOfConfig":"79"},{"size":257,"mtime":1629469849696,"results":"119","hashOfConfig":"79"},{"size":3091,"mtime":1628324873170,"results":"120","hashOfConfig":"79"},{"size":2563,"mtime":1622837644323,"results":"121","hashOfConfig":"79"},{"size":214,"mtime":1628412940933,"results":"122","hashOfConfig":"79"},{"size":1704,"mtime":1629550508670,"results":"123","hashOfConfig":"79"},{"size":3842,"mtime":1629494828867,"results":"124","hashOfConfig":"79"},{"size":211,"mtime":1628266832820,"results":"125","hashOfConfig":"79"},{"size":86,"mtime":1627408270781,"results":"126","hashOfConfig":"79"},{"size":53,"mtime":1625225106329,"results":"127","hashOfConfig":"79"},{"size":414,"mtime":1628707279461,"results":"128","hashOfConfig":"79"},{"size":381,"mtime":1627573523918,"results":"129","hashOfConfig":"79"},{"size":260,"mtime":1628707279459,"results":"130","hashOfConfig":"79"},{"size":423,"mtime":1629009930122,"results":"131","hashOfConfig":"79"},{"size":205,"mtime":1618141801688,"results":"132","hashOfConfig":"79"},{"size":700,"mtime":1629021941318,"results":"133","hashOfConfig":"79"},{"size":6094,"mtime":1629015007620,"results":"134","hashOfConfig":"79"},{"size":2239,"mtime":1629143967259,"results":"135","hashOfConfig":"79"},{"size":1331,"mtime":1628933331687,"results":"136","hashOfConfig":"79"},{"size":455,"mtime":1628324718494,"results":"137","hashOfConfig":"79"},{"size":4183,"mtime":1629140912924,"results":"138","hashOfConfig":"79"},{"size":4169,"mtime":1628933201629,"results":"139","hashOfConfig":"79"},{"size":219,"mtime":1629472917377,"results":"140","hashOfConfig":"79"},{"size":1216,"mtime":1629142652754,"results":"141","hashOfConfig":"79"},{"size":287,"mtime":1628931477543,"results":"142","hashOfConfig":"79"},{"size":171,"mtime":1628611265499,"results":"143","hashOfConfig":"79"},{"size":2483,"mtime":1629494955727,"results":"144","hashOfConfig":"79"},{"size":425,"mtime":1627579228961,"results":"145","hashOfConfig":"79"},{"size":287,"mtime":1627054954773,"results":"146","hashOfConfig":"79"},{"size":390,"mtime":1628265685551,"results":"147","hashOfConfig":"79"},{"size":5882,"mtime":1629024227244,"results":"148","hashOfConfig":"79"},{"size":1787,"mtime":1628939771776,"results":"149","hashOfConfig":"79"},{"size":189,"mtime":1629470635046,"results":"150","hashOfConfig":"79"},{"size":1146,"mtime":1629473962555,"results":"151","hashOfConfig":"79"},{"size":51,"mtime":1629471755967,"results":"152","hashOfConfig":"79"},{"size":184,"mtime":1629471899733,"results":"153","hashOfConfig":"79"},{"size":488,"mtime":1629547711376,"results":"154","hashOfConfig":"79"},{"size":8695,"mtime":1629547530823,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},"17rpeos",{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"158"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"158"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"158"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"158"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"158"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"158"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"158"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"158"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"158"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"158"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"158"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"158"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"158"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"158"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"158"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"158"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"158"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"158"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\newprojects\\techs\\src\\index.js",[],["329","330"],"D:\\newprojects\\techs\\src\\reportWebVitals.js",[],"D:\\newprojects\\techs\\src\\redux\\redux-store.js",[],"D:\\newprojects\\techs\\src\\components\\App\\index.js",[],"D:\\newprojects\\techs\\src\\redux\\Users-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\App-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Printers-reducer.js",["331","332"],"import {printersAPI, techAPI} from \"../api/api\";\r\n\r\nconst GET_REFILLS = 'GET_REFILLS';\r\nconst GET_ALL_REFILLS = 'GET_ALL_REFILLS'\r\nconst GET_CURRENT_REFILLS = 'GET_CURRENT_REFILLS'\r\nconst SET_PRINTERS = 'SET_PRINTERS'\r\nconst SET_REFILL = 'SET_REFILL'\r\n\r\nlet initialState = {\r\n    refills: [],\r\n    printers: [],\r\n    allRefills: [],\r\n    currentRefills: []\r\n}\r\n\r\nconst PrintersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_REFILLS: {\r\n            return {\r\n                ...state,\r\n                refills: action.payload\r\n            }\r\n        }\r\n        case GET_ALL_REFILLS: {\r\n            return {\r\n                ...state,\r\n                allRefills: action.payload\r\n            }\r\n        }\r\n        case GET_CURRENT_REFILLS: {\r\n            return {\r\n                ...state,\r\n                currentRefills: action.payload\r\n            }\r\n        }\r\n        case SET_PRINTERS: {\r\n            return {\r\n                ...state,\r\n                printers: action.payload\r\n            }\r\n        }\r\n        case SET_REFILL: {\r\n            return {\r\n                ...state,\r\n                allRefills: [...state.allRefills, action.payload]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport const setAllRefillsAC = (payload) => {\r\n    return {type: GET_ALL_REFILLS, payload}\r\n};\r\nexport const setCurrentRefillsAC = (payload) => {\r\n    return {type: GET_CURRENT_REFILLS, payload}\r\n}\r\nexport const setRefillAC = (payload) => {\r\n    return {type: SET_REFILL, payload}\r\n}\r\n\r\nexport const setRefillsAC = (payload) => {\r\n    return {type: GET_REFILLS, payload}\r\n};\r\nexport const setPrintersAC = (payload) => {\r\n    return {type: SET_PRINTERS, payload}\r\n};\r\n\r\nexport const getAllRefills = () => async (dispatch) => {\r\n    let response = await printersAPI.getAllRefills()\r\n    dispatch(setAllRefillsAC(response))\r\n}\r\nexport const getRefills = (id) => async (dispatch) => {\r\n    let response = await printersAPI.getRefills(id)\r\n    dispatch(setRefillsAC(response))\r\n}\r\nexport const getCurrentRefills = () => async (dispatch) => {\r\n    let response = await printersAPI.getCurrentRefills()\r\n    dispatch(setCurrentRefillsAC(response))\r\n    return response\r\n}\r\n\r\nexport const getPrintersAll = () => async (dispatch) => {\r\n    let response = await printersAPI.getPrintersAll()\r\n    dispatch(setPrintersAC(response))\r\n}\r\nexport const sendOrder = (id) => async (dispatch) => {\r\n    let response = await printersAPI.sendOrder(id)\r\n    dispatch(setPrintersAC(response))\r\n}\r\n\r\nexport const updateCurrentRefills = (data) => async (dispatch) => {\r\n    let response = await printersAPI.updateCurrentRefills(data)\r\n}\r\n\r\nexport const addRefillForPrinter = (id, data) => {\r\n    return async (dispatch) => {\r\n        let response = await printersAPI.addRefillForPrinter(id, data)\r\n        dispatch(setRefillAC(response))\r\n    }\r\n}\r\n\r\nexport default PrintersReducer","D:\\newprojects\\techs\\src\\components\\App\\App.jsx",["333"],"import React, {useEffect} from \"react\";\r\nimport Header from \"../Header\";\r\nimport {Switch} from \"react-router-dom\";\r\nimport AppWithRouter from \"./AppWithRouter\";\r\nimport Authorization from \"./Authorization\";\r\n\r\nconst App = ({isAuth, getTypes}) => {\r\n    useEffect(() => {\r\n        getTypes()\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Switch>\r\n                {!isAuth ? <AppWithRouter/> : <Authorization/>}\r\n            </Switch>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default App\r\n","D:\\newprojects\\techs\\src\\api\\api.js",["334","335"],"import axios from \"axios\";\r\nimport {sendOrder, updateCurrentRefills} from \"../redux/Printers-reducer\";\r\n\r\n// const URL = 'https://technicsklevzhits.herokuapp.com'\r\nconst URL = 'http://localhost:3004'\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"69bc9857-b17c-4142-859f-4409d84efd2a\"\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(rowsPerPage, currentPage, friend) {\r\n        return instance.get(`/users?page=${currentPage}&count=${rowsPerPage}&friend=${friend}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    following(id) {\r\n        return instance.post(`/follow/${id}`)\r\n    },\r\n    unfollowing(id) {\r\n        return instance.delete(`/follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserInfo(id) {\r\n        return instance.get(`/profile/${id}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`/profile/status/${id}`)\r\n            .then(responce => responce)\r\n    },\r\n    updateUserInfo(user) {\r\n        return instance.put(`/profile`, user)\r\n            .then(responce => responce.data)\r\n    },\r\n\r\n    uploadPhoto(photo) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {'content-type': 'multipart/form-data'}\r\n        })\r\n\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', status)\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`).then(responce => responce.data)\r\n    },\r\n    login(email, password, rememberMe, captcha) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe, captcha}).then(responce => responce.data)\r\n    },\r\n    getCaptcha() {\r\n        return instance.get(`/security/get-captcha-url`).then(responce => {\r\n            return responce.data.url\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.post(`/auth/logout`).then(responce => responce.data)\r\n    }\r\n}\r\n\r\nexport const techAPI = {\r\n    getTypes() {\r\n        return axios.get(`${URL}/types`).then(responce => responce.data)\r\n    },\r\n    addType(obj) {\r\n        return axios.post(`${URL}/types`, obj).then(response => response)\r\n    },\r\n    deleteType(id) {\r\n        return axios.delete(`${URL}/types/${id}`).then(response => response)\r\n    },\r\n    editType(id, obj) {\r\n        return axios.put(`${URL}/types/${id}`, obj).then(response => response)\r\n    },\r\n    getActiveType(value) {\r\n        return axios.get(`${URL}/types?type=${value}`).then(response => response.data[0])\r\n    },\r\n    getTechnicsForType(value) {\r\n        // const arrayToQuery = (property, arr) => {\r\n        //     if ((arr[0] === \"\") || (arr.length === 0)) {\r\n        //         return ``\r\n        //     }\r\n        //     else {\r\n        //         return (arr.map(el => {\r\n        //             return `&${property}=${el}`\r\n        //         })).join('')\r\n        //     }\r\n        // }\r\n        // let queryYears = arrayToQuery(\"year\", years)\r\n        // let buildsYears = arrayToQuery(\"korpus\", builds)\r\n        return axios.get(`${URL}/technics?type_like=${value}`).then(response => response.data)\r\n    },\r\n    getTechnicInfo(id) {\r\n        return axios.get(`${URL}/technics/${id}`).then(response => response.data)\r\n    },\r\n    updateTechnic(id, data) {\r\n        return axios.patch(`${URL}/technics/${id}`, data).then(response => response)\r\n    },\r\n    // id = \"18\", data = {date: \"2019-01-01\"}\r\n    // id = \"18\", data = {print: true}\r\n    getUsers() {\r\n        return axios.get(`${URL}/users`).then(responce => responce.data)\r\n    },\r\n    getRooms() {\r\n        return axios.get(`${URL}/technics`).then(responce => responce.data)\r\n    },\r\n    addUser(data) {\r\n        return axios.post(`${URL}/users`, {name: data}).then(responce => responce.data)\r\n    },\r\n    getComments(id) {\r\n        return axios.get(`${URL}/technics/${id}/comments`).then(responce => responce.data)\r\n    },\r\n    addComment(id, val) {\r\n        return axios.post(`${URL}/technics/${id}/comments`, {\r\n            \"postId\": id,\r\n            \"date\": new Date(),\r\n            \"body\": val\r\n        }).then(responce => responce.data)\r\n    },\r\n    getTechnicsByRoom(room) {\r\n        return axios.get(`${URL}/technics?room=${room}`).then(response => response.data)\r\n    },\r\n    addTechnic(data) {\r\n        return axios.post(`${URL}/technics`, data).then(responce => responce.data)\r\n    }\r\n}\r\nexport const printersAPI = {\r\n    getRefills(id) {\r\n        return axios.get(`${URL}/technics/${id}/refills`).then(response => response.data)\r\n    },\r\n    getAllRefills() {\r\n        return axios.get(`${URL}/refills`).then(response => response.data)\r\n    },\r\n    getCurrentRefills() {\r\n        return axios.get(`${URL}/refillsCurrent/1`).then(response => response.data.arr)\r\n    },\r\n    getPrintersAll() {\r\n        return axios.get(`${URL}/technics?type=Принтер&type=МФУ&type=Ксерокс`).then(response => response.data)\r\n    },\r\n    updateCurrentRefills(data) {\r\n        let obj = {\r\n            \"arr\": data\r\n        }\r\n        return axios.patch(`${URL}/refillsCurrent/1`, obj).then(response => response.data)\r\n    },\r\n    addRefillForPrinter(id, data) {\r\n        let obj = {\r\n            ...data,\r\n            \"receiverDate\": Date.now(),\r\n        }\r\n        return axios.post(`${URL}/technics/${id}/refills`, obj).then(response => response.data)\r\n    }\r\n}\r\n\r\n","D:\\newprojects\\techs\\src\\components\\Header\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx",["336"],"import {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Profile from \"../../../pages/Profile\";\r\nimport SignInPage from \"../../../pages/SignInPage\";\r\nimport UsersPage from \"../../../pages/UsersPage\";\r\nimport TypesPage from \"../../../pages/TypesTechnicsPage\";\r\nimport TypePage from \"../../../pages/TypePage\";\r\nimport TechnicPage from \"../../../pages/TechnicPage\";\r\nimport RoomPage from \"../../../pages/RoomPage\";\r\nimport PrintersPage from \"../../../pages/PrintersPage\";\r\nimport EventsPage from \"../../../pages/EventsPage\";\r\n\r\nconst AppWithRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' render={() => <Redirect to='/types'/>}/>\r\n            <Route exact path='/profile' render={() => <Profile/>}/>\r\n            <Route path='/profile/:uID' render={() => <Profile/>}/>\r\n            <Route exact path='/types' render={() => <TypesPage/>}/>\r\n            <Route path='/types/:type' render={() => <TypePage/>}/>\r\n            <Route path='/technics/:id' render={() => <TechnicPage/>}/>\r\n            <Route exact path='/room' render={() => <div>По кабинетам</div>}/>\r\n            <Route path='/room/:room' render={() => <RoomPage/>}/>\r\n            <Route path='/printers' render={() => <PrintersPage/>}/>\r\n            <Route path='/events' render={() => <EventsPage/>}/>\r\n            <Route path='/signin' render={() => <SignInPage/>}/>\r\n            <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AppWithRouter","D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js",[],"D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\RoomPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\EventsPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js",["337"],"import {connect} from \"react-redux\";\r\nimport TypePage from \"./TypePage\";\r\nimport {addUser, getActiveType, addTechnic} from \"../../redux/Tech-reducer\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeType: state.techs.activeType,\r\n        technicsLength: state.techs.technics.length,\r\n        toogleLoadingInfoFotType: state.techs.toogleLoadingInfoFotType,\r\n    }\r\n}\r\nconst mapToDispatch = {\r\n    getActiveType,\r\n    addTechnic\r\n}\r\n\r\nexport default connect(mapStateToProps, mapToDispatch)(TypePage)\r\n","D:\\newprojects\\techs\\src\\pages\\PrintersPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx",["338"],"import React, {useEffect} from \"react\";\r\nimport {Container, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport Users from \"../../components/Users\";\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n// });\r\n\r\nconst UsersPage = ({isFetching, rowsPerPage, currentPage, getUsers, match}) => {\r\n    let sectionUrl = match.params.section\r\n    const [value, setValue] = React.useState(0);\r\n    useEffect(() => {\r\n        if (sectionUrl === 'following') {\r\n            setValue(1)\r\n            getUsers(rowsPerPage, currentPage, true);\r\n        }\r\n        if (sectionUrl === 'allusers') {\r\n            setValue(0)\r\n            getUsers(rowsPerPage, currentPage, false);\r\n        }\r\n    }, [sectionUrl])\r\n    // const classes = useStyles();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!isFetching\r\n                ? <Container>\r\n                    <Typography variant=\"body1\" component=\"span\">\r\n                    </Typography>\r\n                    <Paper square>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={handleChange}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"All Users\" component={Link} to=\"/users/allusers\"/>\r\n                            <Tab label=\"following\" component={Link} to=\"/users/following\"/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <Users/>\r\n                </Container>\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersPage)","D:\\newprojects\\techs\\src\\pages\\EventsPage\\EventsPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\RoomPage\\RoomPage.jsx",["339","340","341"],"import {Avatar, Card, Container, Grid, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useEffect, useState} from \"react\";\r\nimport images from \"../../components/global/images\";\r\n\r\nconst layout = [\"Системный блок\", \"Компьютер (комплект)\", \"Монитор\", \"Моноблок\", \"Ноутбук\",\"Телевизор\",  \"Проектор\",\"Принтер\", \"МФУ\",\"Сканер\",\"Ксерокс\",\r\n    \"Акустическая система\",\"Планшет\",\"Веб-камера\", \"Мышь\",  \"Клавиатура\", \"Фотоаппарат\", \"Документ-камера\", \"Перфобиндер\"]\r\n\r\nconst RoomPage = ({getTechnicsByRoom, technicsByRoom}) => {\r\n    let {room} = useParams();\r\n    const [technics, setTechnics] = useState(\"\")\r\n    useEffect(() => {\r\n        async function getTechnics() {\r\n            let response = await getTechnicsByRoom(room)\r\n            return response\r\n        }\r\n        getTechnics().then(response => setTechnics(response))\r\n    }, [])\r\n    return <Container>\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Typography>Перечень техники кабинета {room}</Typography>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} style={{display: \"flex\",justifyContent: \"space-around\", flexWrap: \"wrap\"}}>\r\n\r\n                {technicsByRoom.map(obj => {\r\n                    return <Card style={{maxWidth: \"300px\", minWidth: \"300px\", marginTop: \"15px\"}}>\r\n                        {obj.user}\r\n                        <List>\r\n                            {\r\n                                layout.map(el => {\r\n                                   return  obj.properties.map(technic => {\r\n                                        if (el === technic.type) {\r\n                                            return <ListItem component={Link} to={`/technics/${technic.id}`}>\r\n                                                <ListItemIcon>\r\n                                                    <Avatar variant={\"square\"} src={images[technic.name]}></Avatar>\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary={technic.name} secondary={technic.type}/>\r\n                                            </ListItem>\r\n                                        }\r\n                                    })\r\n                                })\r\n                            }\r\n                        </List>\r\n\r\n                    </Card>\r\n                })}\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n    </Container>\r\n}\r\n\r\nexport default RoomPage","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx",["342","343","344"],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx",["345","346","347","348","349","350"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Divider,\r\n    Grid, IconButton,\r\n    List, ListItem, ListItemAvatar, ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {deepOrange} from '@material-ui/core/colors';\r\nimport ControlledAccordions from \"../../components/Accordion\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemForm from \"../../components/ListItemForm\";\r\nimport Icon from \"../../components/Icon\";\r\nimport countDays from \"../../components/global/countDays\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {format} from \"date-fns\";\r\nimport images from \"../../components/global/images\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatarWrapper: {\r\n        padding: \"20px\",\r\n        textAlign: \"center\"\r\n    },\r\n    devider: {\r\n        margin: \"20px\"\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        margin: \"0 auto\",\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n        cursor: \"pointer\"\r\n    },\r\n    technicInfoWrapper: {\r\n        padding: \"20px\"\r\n    },\r\n    listItemText: {\r\n        fontSize: '1.1em',\r\n        fontWeight: \"bold\"\r\n    },\r\n    paper: {\r\n        padding: \"10px\",\r\n        width: \"100%\"\r\n    },\r\n    repairs: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    repair: {\r\n        minWidth: \"200px\",\r\n        width: \"23%\",\r\n        textAlign: \"center\"\r\n    },\r\n    margin: {\r\n        margin: \"20px 0\"\r\n    }\r\n}))\r\nlet repair = [\r\n    {\r\n        id: '1',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '2',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '3',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '4',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n\r\n]\r\n\r\nconst TechnicPage = ({\r\n                         activeTechnic,\r\n                         getTechnicInfo,\r\n                         users,\r\n                         addComment,\r\n                         activeTechnicComments,\r\n                         getComments,\r\n                         getRefills,\r\n                         refills\r\n                     }) => {\r\n    useEffect(() => {\r\n        getTechnicInfo(params.id)\r\n        getComments(params.id)\r\n        getRefills(params.id)\r\n    }, [])\r\n    const {register, handleSubmit, watch, formState: {errors}} = useForm();\r\n\r\n    const [aaa, setAaa] = useState(false)\r\n    const [bbb, setBbb] = useState(false)\r\n    const [ccc, setCcc] = useState(false)\r\n\r\n    const onSubmit = data => {\r\n        addComment(activeTechnic.id, data.msg)\r\n    };\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    const formatDate = (value) => {\r\n        return format(new Date(value), 'dd.MM.yyyy')\r\n    }\r\n    const addImage = (name) => {\r\n        console.log(images[name])\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Paper>\r\n                        <div className={classes.avatarWrapper}>\r\n                            <Avatar\r\n                                variant={\"square\"}\r\n                                src={images[activeTechnic.name]}\r\n                                className={classes.avatar}\r\n                            >\r\n                            </Avatar>\r\n                            <Divider className={classes.devider}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"type\"} text={\"Тип\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"name\"} text={\"Наименование\"}/>\r\n\r\n                        </div>\r\n                    </Paper>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                        <IconButton aria-label=\"delete\" color={aaa ? \"primary\" : \"secondary\"} onClick={() => setAaa(!aaa)}>\r\n                            <SettingsIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"delete\" color={bbb ? \"primary\" : \"secondary\"} onClick={() => setBbb(!bbb)}>\r\n                            <CommentIcon />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Место установки\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <List>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"room\"} text={\"Кабинет\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"build\"} text={\"Корпус\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"user\"} text={\"ФИО сотрудника\"}\r\n                                              array={users}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"date\"}\r\n                                              text={\"Дата получения\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"faculty\"}\r\n                                              text={\"Факультет\"}/>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Бухгалтерия\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"invent\"} text={\"Инвентарный номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"zavod\"} text={\"Заводской номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"matfyo\"}\r\n                                          text={\"Материально-ответственное лицо\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"year\"} text={\"Год выпуска\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"print\"} text={\"Наклейка\"}/>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {aaa && <Grid className={classes.margin} container spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                        Комментарии\r\n                    </Typography>\r\n                    <Typography>Описание: {activeTechnic.desc}</Typography>\r\n                    <Typography>Проблема: {activeTechnic.problem}</Typography>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input defaultValue=\"test\" {...register(\"msg\")} />\r\n                        <input type=\"submit\"/>\r\n                    </form>\r\n                    <List>\r\n                        {activeTechnicComments.map((el, i) => {\r\n                            return <ListItem key={i}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={el.body} secondary={formatDate(el.date)}/>\r\n                            </ListItem>\r\n                        })}\r\n\r\n                    </List>\r\n\r\n\r\n                </Paper>\r\n\r\n            </Grid>}\r\n            {bbb && <Grid container className={classes.margin} spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Заявки на ремонт\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<Icon type={\"send\"}></Icon>}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className={classes.repairs}>\r\n                        {repair.map(el => {\r\n                            return <Card className={classes.repair}>\r\n                                <CardContent>\r\n                                    <Typography>Дата заявки: {el.application}</Typography>\r\n                                    <Typography>Проблема: {el.message}</Typography>\r\n                                    <Typography>Дата передачи: {el.dispatch}</Typography>\r\n                                    <Typography>Дата получения: {el.getting}</Typography>\r\n                                    <Typography>Всего в ремонте: {countDays(el.dispatch, el.getting)}</Typography>\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        })}\r\n                    </div>\r\n                </Paper>\r\n\r\n            </Grid>}\r\n            <Grid container className={classes.margin} spacing={2}>\r\n                {\r\n                    ((activeTechnic.type === 'Принтер') || (activeTechnic.type === 'МФУ') || (activeTechnic.type === 'Ксерокс')) &&\r\n                    <Paper className={classes.paper}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Заправки\r\n                        </Typography>\r\n                        <Button component={Link} to={\"/printers\"} variant={\"contained\"}\r\n                                color={\"primary\"}>Заполнить</Button>\r\n                        <Typography variant={\"body2\"}>Максимальное количество\r\n                            заправок за год: 2</Typography>\r\n                        <Divider/>\r\n                        {/*<Steppers/>*/}\r\n\r\n                        {refills ? <>\r\n                            <div>\r\n\r\n                                <ControlledAccordions array={refills}/>\r\n                            </div>\r\n                        </> : <Button component={Link} to={\"/printers\"}>Заполнить</Button>}\r\n                    </Paper>\r\n                }\r\n            </Grid>\r\n\r\n            <Grid container className={classes.margin} spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Техника в этом кабинете\r\n                        </Typography>\r\n                    </div>\r\n                    <div>\r\n                        <Button component={Link} to={`/room/${activeTechnic.room}`}>Техника кабинета</Button>\r\n\r\n                    </div>\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TechnicPage;","D:\\newprojects\\techs\\src\\pages\\PrintersPage\\PrintersPage.jsx",["351","352","353","354","355","356","357","358","359","360","361","362","363","364"],"D:\\newprojects\\techs\\src\\components\\global\\groupElementsByDate.js",["365"],"import formatDate from \"./formatDate\";\r\n\r\nconst groupElementsByDate = (array, property) => {\r\n    return array.reduce((previousValue, currentValue) => {\r\n        let b = formatDate(currentValue[property])\r\n        let objType = previousValue.find((element) => {\r\n            let a = element[\"date\"]\r\n                if (a === b) {\r\n                    return element\r\n                }\r\n            }\r\n        );\r\n        if (!objType) {\r\n            const currentValueDDMMYYYY = formatDate(currentValue[property])\r\n            previousValue.push({\r\n                \"date\": currentValueDDMMYYYY,\r\n                properties: [currentValue]\r\n            });\r\n        } else {\r\n            objType.properties.push(currentValue);\r\n        }\r\n        return previousValue;\r\n    }, [])\r\n}\r\nexport default groupElementsByDate","D:\\newprojects\\techs\\src\\components\\global\\images.js",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Users\\index.js",[],"D:\\newprojects\\techs\\src\\components\\global\\formatDate.js",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx",["366"],"import {\r\n    Button, DialogActions, DialogContent,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    ListSubheader, TextField\r\n} from \"@material-ui/core\";\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport {DeleteOutline} from \"@material-ui/icons\";\r\nimport React, {useEffect} from \"react\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from \"../Modal\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport Icon from \"../Icon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    activeType: {\r\n      background: \"#d5d5d5\"\r\n    }\r\n}));\r\n\r\nconst ListTypes = ({types, deleteType, getTypes, addType}) => {\r\n    const params = useParams();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = data => addType(data);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        getTypes()\r\n    }, [])\r\n    return (\r\n        <>\r\n            {types &&\r\n            <List subheader={<ListSubheader>Settings</ListSubheader>}>\r\n                {types.map(el => {\r\n                        return <ListItem className={(params.type === el.type) ? classes.activeType : \"\"} component={Link} to={`/types/${el.type}`} key={el.id}>\r\n\r\n                            <ListItemIcon>\r\n                                <Icon type={el.type} />\r\n                            </ListItemIcon>\r\n                            <ListItemText id=\"switch-list-label-wifi\" primary={el.name}/>\r\n                            <ListItemSecondaryAction>\r\n                                <DeleteOutline onClick={() => deleteType(el.id)}/>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    }\r\n                )}\r\n            </List>\r\n            }\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                startIcon={<CloudUploadIcon/>} onClick={handleClickOpen}>\r\n                Добавить тип\r\n            </Button>\r\n\r\n            <Modal open={open} handleClose={handleClose} title={\"Добавить тип\"}>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <DialogContent>\r\n                        <TextField {...register(\"type\")} defaultValue=\"type\"/>\r\n                        <TextField {...register(\"name\")} defaultValue=\"name\"/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </DialogActions>\r\n                </form>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListTypes\r\n\r\n","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\countDays.js",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx",[],"D:\\newprojects\\techs\\src\\components\\Icon\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Accordion\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Modal\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ActiveCategories\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListTechnics\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx",[],"D:\\newprojects\\techs\\src\\components\\Icon\\Icon.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListTechnics\\ListTechnics.jsx",["367","368","369","370","371","372","373"],"import {Card, CardContent, Divider, List} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MiniCardTechnic from \"../MiniCardTechnic\";\r\nimport MiniCardTechnicSkeleton from \"../MiniCardTechnic/MiniCardTechnicSceleton\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport groupArray from \"../global/groupArray\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    roomItem: {\r\n        marginTop: \"20px\",\r\n        padding: \"7px\"\r\n    },\r\n    roomNumber: {}\r\n}));\r\n\r\n// const schema = [\r\n//     {\r\n//         address: \"Голубева, 26\",\r\n//         build: \"9\",\r\n//         blocks: [\r\n//             {\r\n//                 name: \"1 блок\",\r\n//                 rooms: [1, 2, 3, 8, 10],\r\n//             }, {\r\n//                 name: \"2 блок\",\r\n//                 rooms: [11, 14, 15, 16, \"Охрана\"],\r\n//             }, {\r\n//                 name: \"3 блок\",\r\n//                 rooms: [21, 22, 23, 24, 25, 26],\r\n//             }, {\r\n//                 name: \"4 блок\",\r\n//                 rooms: [31, 34, 35, 36, \"Архив\"],\r\n//             }, {\r\n//                 name: \"Гостиница\",\r\n//                 rooms: [\"Администратор\", \"Заведующий\"],\r\n//             }, {\r\n//                 name: \"Первое образование\",\r\n//                 rooms: [\"Администратор\", \"Заведующий\", \"Кабушкина\", \"Могилевская\"],\r\n//             }\r\n//         ]\r\n//     },\r\n//     {\r\n//         address: \"Советская, 18\",\r\n//         build: \"1\",\r\n//         blocks: [\r\n//             {\r\n//                 name: \"5 этаж\",\r\n//                 rooms: [142],\r\n//             },\r\n//             {\r\n//                 name: \"8 этаж\",\r\n//                 rooms: [81, 82, 83, 84, 85, 88],\r\n//             }, {\r\n//                 name: \"10 этаж\",\r\n//                 rooms: [101, 102, 103, 104, 105, 106, 107, 108, \"Кладовка\", \"Лифтовая\"],\r\n//             }, {\r\n//                 name: \"11 этаж\",\r\n//                 rooms: [113, 118],\r\n//             }, {\r\n//                 name: \"12 этаж\",\r\n//                 rooms: [121, 122, 123, 124, 125],\r\n//             }, {\r\n//                 name: \"13 этаж\",\r\n//                 rooms: [132],\r\n//             }, {\r\n//                 name: \"14 этаж\",\r\n//                 rooms: [571],\r\n//             }\r\n//         ]\r\n//     }\r\n// ]\r\n\r\nconst ListTechnics = ({technicsByCategory, toogleLoadingInfoFotType, categories}) => {\r\n    const classes = useStyles();\r\n    const generateCondition = (el) => {\r\n        let groupCategories = groupArray(categories)\r\n\r\n        return Object.keys(groupCategories).every(key => {\r\n            return groupCategories[key].some(elArr => elArr === el[key])\r\n        })\r\n    }\r\n    const checkItem = (el) => {\r\n        return (generateCondition(el)) ? true : false\r\n    }\r\n    const checkObj = (obj) => {\r\n        let a = obj.some(el => checkItem(el))\r\n        return a\r\n    }\r\n    const Cardd = ({el}) => {\r\n        return <Card key={el.room} className={classes.roomItem}>\r\n            <Typography component={Link} to={`/room/${el.room}`} variant={\"h5\"} className={`${classes.roomNumber}`}>\r\n                {!(Number.parseInt(el.room)) ? el.room : `${el.room} кабинет`}\r\n            </Typography>\r\n\r\n            <List dense>\r\n                {el.properties.map((el1, i) => {\r\n                    return !toogleLoadingInfoFotType\r\n                        ? <MiniCardTechnic key={i} el={el1}/>\r\n                        : <MiniCardTechnicSkeleton key={i}/>\r\n                })}\r\n            </List>\r\n        </Card>\r\n    }\r\n    const filteredTechnics = technicsByCategory.map((obj, i) => {\r\n        if (categories.length === 0) {\r\n            return <Cardd key={i} el={obj}/>\r\n        } else {\r\n            if (checkObj(obj.properties)) {\r\n                return <Cardd key={i} el={obj}/>\r\n            } else {\r\n                return null\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {filteredTechnics}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListTechnics\r\n\r\n\r\n// {schema.map(obj => {\r\n//     return <Card key={obj.build} className={classes.roomItem}>\r\n//         <CardContent>\r\n//             <Typography variant={\"h5\"} className={`${classes.roomNumber}`}>\r\n//                 {obj.address}\r\n//             </Typography>\r\n//             <div>\r\n//                 {obj.blocks.map((block) => {\r\n//                     return <Card className={classes.roomItem}>\r\n//                         <Divider/>\r\n//                         <Typography variant={\"h6\"} className={`${classes.roomNumber}`}>\r\n//                             {block.name}</Typography>\r\n//                         <div>\r\n//                             {block.rooms.map(room => {\r\n//                                 { console.log(technics) }\r\n//                                 return <div>\r\n//                                     <Typography component={Link} to={`/room/${room}`} variant={\"h5\"} className={`${classes.roomNumber}`}>\r\n//                                         {!(Number.parseInt(room)) ? room : `${room} кабинет`}\r\n//                                     </Typography>\r\n//\r\n//                                     <List dense>\r\n//                                         {technics.map((el,i) => {\r\n//                                             if (room == el.room) {\r\n//                                                 return <MiniCardTechnic key={i} el={el}/>\r\n//                                             }\r\n//                                         })\r\n//                                         }\r\n//                                     </List>\r\n//                                 </div>\r\n{/*                            })*/}\r\n{/*                            }*/}\r\n//                         </div>\r\n//                     </Card>\r\n//\r\n{/*                })}*/}\r\n{/*            </div>*/}\r\n{/*        </CardContent>*/}\r\n\r\n//     </Card>\r\n// })}","D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx",["374","375"],"import {FormControlLabel, ListItem, ListItemIcon, ListItemText, Switch} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport icons from \"../global/global\";\r\nimport AutocompleteTextarea from \"../AutocompleteTextarea\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Icon from \"../Icon\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItemText: {\r\n        fontSize: '.9em',\r\n        fontWeight: \"bold\"\r\n    }\r\n}))\r\n\r\nconst ListItemForm = ({updateTechnic, activeTechnic, property, text}) => {\r\n\r\n    const classes = useStyles();\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [checked, setChecked] = React.useState('');\r\n    useEffect(() => {\r\n        setChecked(activeTechnic.print)\r\n    }, [activeTechnic])\r\n    const toggleChecked = () => {\r\n        setChecked((prev) => !prev);\r\n        updateTechnic(activeTechnic.id, {\r\n            [property]: !checked\r\n        })\r\n    };\r\n\r\n    const editPropertyTechnic = () => {\r\n        setEditMode(true)\r\n    }\r\n    if (property === 'print') {\r\n        return <FormControlLabel\r\n            control={<Switch checked={checked} onChange={toggleChecked}/>}\r\n            label={text}\r\n        />\r\n    } else {\r\n        return <ListItem onDoubleClick={() => editPropertyTechnic(activeTechnic, property)}>\r\n            <ListItemIcon>\r\n                <Icon component={Link} to={\"/test\"} type={property}/>\r\n            </ListItemIcon>\r\n            {!editMode ? <ListItemText\r\n                classes={{primary: classes.listItemText}}\r\n                primary={activeTechnic[property] ||\r\n                <Button variant=\"contained\" color=\"secondary\"\r\n                        onClick={() => {\r\n                            editPropertyTechnic(activeTechnic, property)\r\n                        }}>Заполнить</Button>}\r\n                secondary={text}\r\n            /> : <AutocompleteTextarea activeTechnic={activeTechnic} property={property} text={text}\r\n                                       setEditMode={setEditMode}/>}\r\n\r\n        </ListItem>\r\n    }\r\n}\r\nexport default ListItemForm\r\n\r\n\r\n","D:\\newprojects\\techs\\src\\components\\ActiveCategories\\ActiveCategories.jsx",["376"],"import React, {useEffect} from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Icon from \"../Icon\";\r\n\r\nconst ActiveCategories = ({categories, handlerCategory}) => {\r\n    const generateUrl = (arr) => {\r\n        let str = Object.keys(categories).map(key => {\r\n            if (categories[key].length === 0) {\r\n                return null\r\n            } else {\r\n                return `${key}=${categories[key]}`\r\n            }\r\n        })\r\n        return str.filter(n => n).join('&')\r\n    } // Генерация URL на основе активных категорий\r\n    let history = useHistory();\r\n    const categoriesElements = categories.map((el,i) => {\r\n        let type = Object.keys(el)[0]\r\n        let value = Object.values(el)[0]\r\n        return <Chip style={{cursor: \"pointer\"}} onClick={() => handlerCategory(type,value)} key={i} avatar={<Icon type={type}></Icon>} label={value}/>\r\n    }) // Генерация карточек по кабинетам\r\n\r\n    useEffect(() => {\r\n        let urlData = generateUrl(categories)\r\n        history.push({\r\n            search: `${(urlData === '&') ? '' : urlData}`\r\n        });\r\n    }, [categories])\r\n    return (\r\n        <>\r\n            {categoriesElements}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActiveCategories","D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx",[],"D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx",[],"D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx",["377","378","379"],"import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport {List, ListItem, ListItemText} from \"@material-ui/core\";\r\nimport Icon from \"../Icon\";\r\nimport getProperty from \"../global/getProperty\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: 224,\r\n    },\r\n    tabs: {\r\n        width: \"30%\",\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    statisticItems: {\r\n        height: \"180px\",\r\n        overflow: \"auto\"\r\n    },\r\n    tabPanel: {\r\n        width: \"70%\",\r\n    },\r\n    active: {\r\n        background: \"red\"\r\n    }\r\n}));\r\n\r\n\r\nconst FiltersTechnics = ({getStatistic, technics, paramsTechnics, statistics, categories, handlerCategory}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    let val = paramsTechnics[value].property\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        getStatistic(val)\r\n    }, [value, technics])\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                {paramsTechnics.map((el, i) => {\r\n                    return <Tab key={i} label={el.title} {...a11yProps(i)} />\r\n                })}\r\n\r\n            </Tabs>\r\n\r\n            {paramsTechnics.map((el, i) => {\r\n                return <TabPanel\r\n                    className={classes.tabPanel}\r\n                    value={value} index={i}>\r\n                    <List key={i} className={classes.statisticItems}>\r\n                        {\r\n                            statistics.map((obj,i) => {\r\n                                let prop = getProperty(obj)\r\n                                const isContains = () => {\r\n                                    let a = categories.some(el => {\r\n                                        if (obj[prop] === el[prop]) {\r\n                                            return true\r\n                                        }\r\n                                    })\r\n                                    return a\r\n                                }\r\n                                return <ListItem key={i} onClick={() => handlerCategory(val, obj.[val])} button\r\n                                                 className={isContains() ? classes.active : null}>\r\n                                    <Icon type={val}/>\r\n                                    <ListItemText\r\n                                        primary={`${obj.[val] || 'Не указано'} - ${obj.properties.length} шт`}/>\r\n                                </ListItem>\r\n                            })\r\n                        }\r\n                    </List>\r\n\r\n                </TabPanel>\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\nconst TabPanel = (props) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default FiltersTechnics","D:\\newprojects\\techs\\src\\components\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\components\\global\\global.js",[],"D:\\newprojects\\techs\\src\\components\\global\\groupArray.js",[],"D:\\newprojects\\techs\\src\\components\\global\\getProperty.js",[],"D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx",["380","381","382"],"import {\r\n    Avatar, Divider,\r\n    Grid, Paper, Typography,\r\n} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport klevzhits from '../../assets/img/technics/klevzhits.jpg'\r\nimport Title from \"../Title\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    name: {\r\n        padding: \"20px\"\r\n    },\r\n    avatar: {\r\n        margin: '0 auto',\r\n    },\r\n    avatarInput: {\r\n        display: \"none\"\r\n    },\r\n    label: {\r\n        background: \"red\"\r\n    }\r\n\r\n}))\r\n\r\nconst Profile = ({user}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <>\r\n                <Grid item xs={4}>\r\n                    <Avatar\r\n                        className={classes.avatar}\r\n                        src={klevzhits}\r\n                        variant=\"circular\"\r\n                    />\r\n                    <Typography>\r\n                        {\r\n                            Object.keys(user.socialLinks).map(key => {\r\n                                return <a href={user.socialLinks[key]}>{key}</a>\r\n                            })\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Typography variant=\"h5\" component=\"h3\" className={classes.name}>{user.name}</Typography>\r\n                    <Divider/>\r\n                    <Title text=\"О себе\"></Title>\r\n                    <Typography>{user.aboutMe}</Typography>\r\n                    <Divider/>\r\n\r\n                    <Title text=\"Контакты\"></Title>\r\n                    <Typography>{user.phone}</Typography>\r\n                    <Typography>{user.email}</Typography>\r\n                    <Divider/>\r\n\r\n                    <Title text=\"Опыт работы\"></Title>\r\n                    <Typography>{user.workExperience.map(el => {\r\n                        return <Typography>{el.company}</Typography>\r\n                    })\r\n                    }</Typography>\r\n                    <Divider/>\r\n\r\n                    <Title text=\"Образование\"></Title>\r\n                    <Typography>{user.education.map(el => {\r\n                        return <Typography>{el.company}</Typography>\r\n                    })\r\n                    }</Typography>\r\n                </Grid>\r\n            </>\r\n        </Grid>\r\n    )\r\n}\r\nexport default withRouter(Profile);","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\index.js",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js",[],"D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx",["383"],"import {IconButton, TextField} from \"@material-ui/core\";\r\nimport Autocomplete, {createFilterOptions} from \"@material-ui/lab/Autocomplete\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    }\r\n}))\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst AutocompleteTextarea = ({activeTechnic, property, updateTechnic, setEditMode, getUsers, getRooms, text}) => {\r\n\r\n    const classes = useStyles()\r\n    const [array, setArray] = useState(\"\")\r\n    const [value, setValue] = useState(null)\r\n    useEffect(() => {\r\n        if (property === 'user1') {\r\n            async function fetchUsers() {\r\n                let response = await getUsers()\r\n                return response\r\n            }\r\n\r\n            fetchUsers().then(response => setArray(response))\r\n        }\r\n        if (property === 'matfyo') {\r\n            async function fetchUsers() {\r\n                let response = await getUsers()\r\n                return response\r\n            }\r\n\r\n            fetchUsers().then(response => setArray(response))\r\n        }\r\n        if (property === 'room') {\r\n            async function fetchRooms() {\r\n                let response = await getRooms()\r\n                return response\r\n            }\r\n\r\n            fetchRooms().then(response => setArray(response))\r\n        }\r\n    }, [])\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSubmit(onSubmit)();\r\n            setArray([])\r\n        }\r\n        if (e.key === 'Escape') {\r\n            setEditMode(false)\r\n        }\r\n\r\n    }\r\n    const selectItem = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setValue({\r\n                [property]: newValue,\r\n            });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setValue({\r\n                [property]: newValue.inputValue,\r\n            });\r\n        } else {\r\n            setValue(newValue);\r\n        }\r\n    }\r\n    const {register, handleSubmit, control, reset} = useForm();\r\n    const onSubmit = (obj) => {\r\n        if (obj[property] === undefined) {\r\n            let val = {\r\n                [property]: value[property]\r\n            }\r\n            updateTechnic(activeTechnic.id, val)\r\n            setEditMode(false)\r\n            reset()\r\n        } else {\r\n            updateTechnic(activeTechnic.id, obj)\r\n            setEditMode(false)\r\n            reset()\r\n        }\r\n    }\r\n    return (\r\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\r\n            {((property === 'date') || (property === 'year'))\r\n                ? <TextField\r\n                    id=\"date\"\r\n                    label={text}\r\n                    type=\"date\"\r\n                    {...register(property)}\r\n                    defaultValue=\"2017-05-24\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                : <div>\r\n                    {!array ?\r\n                        <TextField onKeyDown={handleKeyDown} defaultValue={activeTechnic[property]}\r\n                                   autoFocus={true} {...register(property)} />\r\n                        : <Controller\r\n                            name={property}\r\n                            control={control}\r\n                            render={({field}) => <Autocomplete\r\n                                filterOptions={(options, params) => {\r\n                                    const filtered = filter(options, params);\r\n                                    if (params.inputValue !== '') {\r\n                                        filtered.push({\r\n                                            inputValue: params.inputValue,\r\n                                            [property]: `Add \"${params.inputValue}\"`,\r\n                                        });\r\n                                    }\r\n                                    return filtered;\r\n                                }}\r\n                                selectOnFocus\r\n                                defaultValue={activeTechnic[property]}\r\n                                clearOnBlur\r\n                                onKeyDown={handleKeyDown}\r\n                                onChange={selectItem}\r\n                                handleHomeEndKeys\r\n                                id=\"free-solo-with-text-demo\"\r\n                                options={array}\r\n                                getOptionLabel={(option) => {\r\n                                    if (typeof option === 'string') {\r\n                                        return option;\r\n                                    }\r\n                                    if (option.inputValue) {\r\n                                        return option.inputValue;\r\n                                    }\r\n                                    return option[property];\r\n                                }}\r\n                                renderOption={(option) => option[property]}\r\n                                style={{width: 250}}\r\n                                freeSolo\r\n                                renderInput={(field) => (\r\n                                    <TextField autoFocus={true} {...field} label={text} variant=\"outlined\"/>\r\n                                )}\r\n                            />}\r\n                        />\r\n\r\n                    }\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <IconButton\r\n                    color=\"primary\" aria-label=\"upload picture\" type=\"submit\"\r\n                >\r\n                    <SaveIcon/>\r\n                </IconButton>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nexport default AutocompleteTextarea","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx",["384","385","386"],"// import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n        Button,\r\n    Chip,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText, Tooltip\r\n} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Icon from \"../Icon\";\r\nimport images from \"../global/images\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n// const useStyles = makeStyles((theme) => ({}))\r\n\r\nconst MiniCardTechnic = ({el, keys}) => {\r\n\r\n    // const classes = useStyles();\r\n    return (\r\n        <ListItem component={Link} key={el} to={`/technics/${el.id}`} button>\r\n\r\n            <ListItemIcon>\r\n                <Avatar variant={\"square\"} src={images[el.name]}></Avatar>\r\n                {/*<Icon type={el.type} />*/}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={`[${!el.invent ?\r\n                    <Button color=\"secondary\">Заполнить</Button> : el.invent}] - ${el.name}`}\r\n                secondary={`${el.year} ${el.user}`}\r\n            />\r\n            <ListItemSecondaryAction style={{display: \"flex\"}}>\r\n                {Object.keys(keys).map(key => {\r\n                    if (!el[keys[key].key]) {\r\n                        return <Tooltip key={key} title={keys[key].name}><span style={{\r\n                            display: \"block\",\r\n                            width: \"10px\",\r\n                            textAlign: \"center\",\r\n                            color: \"white\",\r\n                            marginRight: \"2px\",\r\n                            background: keys[key].bg\r\n                        }}>!</span></Tooltip>\r\n                    }\r\n                })}\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MiniCardTechnic","D:\\newprojects\\techs\\src\\components\\Portfolio\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Portfolio\\Portfolio.jsx",["387"],"import {withRouter} from \"react-router\";\r\nimport React from \"react\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\n\r\nconst Portfolio = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Paper>\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Portfolio);","D:\\newprojects\\techs\\src\\components\\Title\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Title\\Title.jsx",[],"D:\\newprojects\\techs\\src\\components\\StagesFueling\\index.js",[],"D:\\newprojects\\techs\\src\\components\\StagesFueling\\StagesFueling.jsx",["388","389","390","391"],{"ruleId":"392","replacedBy":"393"},{"ruleId":"394","replacedBy":"395"},{"ruleId":"396","severity":1,"message":"397","line":1,"column":22,"nodeType":"398","messageId":"399","endLine":1,"endColumn":29},{"ruleId":"396","severity":1,"message":"400","line":94,"column":9,"nodeType":"398","messageId":"399","endLine":94,"endColumn":17},{"ruleId":"401","severity":1,"message":"402","line":10,"column":8,"nodeType":"403","endLine":10,"endColumn":10,"suggestions":"404"},{"ruleId":"396","severity":1,"message":"405","line":2,"column":9,"nodeType":"398","messageId":"399","endLine":2,"endColumn":18},{"ruleId":"396","severity":1,"message":"406","line":2,"column":20,"nodeType":"398","messageId":"399","endLine":2,"endColumn":40},{"ruleId":"396","severity":1,"message":"407","line":5,"column":8,"nodeType":"398","messageId":"399","endLine":5,"endColumn":17},{"ruleId":"396","severity":1,"message":"408","line":3,"column":9,"nodeType":"398","messageId":"399","endLine":3,"endColumn":16},{"ruleId":"401","severity":1,"message":"409","line":25,"column":8,"nodeType":"403","endLine":25,"endColumn":20,"suggestions":"410"},{"ruleId":"396","severity":1,"message":"411","line":12,"column":12,"nodeType":"398","messageId":"399","endLine":12,"endColumn":20},{"ruleId":"401","severity":1,"message":"412","line":19,"column":8,"nodeType":"403","endLine":19,"endColumn":10,"suggestions":"413"},{"ruleId":"414","severity":1,"message":"415","line":34,"column":71,"nodeType":"416","messageId":"417","endLine":34,"endColumn":73},{"ruleId":"396","severity":1,"message":"418","line":1,"column":32,"nodeType":"398","messageId":"399","endLine":1,"endColumn":43},{"ruleId":"396","severity":1,"message":"419","line":1,"column":45,"nodeType":"398","messageId":"399","endLine":1,"endColumn":55},{"ruleId":"401","severity":1,"message":"420","line":130,"column":8,"nodeType":"403","endLine":130,"endColumn":21,"suggestions":"421"},{"ruleId":"401","severity":1,"message":"422","line":114,"column":8,"nodeType":"403","endLine":114,"endColumn":10,"suggestions":"423"},{"ruleId":"396","severity":1,"message":"424","line":115,"column":36,"nodeType":"398","messageId":"399","endLine":115,"endColumn":41},{"ruleId":"396","severity":1,"message":"425","line":115,"column":55,"nodeType":"398","messageId":"399","endLine":115,"endColumn":61},{"ruleId":"396","severity":1,"message":"426","line":119,"column":12,"nodeType":"398","messageId":"399","endLine":119,"endColumn":15},{"ruleId":"396","severity":1,"message":"427","line":119,"column":17,"nodeType":"398","messageId":"399","endLine":119,"endColumn":23},{"ruleId":"396","severity":1,"message":"428","line":129,"column":11,"nodeType":"398","messageId":"399","endLine":129,"endColumn":19},{"ruleId":"396","severity":1,"message":"429","line":3,"column":5,"nodeType":"398","messageId":"399","endLine":3,"endColumn":11},{"ruleId":"396","severity":1,"message":"430","line":3,"column":13,"nodeType":"398","messageId":"399","endLine":3,"endColumn":17},{"ruleId":"396","severity":1,"message":"431","line":3,"column":19,"nodeType":"398","messageId":"399","endLine":3,"endColumn":30},{"ruleId":"396","severity":1,"message":"432","line":3,"column":43,"nodeType":"398","messageId":"399","endLine":3,"endColumn":56},{"ruleId":"396","severity":1,"message":"433","line":3,"column":58,"nodeType":"398","messageId":"399","endLine":3,"endColumn":71},{"ruleId":"396","severity":1,"message":"434","line":3,"column":73,"nodeType":"398","messageId":"399","endLine":3,"endColumn":90},{"ruleId":"396","severity":1,"message":"435","line":8,"column":19,"nodeType":"398","messageId":"399","endLine":8,"endColumn":23},{"ruleId":"396","severity":1,"message":"436","line":8,"column":25,"nodeType":"398","messageId":"399","endLine":8,"endColumn":33},{"ruleId":"396","severity":1,"message":"437","line":8,"column":42,"nodeType":"398","messageId":"399","endLine":8,"endColumn":51},{"ruleId":"396","severity":1,"message":"438","line":10,"column":27,"nodeType":"398","messageId":"399","endLine":10,"endColumn":35},{"ruleId":"396","severity":1,"message":"439","line":16,"column":8,"nodeType":"398","messageId":"399","endLine":16,"endColumn":13},{"ruleId":"396","severity":1,"message":"440","line":20,"column":7,"nodeType":"398","messageId":"399","endLine":20,"endColumn":16},{"ruleId":"401","severity":1,"message":"441","line":44,"column":8,"nodeType":"403","endLine":44,"endColumn":10,"suggestions":"442"},{"ruleId":"396","severity":1,"message":"443","line":61,"column":13,"nodeType":"398","messageId":"399","endLine":61,"endColumn":16},{"ruleId":"414","severity":1,"message":"444","line":6,"column":52,"nodeType":"416","messageId":"417","endLine":6,"endColumn":54},{"ruleId":"401","severity":1,"message":"402","line":43,"column":8,"nodeType":"403","endLine":43,"endColumn":10,"suggestions":"445"},{"ruleId":"396","severity":1,"message":"431","line":1,"column":15,"nodeType":"398","messageId":"399","endLine":1,"endColumn":26},{"ruleId":"396","severity":1,"message":"446","line":1,"column":28,"nodeType":"398","messageId":"399","endLine":1,"endColumn":35},{"ruleId":"447","severity":1,"message":"448","line":157,"column":1,"nodeType":"449","messageId":"450","endLine":157,"endColumn":37},{"ruleId":"447","severity":1,"message":"448","line":158,"column":1,"nodeType":"449","messageId":"450","endLine":158,"endColumn":36},{"ruleId":"447","severity":1,"message":"448","line":162,"column":1,"nodeType":"449","messageId":"450","endLine":162,"endColumn":26},{"ruleId":"447","severity":1,"message":"448","line":163,"column":1,"nodeType":"449","messageId":"450","endLine":163,"endColumn":25},{"ruleId":"447","severity":1,"message":"448","line":164,"column":1,"nodeType":"449","messageId":"450","endLine":164,"endColumn":29},{"ruleId":"396","severity":1,"message":"451","line":2,"column":8,"nodeType":"398","messageId":"399","endLine":2,"endColumn":14},{"ruleId":"396","severity":1,"message":"452","line":5,"column":8,"nodeType":"398","messageId":"399","endLine":5,"endColumn":13},{"ruleId":"401","severity":1,"message":"453","line":29,"column":8,"nodeType":"403","endLine":29,"endColumn":20,"suggestions":"454"},{"ruleId":"396","severity":1,"message":"438","line":1,"column":27,"nodeType":"398","messageId":"399","endLine":1,"endColumn":35},{"ruleId":"401","severity":1,"message":"455","line":45,"column":8,"nodeType":"403","endLine":45,"endColumn":25,"suggestions":"456"},{"ruleId":"414","severity":1,"message":"457","line":71,"column":64,"nodeType":"416","messageId":"417","endLine":71,"endColumn":66},{"ruleId":"396","severity":1,"message":"458","line":3,"column":11,"nodeType":"398","messageId":"399","endLine":3,"endColumn":16},{"ruleId":"396","severity":1,"message":"459","line":5,"column":16,"nodeType":"398","messageId":"399","endLine":5,"endColumn":25},{"ruleId":"396","severity":1,"message":"438","line":5,"column":27,"nodeType":"398","messageId":"399","endLine":5,"endColumn":35},{"ruleId":"401","severity":1,"message":"460","line":46,"column":8,"nodeType":"403","endLine":46,"endColumn":10,"suggestions":"461"},{"ruleId":"396","severity":1,"message":"462","line":4,"column":5,"nodeType":"398","messageId":"399","endLine":4,"endColumn":9},{"ruleId":"396","severity":1,"message":"463","line":12,"column":8,"nodeType":"398","messageId":"399","endLine":12,"endColumn":12},{"ruleId":"414","severity":1,"message":"415","line":34,"column":44,"nodeType":"416","messageId":"417","endLine":34,"endColumn":46},{"ruleId":"396","severity":1,"message":"464","line":3,"column":9,"nodeType":"398","messageId":"399","endLine":3,"endColumn":13},{"ruleId":"401","severity":1,"message":"465","line":42,"column":8,"nodeType":"403","endLine":42,"endColumn":10,"suggestions":"466"},{"ruleId":"396","severity":1,"message":"467","line":97,"column":12,"nodeType":"398","messageId":"399","endLine":97,"endColumn":25},{"ruleId":"396","severity":1,"message":"468","line":111,"column":11,"nodeType":"398","messageId":"399","endLine":111,"endColumn":26},{"ruleId":"469","severity":1,"message":"470","line":160,"column":75,"nodeType":"471","endLine":161,"endColumn":185},"no-native-reassign",["472"],"no-negated-in-lhs",["473"],"no-unused-vars","'techAPI' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTypes'. Either include it or remove the dependency array. If 'getTypes' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["474"],"'sendOrder' is defined but never used.","'updateCurrentRefills' is defined but never used.","'UsersPage' is defined but never used.","'addUser' is defined but never used.","React Hook useEffect has missing dependencies: 'currentPage', 'getUsers', and 'rowsPerPage'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["475"],"'technics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTechnicsByRoom' and 'room'. Either include them or remove the dependency array. If 'getTechnicsByRoom' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["476"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useLocation' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'getActiveType'. Either include it or remove the dependency array. If 'getActiveType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["477"],"React Hook useEffect has missing dependencies: 'getComments', 'getRefills', 'getTechnicInfo', and 'params.id'. Either include them or remove the dependency array. If 'getTechnicInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["478"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'ccc' is assigned a value but never used.","'setCcc' is assigned a value but never used.","'addImage' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'TextField' is defined but never used.","'useState' is defined but never used.","'Modal' is defined but never used.","'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllRefills' and 'getPrintersAll'. Either include them or remove the dependency array. If 'getPrintersAll' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["479"],"'obj' is assigned a value but never used.","Array.prototype.find() expects a value to be returned at the end of arrow function.",["480"],"'Divider' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Avatar' is defined but never used.","'icons' is defined but never used.","React Hook useEffect has missing dependencies: 'generateUrl' and 'history'. Either include them or remove the dependency array.",["481"],"React Hook useEffect has missing dependencies: 'getStatistic' and 'val'. Either include them or remove the dependency array. If 'getStatistic' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["482"],"Array.prototype.some() expects a value to be returned at the end of arrow function.","'Paper' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'getRooms', 'getUsers', and 'property'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["483"],"'Chip' is defined but never used.","'Icon' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'getCurrentRefills'. Either include it or remove the dependency array. If 'getCurrentRefills' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["484"],"'activeElement' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"485","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},"Update the dependencies array to be: [getTypes]",{"range":"506","text":"507"},"Update the dependencies array to be: [currentPage, getUsers, rowsPerPage, sectionUrl]",{"range":"508","text":"509"},"Update the dependencies array to be: [getTechnicsByRoom, room]",{"range":"510","text":"511"},"Update the dependencies array to be: [getActiveType, params.type]",{"range":"512","text":"513"},"Update the dependencies array to be: [getComments, getRefills, getTechnicInfo, params.id]",{"range":"514","text":"515"},"Update the dependencies array to be: [getAllRefills, getPrintersAll]",{"range":"516","text":"517"},{"range":"518","text":"507"},"Update the dependencies array to be: [categories, generateUrl, history]",{"range":"519","text":"520"},"Update the dependencies array to be: [value, technics, getStatistic, val]",{"range":"521","text":"522"},"Update the dependencies array to be: [getRooms, getUsers, property]",{"range":"523","text":"524"},"Update the dependencies array to be: [getCurrentRefills]",{"range":"525","text":"526"},[299,301],"[getTypes]",[830,842],"[currentPage, getUsers, rowsPerPage, sectionUrl]",[970,972],"[getTechnicsByRoom, room]",[3882,3895],"[getActiveType, params.type]",[3113,3115],"[getComments, getRefills, getTechnicInfo, params.id]",[1510,1512],"[getAllRefills, getPrintersAll]",[1199,1201],[1138,1150],"[categories, generateUrl, history]",[1346,1363],"[value, technics, getStatistic, val]",[1519,1521],"[getRooms, getUsers, property]",[1171,1173],"[getCurrentRefills]"]
[{"D:\\newprojects\\techs\\src\\index.js":"1","D:\\newprojects\\techs\\src\\reportWebVitals.js":"2","D:\\newprojects\\techs\\src\\redux\\redux-store.js":"3","D:\\newprojects\\techs\\src\\components\\App\\index.js":"4","D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js":"5","D:\\newprojects\\techs\\src\\redux\\App-reducer.js":"6","D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js":"7","D:\\newprojects\\techs\\src\\redux\\Printers-reducer.js":"8","D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js":"9","D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js":"10","D:\\newprojects\\techs\\src\\components\\App\\App.jsx":"11","D:\\newprojects\\techs\\src\\api\\api.js":"12","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js":"13","D:\\newprojects\\techs\\src\\components\\Header\\index.js":"14","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js":"15","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx":"16","D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx":"17","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx":"18","D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js":"19","D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js":"20","D:\\newprojects\\techs\\src\\pages\\Profile\\index.js":"21","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js":"22","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js":"23","D:\\newprojects\\techs\\src\\pages\\RoomPage\\index.js":"24","D:\\newprojects\\techs\\src\\pages\\PrintersPage\\index.js":"25","D:\\newprojects\\techs\\src\\pages\\EventsPage\\index.js":"26","D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js":"27","D:\\newprojects\\techs\\src\\pages\\LastRefuelingPage\\index.js":"28","D:\\newprojects\\techs\\src\\pages\\LastRefuelingPage\\LastRefuelingPage.jsx":"29","D:\\newprojects\\techs\\src\\pages\\RoomPage\\RoomPage.jsx":"30","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx":"31","D:\\newprojects\\techs\\src\\pages\\PrintersPage\\PrintersPage.jsx":"32","D:\\newprojects\\techs\\src\\pages\\EventsPage\\EventsPage.jsx":"33","D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx":"34","D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx":"35","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx":"36","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx":"37","D:\\newprojects\\techs\\src\\components\\global\\images.js":"38","D:\\newprojects\\techs\\src\\components\\global\\groupElementsByDate.js":"39","D:\\newprojects\\techs\\src\\components\\LastRefueling\\index.js":"40","D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js":"41","D:\\newprojects\\techs\\src\\components\\Users\\index.js":"42","D:\\newprojects\\techs\\src\\components\\global\\formatDate.js":"43","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx":"44","D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx":"45","D:\\newprojects\\techs\\src\\components\\LastRefueling\\LastRefueling.jsx":"46","D:\\newprojects\\techs\\src\\components\\global\\countDays.js":"47","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx":"48","D:\\newprojects\\techs\\src\\components\\Modal\\index.js":"49","D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\index.js":"50","D:\\newprojects\\techs\\src\\components\\Icon\\index.js":"51","D:\\newprojects\\techs\\src\\components\\ActiveCategories\\index.js":"52","D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js":"53","D:\\newprojects\\techs\\src\\components\\Accordion\\index.js":"54","D:\\newprojects\\techs\\src\\components\\Portfolio\\index.js":"55","D:\\newprojects\\techs\\src\\components\\Profile\\index.js":"56","D:\\newprojects\\techs\\src\\components\\StagesFueling\\index.js":"57","D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx":"58","D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx":"59","D:\\newprojects\\techs\\src\\components\\global\\getProperty.js":"60","D:\\newprojects\\techs\\src\\components\\StagesFueling\\StagesFueling.jsx":"61","D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx":"62","D:\\newprojects\\techs\\src\\components\\Portfolio\\Portfolio.jsx":"63","D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx":"64","D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx":"65","D:\\newprojects\\techs\\src\\components\\Icon\\Icon.jsx":"66","D:\\newprojects\\techs\\src\\components\\ActiveCategories\\ActiveCategories.jsx":"67","D:\\newprojects\\techs\\src\\components\\global\\global.js":"68","D:\\newprojects\\techs\\src\\components\\Title\\index.js":"69","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx":"70","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\index.js":"71","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js":"72","D:\\newprojects\\techs\\src\\components\\Title\\Title.jsx":"73","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx":"74","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx":"75","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePageStyle.js":"76","D:\\newprojects\\techs\\src\\components\\ListTechnics\\index.js":"77","D:\\newprojects\\techs\\src\\components\\ListTechnics\\ListTechnics.jsx":"78"},{"size":585,"mtime":1619453189691,"results":"79","hashOfConfig":"80"},{"size":362,"mtime":499162500000,"results":"81","hashOfConfig":"80"},{"size":807,"mtime":1630157367536,"results":"82","hashOfConfig":"80"},{"size":364,"mtime":1628266721671,"results":"83","hashOfConfig":"80"},{"size":2403,"mtime":1629473228161,"results":"84","hashOfConfig":"80"},{"size":800,"mtime":1624975646264,"results":"85","hashOfConfig":"80"},{"size":2414,"mtime":1613510004007,"results":"86","hashOfConfig":"80"},{"size":2913,"mtime":1630157190130,"results":"87","hashOfConfig":"80"},{"size":12582,"mtime":1630158307108,"results":"88","hashOfConfig":"80"},{"size":2962,"mtime":1622061365007,"results":"89","hashOfConfig":"80"},{"size":404,"mtime":1630157511688,"results":"90","hashOfConfig":"80"},{"size":5064,"mtime":1630085291472,"results":"91","hashOfConfig":"80"},{"size":203,"mtime":1619365649818,"results":"92","hashOfConfig":"80"},{"size":348,"mtime":1620069278960,"results":"93","hashOfConfig":"80"},{"size":198,"mtime":1622062179840,"results":"94","hashOfConfig":"80"},{"size":362,"mtime":1619813994120,"results":"95","hashOfConfig":"80"},{"size":3066,"mtime":1629920209501,"results":"96","hashOfConfig":"80"},{"size":1540,"mtime":1630157241778,"results":"97","hashOfConfig":"80"},{"size":1741,"mtime":1619363631463,"results":"98","hashOfConfig":"80"},{"size":488,"mtime":1620058626451,"results":"99","hashOfConfig":"80"},{"size":201,"mtime":1621960851643,"results":"100","hashOfConfig":"80"},{"size":720,"mtime":1629819425015,"results":"101","hashOfConfig":"80"},{"size":415,"mtime":1625133389273,"results":"102","hashOfConfig":"80"},{"size":371,"mtime":1628955384434,"results":"103","hashOfConfig":"80"},{"size":641,"mtime":1629614988002,"results":"104","hashOfConfig":"80"},{"size":363,"mtime":1629621060104,"results":"105","hashOfConfig":"80"},{"size":509,"mtime":1630157341910,"results":"106","hashOfConfig":"80"},{"size":389,"mtime":1629614950333,"results":"107","hashOfConfig":"80"},{"size":326,"mtime":1629621814998,"results":"108","hashOfConfig":"80"},{"size":2758,"mtime":1629471538729,"results":"109","hashOfConfig":"80"},{"size":296,"mtime":1627408270784,"results":"110","hashOfConfig":"80"},{"size":3749,"mtime":1629621464958,"results":"111","hashOfConfig":"80"},{"size":5420,"mtime":1629621200580,"results":"112","hashOfConfig":"80"},{"size":653,"mtime":1629613534405,"results":"113","hashOfConfig":"80"},{"size":3842,"mtime":1629494828867,"results":"114","hashOfConfig":"80"},{"size":13556,"mtime":1629920039582,"results":"115","hashOfConfig":"80"},{"size":7598,"mtime":1630157629777,"results":"116","hashOfConfig":"80"},{"size":5659,"mtime":1629140912939,"results":"117","hashOfConfig":"80"},{"size":963,"mtime":1629627570682,"results":"118","hashOfConfig":"80"},{"size":250,"mtime":1630157477299,"results":"119","hashOfConfig":"80"},{"size":385,"mtime":1627054954769,"results":"120","hashOfConfig":"80"},{"size":665,"mtime":1621020966360,"results":"121","hashOfConfig":"80"},{"size":257,"mtime":1629469849696,"results":"122","hashOfConfig":"80"},{"size":2563,"mtime":1622837644323,"results":"123","hashOfConfig":"80"},{"size":3082,"mtime":1630157572124,"results":"124","hashOfConfig":"80"},{"size":122,"mtime":1630157469536,"results":"125","hashOfConfig":"80"},{"size":214,"mtime":1628412940933,"results":"126","hashOfConfig":"80"},{"size":205,"mtime":1618141801688,"results":"127","hashOfConfig":"80"},{"size":53,"mtime":1625225106329,"results":"128","hashOfConfig":"80"},{"size":414,"mtime":1628707279461,"results":"129","hashOfConfig":"80"},{"size":211,"mtime":1628266832820,"results":"130","hashOfConfig":"80"},{"size":260,"mtime":1628707279459,"results":"131","hashOfConfig":"80"},{"size":356,"mtime":1629820386202,"results":"132","hashOfConfig":"80"},{"size":86,"mtime":1627408270781,"results":"133","hashOfConfig":"80"},{"size":189,"mtime":1629470635046,"results":"134","hashOfConfig":"80"},{"size":219,"mtime":1629472917377,"results":"135","hashOfConfig":"80"},{"size":488,"mtime":1629547711376,"results":"136","hashOfConfig":"80"},{"size":455,"mtime":1628324718494,"results":"137","hashOfConfig":"80"},{"size":4489,"mtime":1630158119795,"results":"138","hashOfConfig":"80"},{"size":171,"mtime":1628611265499,"results":"139","hashOfConfig":"80"},{"size":6901,"mtime":1629581148885,"results":"140","hashOfConfig":"80"},{"size":1977,"mtime":1630158010846,"results":"141","hashOfConfig":"80"},{"size":1146,"mtime":1629473962555,"results":"142","hashOfConfig":"80"},{"size":4183,"mtime":1629140912924,"results":"143","hashOfConfig":"80"},{"size":2158,"mtime":1629829902872,"results":"144","hashOfConfig":"80"},{"size":700,"mtime":1629021941318,"results":"145","hashOfConfig":"80"},{"size":642,"mtime":1630157498591,"results":"146","hashOfConfig":"80"},{"size":1216,"mtime":1629142652754,"results":"147","hashOfConfig":"80"},{"size":51,"mtime":1629471755967,"results":"148","hashOfConfig":"80"},{"size":287,"mtime":1627054954773,"results":"149","hashOfConfig":"80"},{"size":478,"mtime":1629822219900,"results":"150","hashOfConfig":"80"},{"size":390,"mtime":1628265685551,"results":"151","hashOfConfig":"80"},{"size":184,"mtime":1629471899733,"results":"152","hashOfConfig":"80"},{"size":6032,"mtime":1630158031904,"results":"153","hashOfConfig":"80"},{"size":1614,"mtime":1630157530288,"results":"154","hashOfConfig":"80"},{"size":1316,"mtime":1629996124419,"results":"155","hashOfConfig":"80"},{"size":540,"mtime":1629635274401,"results":"156","hashOfConfig":"80"},{"size":4607,"mtime":1630158237837,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"1sp60h4",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"160"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"160"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"160"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"160"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"160"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"160"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"160"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\newprojects\\techs\\src\\index.js",[],["326","327"],"D:\\newprojects\\techs\\src\\reportWebVitals.js",[],"D:\\newprojects\\techs\\src\\redux\\redux-store.js",[],"D:\\newprojects\\techs\\src\\components\\App\\index.js",[],"D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\App-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Printers-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js",[],"D:\\newprojects\\techs\\src\\components\\App\\App.jsx",[],"D:\\newprojects\\techs\\src\\api\\api.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Header\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js",[],"D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\RoomPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\PrintersPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\EventsPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\LastRefuelingPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\LastRefuelingPage\\LastRefuelingPage.jsx",["328","329"],"import groupElementsByDate from \"../../components/global/groupElementsByDate\";\r\nimport React, {useEffect} from \"react\";\r\n\r\nconst LastRefuelingPage = ({allRefills, getAllRefills}) => {\r\n\r\n    useEffect(() => {\r\n        getAllRefills()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>dsfs</>\r\n    )\r\n}\r\nexport default LastRefuelingPage","D:\\newprojects\\techs\\src\\pages\\RoomPage\\RoomPage.jsx",["330","331","332"],"import {Avatar, Card, Container, Grid, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {useEffect, useState} from \"react\";\r\nimport images from \"../../components/global/images\";\r\n\r\nconst layout = [\"Системный блок\", \"Компьютер (комплект)\", \"Монитор\", \"Моноблок\", \"Ноутбук\",\"Телевизор\",  \"Проектор\",\"Принтер\", \"МФУ\",\"Сканер\",\"Ксерокс\",\r\n    \"Акустическая система\",\"Планшет\",\"Веб-камера\", \"Мышь\",  \"Клавиатура\", \"Фотоаппарат\", \"Документ-камера\", \"Перфобиндер\"]\r\n\r\nconst RoomPage = ({getTechnicsByRoom, technicsByRoom}) => {\r\n    let {room} = useParams();\r\n    const [technics, setTechnics] = useState(\"\")\r\n    useEffect(() => {\r\n        async function getTechnics() {\r\n            let response = await getTechnicsByRoom(room)\r\n            return response\r\n        }\r\n        getTechnics().then(response => setTechnics(response))\r\n    }, [])\r\n    return <Container>\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Typography>Перечень техники кабинета {room}</Typography>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} style={{display: \"flex\",justifyContent: \"space-around\", flexWrap: \"wrap\"}}>\r\n\r\n                {technicsByRoom.map(obj => {\r\n                    return <Card style={{maxWidth: \"300px\", minWidth: \"300px\", marginTop: \"15px\"}}>\r\n                        {obj.user}\r\n                        <List>\r\n                            {\r\n                                layout.map(el => {\r\n                                   return  obj.properties.map(technic => {\r\n                                        if (el === technic.type) {\r\n                                            return <ListItem component={Link} to={`/technics/${technic.id}`}>\r\n                                                <ListItemIcon>\r\n                                                    <Avatar variant={\"square\"} src={images[technic.name]}></Avatar>\r\n                                                </ListItemIcon>\r\n                                                <ListItemText primary={technic.name} secondary={technic.type}/>\r\n                                            </ListItem>\r\n                                        }\r\n                                    })\r\n                                })\r\n                            }\r\n                        </List>\r\n\r\n                    </Card>\r\n                })}\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n    </Container>\r\n}\r\n\r\nexport default RoomPage","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\PrintersPage\\PrintersPage.jsx",["333","334","335","336","337","338"],"import {\r\n    Button,\r\n    Container, Divider,\r\n\r\n} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\n\r\nimport groupElementsByDate from \"../../components/global/groupElementsByDate\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport StagesFueling from \"../../components/StagesFueling\";\r\nimport LastRefueling from \"../../components/LastRefueling\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst PrintersPage = ({\r\n                          allRefills,\r\n                          getPrintersAll,\r\n                          printers,\r\n                          addRefillForPrinter,\r\n                          updateCurrentRefills\r\n                      }) => {\r\n\r\n    useEffect(() => {\r\n        getPrintersAll()\r\n    }, [])\r\n\r\n    const [currentRefill, setCurrentRefill] = useState([])\r\n\r\n\r\n    const getCountRefill = (id) => {\r\n        let count = allRefills.filter(el => el.technicId === id).length\r\n        return count\r\n    }\r\n\r\n    const handlerRefills = (el) => {\r\n        let obj = {\r\n            \"technicId\": el.id,\r\n            \"name\": el.name,\r\n            \"user\": el.user,\r\n            \"createDate\": Date.now(),\r\n            \"countRefill\": getCountRefill(el.id) + 1\r\n        }\r\n        changeCategory(obj, 'new')\r\n    }\r\n    const changeCategory = (el, index) => {\r\n        let a = currentRefill.map((obj, i) => {\r\n            if (index === 3) {\r\n                index = 'finish'\r\n            }\r\n            if (index === 'new') {\r\n                if (i === 0) {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: [...obj.arr, el]\r\n                    }\r\n                } else {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: obj.arr\r\n                    }\r\n                }\r\n            } else if (index === 'finish') {\r\n                if (i === 3) {\r\n                    addRefillForPrinter(el.technicId, el)\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: obj.arr.filter(elem => el.technicId !== elem.technicId)\r\n                    }\r\n                } else {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: [...obj.arr]\r\n                    }\r\n                }\r\n            } else {\r\n                if (i === index) {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: obj.arr.filter(elem => el.technicId !== elem.technicId)\r\n                    }\r\n                } else if (i === (index + 1)) {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: [...obj.arr, el]\r\n                    }\r\n                } else {\r\n                    return {\r\n                        name: obj.name,\r\n                        arr: obj.arr\r\n                    }\r\n                }\r\n\r\n            }\r\n        })\r\n        setCurrentRefill(a)\r\n        updateCurrentRefills(a)\r\n    }\r\n    return (\r\n        <Container>\r\n            <StagesFueling\r\n                changeCategory={changeCategory}\r\n                currentRefill={currentRefill}\r\n                setCurrentRefill={setCurrentRefill}\r\n            />\r\n            {/*<Divider/>*/}\r\n            {/*<Button variant={\"contained\"} color={\"primary\"}>Добавить</Button>*/}\r\n            {/*<Button variant={\"contained\"} color={\"primary\"} component={Link} to={\"/printers/lastrefueling\"}>Список*/}\r\n            {/*    последних заправок</Button>*/}\r\n            {/*<Divider/>*/}\r\n            <LastRefueling printers={printers} handlerRefills={handlerRefills}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PrintersPage","D:\\newprojects\\techs\\src\\pages\\EventsPage\\EventsPage.jsx",["339","340"],"import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Container} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n}));\r\n\r\n\r\nconst EventsPage = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container>\r\n            <div>\r\n\r\n            </div>\r\n            <List className={classes.root}>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary=\"Клевжиц А.Ю. изменил инвентарный номер в принтере HP 1005\"\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    16.08.2021\r\n                                </Typography>\r\n                                {\" — Клевжиц А.Ю.\"}\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\"/>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary=\"Клевжиц А.Ю. изменил инвентарный номер в принтере HP 1005\"\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    16.08.2021\r\n                                </Typography>\r\n                                {\" — Клевжиц А.Ю.\"}\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\"/>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary=\"Клевжиц А.Ю. изменил инвентарный номер в принтере HP 1005\"\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    16.08.2021\r\n                                </Typography>\r\n                                {\" — Клевжиц А.Ю.\"}\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n                <Divider variant=\"inset\" component=\"li\"/>\r\n                <ListItem alignItems=\"flex-start\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\"/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                        primary=\"Клевжиц А.Ю. изменил инвентарный номер в принтере HP 1005\"\r\n                        secondary={\r\n                            <React.Fragment>\r\n                                <Typography\r\n                                    component=\"span\"\r\n                                    variant=\"body2\"\r\n                                    className={classes.inline}\r\n                                    color=\"textPrimary\"\r\n                                >\r\n                                    16.08.2021\r\n                                </Typography>\r\n                                {\" — Клевжиц А.Ю.\"}\r\n                            </React.Fragment>\r\n                        }\r\n                    />\r\n                </ListItem>\r\n            </List>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default EventsPage","D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx",["341","342"],"import {Container} from \"@material-ui/core\";\r\nimport ProfileInfo from \"../../components/Profile\";\r\nimport Portfolio from \"../../components/Portfolio\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {useState} from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    div: {\r\n        height: \"200px\",\r\n        background: \"red\",\r\n        width: \"200px\"\r\n    },\r\n    divheight: {\r\n        height: \"800px\"\r\n    }\r\n}))\r\n\r\n\r\nconst ProfilePage = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container>\r\n            <ProfileInfo/>\r\n            <Portfolio/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n\r\n","D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx",["343","344","345","346"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Divider,\r\n    Grid, IconButton,\r\n    List, ListItem, ListItemAvatar, ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {deepOrange} from '@material-ui/core/colors';\r\nimport ControlledAccordions from \"../../components/Accordion\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemForm from \"../../components/ListItemForm\";\r\nimport Icon from \"../../components/Icon\";\r\nimport countDays from \"../../components/global/countDays\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {format} from \"date-fns\";\r\nimport images from \"../../components/global/images\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport LineWeightIcon from '@material-ui/icons/LineWeight';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatarWrapper: {\r\n        padding: \"20px\",\r\n        textAlign: \"center\"\r\n    },\r\n    devider: {\r\n        margin: \"20px\"\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        margin: \"0 auto\",\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n        cursor: \"pointer\"\r\n    },\r\n    technicInfoWrapper: {\r\n        padding: \"20px\"\r\n    },\r\n    listItemText: {\r\n        fontSize: '1.1em',\r\n        fontWeight: \"bold\"\r\n    },\r\n    paper: {\r\n        padding: \"10px\",\r\n        width: \"100%\"\r\n    },\r\n    repairs: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    repair: {\r\n        minWidth: \"200px\",\r\n        width: \"23%\",\r\n        textAlign: \"center\"\r\n    },\r\n    margin: {\r\n        margin: \"20px 0\"\r\n    }\r\n}))\r\nlet repair = [\r\n    {\r\n        id: '1',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '2',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '3',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '4',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n\r\n]\r\n\r\nconst TechnicPage = ({\r\n                         activeTechnic,\r\n                         getTechnicInfo,\r\n                         users,\r\n                         addComment,\r\n                         activeTechnicComments,\r\n                         getComments,\r\n                         getRefills,\r\n                         deleteTechnic,\r\n                         refills\r\n                     }) => {\r\n    useEffect(() => {\r\n        getTechnicInfo(params.id)\r\n        getComments(params.id)\r\n        getRefills(params.id)\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    let history = useHistory();\r\n\r\n\r\n    const [aaa, setAaa] = useState(false)\r\n    const [bbb, setBbb] = useState(false)\r\n    const [ccc, setCcc] = useState(false)\r\n\r\n    const {register, handleSubmit, watch, formState: {errors}} = useForm();\r\n    const onSubmit = data => {\r\n        addComment(activeTechnic.id, data.msg)\r\n    };\r\n\r\n    const formatDate = (value) => {\r\n        return format(new Date(value), 'dd.MM.yyyy')\r\n    }\r\n    const deleteTech = (id) => {\r\n        deleteTechnic(id)\r\n        history.goBack()\r\n    } // Удалить объект по id / Переход на предыдущую страницу\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Paper>\r\n                        <div className={classes.avatarWrapper}>\r\n                            <Avatar\r\n                                variant={\"square\"}\r\n                                src={images[activeTechnic.name]}\r\n                                className={classes.avatar}\r\n                            >\r\n                            </Avatar>\r\n                            <Divider className={classes.devider}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"type\"} text={\"Тип\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"name\"} text={\"Наименование\"}/>\r\n\r\n                        </div>\r\n                    </Paper>\r\n                    <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                        <IconButton aria-label=\"delete\" color={aaa ? \"primary\" : \"secondary\"}\r\n                                    onClick={() => setAaa(!aaa)}>\r\n                            <SettingsIcon/>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"delete\" color={bbb ? \"primary\" : \"secondary\"}\r\n                                    onClick={() => setBbb(!bbb)}>\r\n                            <CommentIcon/>\r\n                        </IconButton>\r\n                        {\r\n                            ((activeTechnic.type === 'Принтер') || (activeTechnic.type === 'МФУ') || (activeTechnic.type === 'Ксерокс')) &&\r\n                            <IconButton aria-label=\"delete\" color={bbb ? \"primary\" : \"secondary\"}\r\n                                        onClick={() => setCcc(!ccc)}>\r\n                                <LineWeightIcon/>\r\n                            </IconButton>\r\n                        }\r\n                        <IconButton aria-label=\"delete\" onClick={() => deleteTech(params.id)}>\r\n                            <DeleteIcon/>\r\n                        </IconButton>\r\n                    </div> //Кнопки показать/скрыть\r\n\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Место установки\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <List>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"room\"} text={\"Кабинет\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"build\"} text={\"Корпус\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"user\"} text={\"ФИО сотрудника\"}\r\n                                              array={users}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"date\"} text={\"Дата получения\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"faculty\"} text={\"Факультет\"}/>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Бухгалтерия\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"invent\"} text={\"Инвентарный номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"zavod\"} text={\"Заводской номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"matfyo\"}\r\n                                          text={\"Материально-ответственное лицо\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"year\"} text={\"Год выпуска\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"print\"} text={\"Наклейка\"}/>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {aaa && <Grid className={classes.margin} container spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                        Комментарии\r\n                    </Typography>\r\n                    <Typography>Описание: {activeTechnic.desc}</Typography>\r\n                    <Typography>Проблема: {activeTechnic.problem}</Typography>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input defaultValue=\"test\" {...register(\"msg\")} />\r\n                        <input type=\"submit\"/>\r\n                    </form>\r\n                    <List>\r\n                        {activeTechnicComments.map((el, i) => {\r\n                            return <ListItem key={i}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={el.body} secondary={formatDate(el.date)}/>\r\n                            </ListItem>\r\n                        })}\r\n\r\n                    </List>\r\n\r\n\r\n                </Paper>\r\n\r\n            </Grid>}  {/*//Комментарии*/}\r\n\r\n            {bbb && <Grid container className={classes.margin} spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Заявки на ремонт\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<Icon type={\"send\"}></Icon>}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className={classes.repairs}>\r\n                        {repair.map(el => {\r\n                            return <Card className={classes.repair}>\r\n                                <CardContent>\r\n                                    <Typography>Дата заявки: {el.application}</Typography>\r\n                                    <Typography>Проблема: {el.message}</Typography>\r\n                                    <Typography>Дата передачи: {el.dispatch}</Typography>\r\n                                    <Typography>Дата получения: {el.getting}</Typography>\r\n                                    <Typography>Всего в ремонте: {countDays(el.dispatch, el.getting)}</Typography>\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        })}\r\n                    </div>\r\n                </Paper>\r\n\r\n            </Grid>} {/*//Заявки на ремонт*/}\r\n            {ccc && <Grid container className={classes.margin} spacing={2}>\r\n                {\r\n                    ((activeTechnic.type === 'Принтер') || (activeTechnic.type === 'МФУ') || (activeTechnic.type === 'Ксерокс')) &&\r\n                    <Paper className={classes.paper}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Заправки\r\n                        </Typography>\r\n                        <Button component={Link} to={\"/printers\"} variant={\"contained\"}\r\n                                color={\"primary\"}>Заполнить</Button>\r\n                        <Typography variant={\"body2\"}>Максимальное количество\r\n                            заправок за год: 2</Typography>\r\n                        <Divider/>\r\n                        {/*<Steppers/>*/}\r\n\r\n                        {refills ? <>\r\n                            <div>\r\n\r\n                                <ControlledAccordions array={refills}/>\r\n                            </div>\r\n                        </> : <Button component={Link} to={\"/printers\"}>Заполнить</Button>}\r\n                    </Paper>\r\n                }\r\n            </Grid>} {/*//Последние заправки*/}\r\n\r\n            <Grid container className={classes.margin} spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Техника в этом кабинете\r\n                        </Typography>\r\n                    </div>\r\n                    <div>\r\n                        <Button component={Link} to={`/room/${activeTechnic.room}`}>Техника кабинета</Button>\r\n\r\n                    </div>\r\n\r\n                </Paper>\r\n\r\n            </Grid> {/*//Техника в этом кабинете*/}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TechnicPage;","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx",["347","348","349","350"],"D:\\newprojects\\techs\\src\\components\\global\\images.js",[],"D:\\newprojects\\techs\\src\\components\\global\\groupElementsByDate.js",["351"],"import formatDate from \"./formatDate\";\r\n\r\nconst groupElementsByDate = (array, property) => {\r\n    if (array) {\r\n        return array.reduce((previousValue, currentValue) => {\r\n            let b = formatDate(currentValue[property])\r\n            let objType = previousValue.find((element) => {\r\n                    let a = element[\"date\"]\r\n                    if (a === b) {\r\n                        return element\r\n                    }\r\n                }\r\n            );\r\n            if (!objType) {\r\n                const currentValueDDMMYYYY = formatDate(currentValue[property])\r\n                previousValue.push({\r\n                    \"date\": currentValueDDMMYYYY,\r\n                    properties: [currentValue]\r\n                });\r\n            } else {\r\n                objType.properties.push(currentValue);\r\n            }\r\n            return previousValue;\r\n        }, [])\r\n    } else {\r\n        return []\r\n    }\r\n\r\n}\r\nexport default groupElementsByDate","D:\\newprojects\\techs\\src\\components\\LastRefueling\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Users\\index.js",[],"D:\\newprojects\\techs\\src\\components\\global\\formatDate.js",[],"D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx",["352"],"D:\\newprojects\\techs\\src\\components\\LastRefueling\\LastRefueling.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\countDays.js",[],"D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx",[],"D:\\newprojects\\techs\\src\\components\\Modal\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Icon\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ActiveCategories\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Accordion\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Portfolio\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\components\\StagesFueling\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx",[],"D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx",["353"],"D:\\newprojects\\techs\\src\\components\\global\\getProperty.js",[],"D:\\newprojects\\techs\\src\\components\\StagesFueling\\StagesFueling.jsx",["354","355","356","357"],"import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardContent, DialogActions, DialogContent, DialogContentText,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Menu, MenuItem\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport Modal from \"../Modal\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    copyText: {\r\n        marginLeft: \"10px\",\r\n        border: \"1px solid #a0a0a0\",\r\n        borderRadius: \"7px\",\r\n        cursor: \"pointer\",\r\n        padding: \"6px\",\r\n        '&:hover': {\r\n            backgroundColor: '#e6e6e6'\r\n        }\r\n    },\r\n}))\r\n\r\nconst StagesFueling = ({getCurrentRefills, addRefillForPrinter, setCurrentRefill, currentRefill, changeCategory}) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        async function fetchCurrentRefills() {\r\n            let response = await getCurrentRefills()\r\n            setCurrentRefill(response)\r\n            return response\r\n        }\r\n\r\n        fetchCurrentRefills()\r\n    }, [])\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [activeElement, setActiveElement] = useState('')\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n\r\n    const handleClick = (event, el) => {\r\n        setActiveElement(el)\r\n        setOpen(true)\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose1 = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {currentRefill && <div style={{display: \"flex\", justifyContent: \"space-evenly\", margin: \"20px 0\"}}>\r\n                {currentRefill.map((obj, i) => {\r\n                    return <Card style={{width: \"23%\"}}>\r\n                        <CardContent>\r\n                            <Typography variant={\"h6\"}>{obj.name}</Typography>\r\n                            <List dense>\r\n                                {obj.arr.map(el => {\r\n                                    return <ListItem onDoubleClick={() => changeCategory(el, i)} button>\r\n                                        <ListItemText primary={`[${el.countRefill || 1}]  ${el.name}`}\r\n                                                      secondary={`${el.user}`}></ListItemText>\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton color=\"secondary\" aria-controls=\"simple-menu\"\r\n                                                        aria-haspopup=\"true\"\r\n                                                        onClick={(e) => handleClick(e, el)}>\r\n                                                <ArrowDropDownIcon/>\r\n                                            </IconButton>\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                })}\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                })\r\n                }\r\n\r\n            </div>}\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleClose}>Далее</MenuItem>\r\n                <MenuItem onClick={handleClose}>Информация</MenuItem>\r\n                <MenuItem onClick={handleClose}>Удалить</MenuItem>\r\n            </Menu>\r\n            <Modal open={open} handleClose={handleClose} title={\"Добавить тип\"}>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Ссылка на заполнение (старых/пустых) картриджей - <a target={\"_blank\"}\r\n                                                                             href=\"https://docs.google.com/forms/d/e/1FAIpQLSfwyQfBoHyUEOBPXQfIfcq4CTGpxdW3SxuR842KNBWhLMqo_w/viewform\">здесь</a>\r\n                    </DialogContentText>\r\n                    <Typography>ФИО ответственного лица\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Клевжиц Александр Юрьевич')\r\n                        }}>Клевжиц Александр Юрьевич</Typography>\r\n                    </Typography>\r\n                    <Typography>Адрес электронной почты\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('ipkip.bspu@gmail.com@bspu.by')\r\n                        }}>ipkip.bspu@gmail.com</Typography>\r\n                    </Typography>\r\n                    <Typography>Номер кабинета\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Запрос')\r\n                        }}>Запрос</Typography>\r\n                    </Typography>\r\n                    <Typography>Год выпуска\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Запрос')\r\n                        }}>Запрос</Typography>\r\n                    </Typography>\r\n                    <Typography>Инвентарный номер оргтехники\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Запрос')\r\n                        }}>Запрос</Typography>\r\n                    </Typography>\r\n                    <Typography>Модель оргтехники и номер картриджа\r\n                        <Typography className={classes.copyText} component={\"span\"} onClick={() => {\r\n                            navigator.clipboard.writeText('Запрос')\r\n                        }}>Запрос</Typography>\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose1} color=\"primary\">\r\n                        Отмена\r\n                    </Button>\r\n                    <Button onClick={handleClose1} color=\"primary\">\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StagesFueling","D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx",[],"D:\\newprojects\\techs\\src\\components\\Portfolio\\Portfolio.jsx",["358"],"import {withRouter} from \"react-router\";\r\nimport React from \"react\";\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\n\r\nconst Portfolio = () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Paper>\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n                ПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолиоПортфолио\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Portfolio);","D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx",[],"D:\\newprojects\\techs\\src\\components\\Icon\\Icon.jsx",[],"D:\\newprojects\\techs\\src\\components\\ActiveCategories\\ActiveCategories.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\global.js",[],"D:\\newprojects\\techs\\src\\components\\Title\\index.js",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx",[],["359","360"],"D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\index.js",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Title\\Title.jsx",[],"D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx",["361"],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx",["362","363"],"import {\r\n        Button,\r\n    Chip,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText, Tooltip\r\n} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport images from \"../global/images\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n\r\nconst MiniCardTechnic = ({el, keys}) => {\r\n\r\n    return (\r\n        <ListItem component={Link} key={el} to={`/technics/${el.id}`} button>\r\n\r\n            <ListItemIcon>\r\n                <Avatar variant={\"square\"} src={images[el.name]}></Avatar>\r\n                {/*<Icon type={el.type} />*/}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={`[${!el.invent ?\r\n                    <Button color=\"secondary\">Заполнить</Button> : el.invent}] - ${el.name}`}\r\n                secondary={`${el.year} ${el.user}`}\r\n            />\r\n            <ListItemSecondaryAction style={{display: \"flex\"}}>\r\n                {Object.keys(keys).map(key => {\r\n                    if (!el[keys[key].key]) {\r\n                        return <Tooltip key={key} title={keys[key].name}><span style={{\r\n                            display: \"block\",\r\n                            width: \"10px\",\r\n                            textAlign: \"center\",\r\n                            color: \"white\",\r\n                            marginRight: \"2px\",\r\n                            background: keys[key].bg\r\n                        }}>!</span></Tooltip>\r\n                    }\r\n                })}\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MiniCardTechnic","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePageStyle.js",[],"D:\\newprojects\\techs\\src\\components\\ListTechnics\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListTechnics\\ListTechnics.jsx",["364","365","366"],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","severity":1,"message":"372","line":1,"column":8,"nodeType":"373","messageId":"374","endLine":1,"endColumn":27},{"ruleId":"375","severity":1,"message":"376","line":8,"column":8,"nodeType":"377","endLine":8,"endColumn":10,"suggestions":"378"},{"ruleId":"371","severity":1,"message":"379","line":12,"column":12,"nodeType":"373","messageId":"374","endLine":12,"endColumn":20},{"ruleId":"375","severity":1,"message":"380","line":19,"column":8,"nodeType":"377","endLine":19,"endColumn":10,"suggestions":"381"},{"ruleId":"382","severity":1,"message":"383","line":34,"column":71,"nodeType":"384","messageId":"385","endLine":34,"endColumn":73},{"ruleId":"371","severity":1,"message":"386","line":2,"column":5,"nodeType":"373","messageId":"374","endLine":2,"endColumn":11},{"ruleId":"371","severity":1,"message":"387","line":3,"column":16,"nodeType":"373","messageId":"374","endLine":3,"endColumn":23},{"ruleId":"371","severity":1,"message":"372","line":8,"column":8,"nodeType":"373","messageId":"374","endLine":8,"endColumn":27},{"ruleId":"371","severity":1,"message":"388","line":9,"column":9,"nodeType":"373","messageId":"374","endLine":9,"endColumn":19},{"ruleId":"371","severity":1,"message":"389","line":12,"column":9,"nodeType":"373","messageId":"374","endLine":12,"endColumn":13},{"ruleId":"375","severity":1,"message":"390","line":24,"column":8,"nodeType":"377","endLine":24,"endColumn":10,"suggestions":"391"},{"ruleId":"371","severity":1,"message":"392","line":1,"column":16,"nodeType":"373","messageId":"374","endLine":1,"endColumn":25},{"ruleId":"371","severity":1,"message":"393","line":1,"column":27,"nodeType":"373","messageId":"374","endLine":1,"endColumn":35},{"ruleId":"371","severity":1,"message":"393","line":5,"column":9,"nodeType":"373","messageId":"374","endLine":5,"endColumn":17},{"ruleId":"371","severity":1,"message":"394","line":20,"column":11,"nodeType":"373","messageId":"374","endLine":20,"endColumn":18},{"ruleId":"375","severity":1,"message":"395","line":117,"column":8,"nodeType":"377","endLine":117,"endColumn":10,"suggestions":"396"},{"ruleId":"371","severity":1,"message":"397","line":128,"column":36,"nodeType":"373","messageId":"374","endLine":128,"endColumn":41},{"ruleId":"371","severity":1,"message":"398","line":128,"column":55,"nodeType":"373","messageId":"374","endLine":128,"endColumn":61},{"ruleId":"399","severity":1,"message":"400","line":178,"column":27,"nodeType":"401","endLine":180,"endColumn":17},{"ruleId":"371","severity":1,"message":"402","line":1,"column":21,"nodeType":"373","messageId":"374","endLine":1,"endColumn":30},{"ruleId":"371","severity":1,"message":"403","line":6,"column":11,"nodeType":"373","messageId":"374","endLine":6,"endColumn":15},{"ruleId":"375","severity":1,"message":"404","line":104,"column":8,"nodeType":"377","endLine":104,"endColumn":16,"suggestions":"405"},{"ruleId":"375","severity":1,"message":"406","line":108,"column":8,"nodeType":"377","endLine":108,"endColumn":21,"suggestions":"407"},{"ruleId":"382","severity":1,"message":"408","line":7,"column":56,"nodeType":"384","messageId":"385","endLine":7,"endColumn":58},{"ruleId":"375","severity":1,"message":"409","line":40,"column":8,"nodeType":"377","endLine":40,"endColumn":10,"suggestions":"410"},{"ruleId":"375","severity":1,"message":"411","line":45,"column":8,"nodeType":"377","endLine":45,"endColumn":25,"suggestions":"412"},{"ruleId":"375","severity":1,"message":"413","line":42,"column":8,"nodeType":"377","endLine":42,"endColumn":10,"suggestions":"414"},{"ruleId":"371","severity":1,"message":"415","line":45,"column":12,"nodeType":"373","messageId":"374","endLine":45,"endColumn":25},{"ruleId":"371","severity":1,"message":"416","line":58,"column":11,"nodeType":"373","messageId":"374","endLine":58,"endColumn":26},{"ruleId":"417","severity":1,"message":"418","line":107,"column":75,"nodeType":"419","endLine":108,"endColumn":185},{"ruleId":"371","severity":1,"message":"420","line":3,"column":9,"nodeType":"373","messageId":"374","endLine":3,"endColumn":13},{"ruleId":"367","replacedBy":"421"},{"ruleId":"369","replacedBy":"422"},{"ruleId":"375","severity":1,"message":"423","line":34,"column":8,"nodeType":"377","endLine":34,"endColumn":10,"suggestions":"424"},{"ruleId":"371","severity":1,"message":"425","line":3,"column":5,"nodeType":"373","messageId":"374","endLine":3,"endColumn":9},{"ruleId":"382","severity":1,"message":"383","line":30,"column":44,"nodeType":"384","messageId":"385","endLine":30,"endColumn":46},{"ruleId":"375","severity":1,"message":"426","line":28,"column":8,"nodeType":"377","endLine":28,"endColumn":10,"suggestions":"427"},{"ruleId":"375","severity":1,"message":"428","line":59,"column":8,"nodeType":"377","endLine":59,"endColumn":14,"suggestions":"429"},{"ruleId":"382","severity":1,"message":"383","line":133,"column":39,"nodeType":"384","messageId":"385","endLine":133,"endColumn":41},"no-native-reassign",["430"],"no-negated-in-lhs",["431"],"no-unused-vars","'groupElementsByDate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllRefills'. Either include it or remove the dependency array. If 'getAllRefills' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["432"],"'technics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getTechnicsByRoom' and 'room'. Either include them or remove the dependency array. If 'getTechnicsByRoom' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["433"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used.","'Divider' is defined but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getPrintersAll'. Either include it or remove the dependency array. If 'getPrintersAll' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["434"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getComments', 'getRefills', 'getTechnicInfo', and 'params.id'. Either include them or remove the dependency array. If 'getTechnicInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["435"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'useParams' is defined but never used.","'List' is defined but never used.","React Hook useEffect has a missing dependency: 'searchData'. Either include it or remove the dependency array.",["436"],"React Hook useEffect has a missing dependency: 'getTechnics'. Either include it or remove the dependency array. If 'getTechnics' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["437"],"Array.prototype.find() expects a value to be returned at the end of arrow function.","React Hook useEffect has a missing dependency: 'getTypes'. Either include it or remove the dependency array. If 'getTypes' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["438"],"React Hook useEffect has missing dependencies: 'getStatistic' and 'val'. Either include them or remove the dependency array. If 'getStatistic' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["439"],"React Hook useEffect has missing dependencies: 'getCurrentRefills' and 'setCurrentRefill'. Either include them or remove the dependency array. If 'getCurrentRefills' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["440"],"'activeElement' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Grid' is defined but never used.",["430"],["431"],"React Hook useEffect has missing dependencies: 'getDataAutocomplete' and 'property'. Either include them or remove the dependency array. If 'getDataAutocomplete' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["441"],"'Chip' is defined but never used.","React Hook useEffect has a missing dependency: 'getSchemaTechnics'. Either include it or remove the dependency array. If 'getSchemaTechnics' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["442"],"React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.",["443"],"no-global-assign","no-unsafe-negation",{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},"Update the dependencies array to be: [getAllRefills]",{"range":"468","text":"469"},"Update the dependencies array to be: [getTechnicsByRoom, room]",{"range":"470","text":"471"},"Update the dependencies array to be: [getPrintersAll]",{"range":"472","text":"473"},"Update the dependencies array to be: [getComments, getRefills, getTechnicInfo, params.id]",{"range":"474","text":"475"},"Update the dependencies array to be: [search, searchData]",{"range":"476","text":"477"},"Update the dependencies array to be: [activeTypes, getTechnics]",{"range":"478","text":"479"},"Update the dependencies array to be: [getTypes]",{"range":"480","text":"481"},"Update the dependencies array to be: [value, technics, getStatistic, val]",{"range":"482","text":"483"},"Update the dependencies array to be: [getCurrentRefills, setCurrentRefill]",{"range":"484","text":"485"},"Update the dependencies array to be: [getDataAutocomplete, property]",{"range":"486","text":"487"},"Update the dependencies array to be: [getSchemaTechnics]",{"range":"488","text":"489"},"Update the dependencies array to be: [categories, tech]",{"range":"490","text":"491"},[242,244],"[getAllRefills]",[970,972],"[getTechnicsByRoom, room]",[754,756],"[getPrintersAll]",[3312,3314],"[getComments, getRefills, getTechnicInfo, params.id]",[3415,3423],"[search, searchData]",[3523,3536],"[activeTypes, getTechnics]",[1146,1148],"[getTypes]",[1336,1353],"[value, technics, getStatistic, val]",[1198,1200],"[getCurrentRefills, setCurrentRefill]",[1235,1237],"[getDataAutocomplete, property]",[789,791],"[getSchemaTechnics]",[1912,1918],"[categories, tech]"]
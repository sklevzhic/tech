[{"D:\\newprojects\\techs\\src\\index.js":"1","D:\\newprojects\\techs\\src\\reportWebVitals.js":"2","D:\\newprojects\\techs\\src\\redux\\redux-store.js":"3","D:\\newprojects\\techs\\src\\components\\App\\index.js":"4","D:\\newprojects\\techs\\src\\redux\\App-reducer.js":"5","D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js":"6","D:\\newprojects\\techs\\src\\redux\\Users-reducer.js":"7","D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js":"8","D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js":"9","D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js":"10","D:\\newprojects\\techs\\src\\api\\api.js":"11","D:\\newprojects\\techs\\src\\components\\App\\App.jsx":"12","D:\\newprojects\\techs\\src\\components\\Preloader\\index.js":"13","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js":"14","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js":"15","D:\\newprojects\\techs\\src\\components\\Header\\index.js":"16","D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx":"17","D:\\newprojects\\techs\\src\\components\\Preloader\\Preloader.jsx":"18","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx":"19","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx":"20","D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js":"21","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js":"22","D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js":"23","D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js":"24","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js":"25","D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js":"26","D:\\newprojects\\techs\\src\\pages\\Profile\\index.js":"27","D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx":"28","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx":"29","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx":"30","D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx":"31","D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx":"32","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx":"33","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx":"34","D:\\newprojects\\techs\\src\\components\\Posts\\index.js":"35","D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\index.js":"36","D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js":"37","D:\\newprojects\\techs\\src\\components\\Users\\index.js":"38","D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx":"39","D:\\newprojects\\techs\\src\\components\\Posts\\Posts.jsx":"40","D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx":"41","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx":"42","D:\\newprojects\\techs\\src\\components\\global\\countDays.js":"43","D:\\newprojects\\techs\\src\\components\\global\\getProperty.js":"44","D:\\newprojects\\techs\\src\\components\\Post\\Post.jsx":"45","D:\\newprojects\\techs\\src\\components\\global\\deepEqual.js":"46","D:\\newprojects\\techs\\src\\components\\Icon\\index.js":"47","D:\\newprojects\\techs\\src\\components\\Modal\\index.js":"48","D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js":"49","D:\\newprojects\\techs\\src\\components\\Accordion\\index.js":"50","D:\\newprojects\\techs\\src\\components\\ActiveCategories\\index.js":"51","D:\\newprojects\\techs\\src\\components\\ListTechnics\\index.js":"52","D:\\newprojects\\techs\\src\\components\\Profile\\index.js":"53","D:\\newprojects\\techs\\src\\components\\Icon\\Icon.jsx":"54","D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx":"55","D:\\newprojects\\techs\\src\\components\\ActiveCategories\\ActiveCategories.jsx":"56","D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx":"57","D:\\newprojects\\techs\\src\\components\\ListTechnics\\ListTechnics.jsx":"58","D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx":"59","D:\\newprojects\\techs\\src\\components\\global\\global.js":"60","D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx":"61","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx":"62","D:\\newprojects\\techs\\src\\components\\Profile\\ProfileEdit.jsx":"63","D:\\newprojects\\techs\\src\\components\\Profile\\ProfileView.jsx":"64","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js":"65","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\index.js":"66","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx":"67","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx":"68","D:\\newprojects\\techs\\src\\components\\SocialLink\\index.js":"69","D:\\newprojects\\techs\\src\\components\\FollowList\\index.js":"70","D:\\newprojects\\techs\\src\\components\\Status\\index.js":"71","D:\\newprojects\\techs\\src\\components\\FollowList\\FolowList.jsx":"72","D:\\newprojects\\techs\\src\\components\\SocialLink\\SocialLink.jsx":"73","D:\\newprojects\\techs\\src\\components\\Status\\Status.jsx":"74"},{"size":585,"mtime":1619453189691,"results":"75","hashOfConfig":"76"},{"size":362,"mtime":499162500000,"results":"77","hashOfConfig":"76"},{"size":799,"mtime":1623688791559,"results":"78","hashOfConfig":"76"},{"size":364,"mtime":1628266721671,"results":"79","hashOfConfig":"76"},{"size":800,"mtime":1624975646264,"results":"80","hashOfConfig":"76"},{"size":2414,"mtime":1613510004007,"results":"81","hashOfConfig":"76"},{"size":4067,"mtime":1622231323629,"results":"82","hashOfConfig":"76"},{"size":2962,"mtime":1622061365007,"results":"83","hashOfConfig":"76"},{"size":7712,"mtime":1622835922035,"results":"84","hashOfConfig":"76"},{"size":11268,"mtime":1628707279467,"results":"85","hashOfConfig":"76"},{"size":4225,"mtime":1628433528147,"results":"86","hashOfConfig":"76"},{"size":821,"mtime":1628266433161,"results":"87","hashOfConfig":"76"},{"size":63,"mtime":1619384275192,"results":"88","hashOfConfig":"76"},{"size":198,"mtime":1622062179840,"results":"89","hashOfConfig":"76"},{"size":203,"mtime":1619365649818,"results":"90","hashOfConfig":"76"},{"size":348,"mtime":1620069278960,"results":"91","hashOfConfig":"76"},{"size":2821,"mtime":1624985699994,"results":"92","hashOfConfig":"76"},{"size":154,"mtime":1619384365533,"results":"93","hashOfConfig":"76"},{"size":362,"mtime":1619813994120,"results":"94","hashOfConfig":"76"},{"size":1413,"mtime":1625045909040,"results":"95","hashOfConfig":"76"},{"size":1741,"mtime":1619363631463,"results":"96","hashOfConfig":"76"},{"size":415,"mtime":1625133389273,"results":"97","hashOfConfig":"76"},{"size":456,"mtime":1621279691901,"results":"98","hashOfConfig":"76"},{"size":488,"mtime":1620058626451,"results":"99","hashOfConfig":"76"},{"size":568,"mtime":1628431889894,"results":"100","hashOfConfig":"76"},{"size":2740,"mtime":1628347838454,"results":"101","hashOfConfig":"76"},{"size":201,"mtime":1621960851643,"results":"102","hashOfConfig":"76"},{"size":335,"mtime":1622107163360,"results":"103","hashOfConfig":"76"},{"size":5116,"mtime":1628707279466,"results":"104","hashOfConfig":"76"},{"size":296,"mtime":1627408270784,"results":"105","hashOfConfig":"76"},{"size":2033,"mtime":1622836417830,"results":"106","hashOfConfig":"76"},{"size":3943,"mtime":1620319031757,"results":"107","hashOfConfig":"76"},{"size":10085,"mtime":1628786061200,"results":"108","hashOfConfig":"76"},{"size":205,"mtime":1618141801688,"results":"109","hashOfConfig":"76"},{"size":217,"mtime":1622829046391,"results":"110","hashOfConfig":"76"},{"size":414,"mtime":1628707279461,"results":"111","hashOfConfig":"76"},{"size":385,"mtime":1627054954769,"results":"112","hashOfConfig":"76"},{"size":665,"mtime":1621020966360,"results":"113","hashOfConfig":"76"},{"size":4923,"mtime":1628707279460,"results":"114","hashOfConfig":"76"},{"size":608,"mtime":1622835984835,"results":"115","hashOfConfig":"76"},{"size":3091,"mtime":1628324873170,"results":"116","hashOfConfig":"76"},{"size":2563,"mtime":1622837644323,"results":"117","hashOfConfig":"76"},{"size":214,"mtime":1628412940933,"results":"118","hashOfConfig":"76"},{"size":171,"mtime":1628611265499,"results":"119","hashOfConfig":"76"},{"size":1119,"mtime":1628324761997,"results":"120","hashOfConfig":"76"},{"size":585,"mtime":1628453046982,"results":"121","hashOfConfig":"76"},{"size":211,"mtime":1628266832820,"results":"122","hashOfConfig":"76"},{"size":53,"mtime":1625225106329,"results":"123","hashOfConfig":"76"},{"size":381,"mtime":1627573523918,"results":"124","hashOfConfig":"76"},{"size":86,"mtime":1627408270781,"results":"125","hashOfConfig":"76"},{"size":260,"mtime":1628707279459,"results":"126","hashOfConfig":"76"},{"size":382,"mtime":1628348366461,"results":"127","hashOfConfig":"76"},{"size":444,"mtime":1622282851834,"results":"128","hashOfConfig":"76"},{"size":839,"mtime":1628406686481,"results":"129","hashOfConfig":"76"},{"size":455,"mtime":1628324718494,"results":"130","hashOfConfig":"76"},{"size":1219,"mtime":1628707279459,"results":"131","hashOfConfig":"76"},{"size":3777,"mtime":1628409519551,"results":"132","hashOfConfig":"76"},{"size":3864,"mtime":1628801763714,"results":"133","hashOfConfig":"76"},{"size":1682,"mtime":1628786061199,"results":"134","hashOfConfig":"76"},{"size":1189,"mtime":1628707279464,"results":"135","hashOfConfig":"76"},{"size":4020,"mtime":1622285407784,"results":"136","hashOfConfig":"76"},{"size":287,"mtime":1627054954773,"results":"137","hashOfConfig":"76"},{"size":4362,"mtime":1622276878074,"results":"138","hashOfConfig":"76"},{"size":1658,"mtime":1622276863657,"results":"139","hashOfConfig":"76"},{"size":390,"mtime":1628265685551,"results":"140","hashOfConfig":"76"},{"size":425,"mtime":1627579228961,"results":"141","hashOfConfig":"76"},{"size":1617,"mtime":1628707279463,"results":"142","hashOfConfig":"76"},{"size":5907,"mtime":1628443709437,"results":"143","hashOfConfig":"76"},{"size":68,"mtime":1619550059029,"results":"144","hashOfConfig":"76"},{"size":260,"mtime":1622060242810,"results":"145","hashOfConfig":"76"},{"size":337,"mtime":1620320732531,"results":"146","hashOfConfig":"76"},{"size":1056,"mtime":1622060047880,"results":"147","hashOfConfig":"76"},{"size":760,"mtime":1621022329453,"results":"148","hashOfConfig":"76"},{"size":1437,"mtime":1621022383173,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"17rpeos",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"152"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"152"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"152"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"152"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"152"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"152"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"152"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"152"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"152"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"152"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"152"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"152"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"D:\\newprojects\\techs\\src\\index.js",[],["313","314"],"D:\\newprojects\\techs\\src\\reportWebVitals.js",[],"D:\\newprojects\\techs\\src\\redux\\redux-store.js",[],"D:\\newprojects\\techs\\src\\components\\App\\index.js",[],"D:\\newprojects\\techs\\src\\redux\\App-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Users-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js",[],"D:\\newprojects\\techs\\src\\api\\api.js",[],"D:\\newprojects\\techs\\src\\components\\App\\App.jsx",["315"],"import React, {useEffect} from \"react\";\r\nimport Header from \"../Header\";\r\nimport {Switch} from \"react-router-dom\";\r\nimport AppWithRouter from \"./AppWithRouter\";\r\nimport Authorization from \"./Authorization\";\r\nimport Preloader from \"../Preloader\";\r\n\r\nconst App = ({isAuth, initialize, getTypes, initialized}) => {\r\n    // useEffect(() => {\r\n    //     initialize()\r\n    // },[initialize]);\r\n    useEffect(() => {\r\n        getTypes()\r\n    },[]);\r\n    return (\r\n        <>\r\n            {\r\n                !initialized ? <Preloader />\r\n                : <>\r\n                    <Header/>\r\n\r\n                        <Switch>\r\n                            {!isAuth ? <AppWithRouter/> : <Authorization/>}\r\n\r\n                        </Switch>\r\n                </>\r\n            }\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default App\r\n","D:\\newprojects\\techs\\src\\components\\Preloader\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Header\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx",[],"D:\\newprojects\\techs\\src\\components\\Preloader\\Preloader.jsx",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js",[],"D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx",["316","317","318","319","320","321","322","323","324","325","326","327"],"import {withRouter, useParams, useLocation, useHistory} from \"react-router-dom\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    List, ListItem, ListItemIcon, ListItemText,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport ListTypes from \"../../components/ListTypes\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport queryString from 'query-string'\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Icon from \"../../components/Icon\";\r\nimport ListTechnics from \"../../components/ListTechnics\";\r\nimport ActiveCategories from \"../../components/ActiveCategories\";\r\nimport deepEqual from \"../../components/global/deepEqual\";\r\nimport FiltersTechnic from \"../../components/FiltersTechnic\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        position: \"relative\",\r\n        height: \"250px\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n    years: {\r\n        height: \"80%\",\r\n        overflow: \"overlay\"\r\n\r\n    },\r\n    typeInfoWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    imageType: {\r\n        background: \"#3f51b5\",\r\n        color: \"white\",\r\n        display: \"block\",\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n        textAlign: \"center\",\r\n        marginRight: \"20px\",\r\n    },\r\n    wrapperInfo: {\r\n        marginTop: \"50px\"\r\n    },\r\n    icon: {\r\n        fontSize: \"2.5em\",\r\n        paddingTop: \"10px\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n    roomItem: {\r\n        marginTop: \"20px\",\r\n        padding: \"7px\"\r\n    },\r\n    activeItem: {\r\n        background: \"red\",\r\n    },\r\n    roomNumber: {}\r\n}));\r\n\r\nconst TypePage = ({ getActiveType,  activeType, toogleLoadingInfoFotType }) => {\r\n    // const {search} = useLocation()\r\n    // const {years, builds} = queryString.parse(search)\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    let a = {\r\n        year: [],\r\n        matfyo: [],\r\n        build: [],\r\n        faculty: [],\r\n        room: [],\r\n        user: []\r\n    }\r\n    const [categories, setCategories] = useState(() => a)\r\n\r\n\r\n    useEffect(() => {\r\n        getActiveType(params.type)\r\n    }, [params.type]) // получение техники в соответствии с url, обновление при смене url\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container className={classes.wrapperInfo} spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        {toogleLoadingInfoFotType ? <SceletonInfoType/> : <>\r\n                            <div className={classes.typeInfoWrapper}>\r\n                                <div className={classes.typeInfo}>\r\n                                    <Icon type={activeType.type}/>\r\n                                    <Typography color={\"primary\"}>Тип</Typography>\r\n                                    <Typography variant=\"h6\">{activeType.name}</Typography>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        [ {activeType.type} ]\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                            <Divider/>\r\n                        </>\r\n                        }\r\n                    </Paper>\r\n                </Grid> {/*  Тип, картинка */}\r\n\r\n                <Grid item xs={9}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography color={\"primary\"}>Фильтрация</Typography>\r\n                        <Divider/>\r\n                        <FiltersTechnic categories={categories} setCategories={setCategories}/>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid> {/*  Сводная информация*/}\r\n            {activeType ? <>\r\n            </> : \"\"}\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                    <ActiveCategories categories={categories} setCategories={setCategories}/>\r\n                    <ListTechnics categories={categories} setCategories={setCategories}/>\r\n                </Grid> {/*  Список техники по кабинетам*/}\r\n                <Grid item xs={4}>\r\n                    <ListTypes/>\r\n                </Grid> {/*  Список типов техникик */}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(TypePage)\r\n\r\nexport const SceletonInfoType = () => {\r\n    return <div>\r\n        <Skeleton/>\r\n        <Skeleton animation={false}/>\r\n        <Skeleton animation=\"wave\"/>\r\n    </div>\r\n}\r\n\r\n","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx",["328"],"import React, {useEffect} from \"react\";\r\nimport {Container, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport Preloader from \"../../components/Preloader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n// import {makeStyles} from \"@material-ui/styles\";\r\nimport Users from \"../../components/Users\";\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n// });\r\n\r\nconst UsersPage = ({isFetching, rowsPerPage, currentPage, getUsers, match}) => {\r\n    let sectionUrl = match.params.section\r\n    const [value, setValue] = React.useState(0);\r\n    useEffect(() => {\r\n        if (sectionUrl === 'following') {\r\n            setValue(1)\r\n            getUsers(rowsPerPage, currentPage, true);\r\n        }\r\n        if (sectionUrl === 'allusers') {\r\n            setValue(0)\r\n            getUsers(rowsPerPage, currentPage, false);\r\n        }\r\n    }, [sectionUrl])\r\n    // const classes = useStyles();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!isFetching\r\n                ? <Container>\r\n                    <Typography variant=\"body1\" component=\"span\">\r\n                    </Typography>\r\n                    <Paper square>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={handleChange}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"All Users\" component={Link} to=\"/users/allusers\"/>\r\n                            <Tab label=\"following\" component={Link} to=\"/users/following\"/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <Users/>\r\n                </Container>\r\n                : <Preloader/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersPage)","D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx",["329","330","331","332","333","334"],"import React, {useEffect} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Divider,\r\n    Grid, IconButton,\r\n    List, ListItem, ListItemAvatar, ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {deepOrange} from '@material-ui/core/colors';\r\nimport ControlledAccordions from \"../../components/Accordion\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemForm from \"../../components/ListItemForm\";\r\nimport Icon from \"../../components/Icon\";\r\nimport countDays from \"../../components/global/countDays\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {addComment, getComments} from \"../../redux/Tech-reducer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatarWrapper: {\r\n        padding: \"20px\",\r\n        textAlign: \"center\"\r\n    },\r\n    devider: {\r\n        margin: \"20px\"\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        margin: \"0 auto\",\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    technicInfoWrapper: {\r\n        padding: \"20px\"\r\n    },\r\n    listItemText: {\r\n        fontSize: '1.1em',\r\n        fontWeight: \"bold\"\r\n    },\r\n    paper: {\r\n        padding: \"10px\",\r\n        width: \"100%\"\r\n    },\r\n    repairs: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    repair: {\r\n        minWidth: \"200px\",\r\n        width: \"23%\",\r\n        textAlign: \"center\"\r\n    },\r\n    margin: {\r\n        margin: \"20px 0\"\r\n    }\r\n}))\r\nlet repair = [\r\n    {\r\n        id: '1',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '2',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '3',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '4',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n\r\n]\r\n\r\nconst TechnicPage = ({activeTechnic, getTechnicInfo, users, addComment, activeTechnicComments, getComments}) => {\r\n    useEffect(() => {\r\n        getTechnicInfo(params.id)\r\n        getComments(params.id)\r\n\r\n    }, [])\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    const onSubmit = data => {\r\n        addComment(activeTechnic.id, data.msg)\r\n    };\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Paper>\r\n                        <div className={classes.avatarWrapper}>\r\n                            <Avatar\r\n                                className={classes.avatar}\r\n                            >\r\n                                <Icon type={activeTechnic.type}/>\r\n                            </Avatar>\r\n                            <Divider className={classes.devider}/>\r\n                            <Typography variant={\"body2\"} component={\"span\"}>{activeTechnic.type}</Typography>\r\n                            <Typography variant={\"h6\"} component={\"h1\"}>{activeTechnic.name}</Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Место установки\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <List>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"room\"} text={\"Кабинет\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"build\"} text={\"Корпус\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"user\"} text={\"ФИО сотрудника\"}\r\n                                              array={users}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"date\"}\r\n                                              text={\"Дата получения\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"faculty\"}\r\n                                              text={\"Факультет\"}/>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Бухгалтерия\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"invent\"} text={\"Инвентарный номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"zavod\"} text={\"Заводской номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"matfyo\"}\r\n                                          text={\"Материально-ответственное лицо\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"year\"}\r\n                                          text={\"Год выпуска\"}/>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid className={classes.margin} container spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Комментарии\r\n                        </Typography>\r\n                    <Typography>Описание: {activeTechnic.desc}</Typography>\r\n                    <Typography>Проблема: {activeTechnic.problem}</Typography>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input defaultValue=\"test\" {...register(\"msg\")} />\r\n                        <input type=\"submit\" />\r\n                    </form>\r\n                    <List>\r\n                        {activeTechnicComments.map(el => {\r\n                            return <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={el.body} secondary={el.date || '----'} />\r\n                            </ListItem>\r\n                        })}\r\n\r\n                    </List>\r\n\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <Grid container className={classes.margin} spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Заявки на ремонт\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<Icon type={\"send\"}></Icon>}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className={classes.repairs}>\r\n                        {repair.map(el => {\r\n                            return <Card className={classes.repair}>\r\n                                <CardContent>\r\n                                    <Typography>Дата заявки: {el.application}</Typography>\r\n                                    <Typography>Проблема: {el.message}</Typography>\r\n                                    <Typography>Дата передачи: {el.dispatch}</Typography>\r\n                                    <Typography>Дата получения: {el.getting}</Typography>\r\n                                    <Typography>Всего в ремонте: {countDays(el.dispatch,el.getting)}</Typography>\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        })}\r\n                    </div>\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <Grid container className={classes.margin} spacing={2}>\r\n                {\r\n                    ((activeTechnic.type === 'Принтер') || (activeTechnic.type === 'МФУ') || (activeTechnic.type === 'Ксерокс')) &&\r\n                    <Paper className={classes.paper}>\r\n                                <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                    Заправки\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"}>Максимальное количество\r\n                                    заправок за год: 2</Typography>\r\n                                <Divider/>\r\n                                {/*<Steppers/>*/}\r\n\r\n                                {activeTechnic.refill ? <>\r\n                                    <ControlledAccordions array={activeTechnic.refill}/>\r\n                                </> : <Button>Заполнить</Button>}\r\n                    </Paper>\r\n                }\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TechnicPage;","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx",[],"D:\\newprojects\\techs\\src\\components\\Posts\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Users\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx",["335","336"],"import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport {List, ListItem, ListItemText} from \"@material-ui/core\";\r\nimport Icon from \"../Icon\";\r\nimport getProperty from \"../global/getProperty\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: 224,\r\n    },\r\n    tabs: {\r\n        width: \"30%\",\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    statisticItems: {\r\n        height: \"180px\",\r\n        overflow: \"auto\"\r\n    },\r\n    tabPanel: {\r\n        width: \"70%\",\r\n    },\r\n    active: {\r\n        background: \"red\"\r\n    }\r\n}));\r\n\r\n\r\nconst FiltersTechnics = ({getStatistic, technics, paramsTechnics, statistics, categories, setCategories}) => {\r\n    const handleClickButton = (prop, value) => {\r\n        const writeParams = (params) => {\r\n            let arr = []\r\n            params.forEach(el => {\r\n               arr.push(el.property)\r\n            })\r\n            return arr\r\n        }\r\n        if (writeParams(paramsTechnics).includes(prop)) {\r\n            setCategories(prevState => ({\r\n                ...prevState,\r\n                [prop]: (!prevState[prop].includes(value)) ? [...prevState[prop], value] : prevState[prop].filter(el => el !== value) // Добавление/удаление из активных категорий\r\n            }))\r\n        }\r\n\r\n\r\n    } // добавление {годов выпуска, корпусов, фио сотруников} в url\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    let val = paramsTechnics[value].property\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        getStatistic(val)\r\n    }, [value, technics])\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                {paramsTechnics.map((el, i) => {\r\n                    return <Tab label={el.title} {...a11yProps(i)} />\r\n                })}\r\n\r\n            </Tabs>\r\n\r\n            {paramsTechnics.map((el, i) => {\r\n                return <TabPanel\r\n                    className={classes.tabPanel}\r\n                    value={value} index={i}>\r\n                    <List className={classes.statisticItems}>\r\n                        {\r\n                            statistics.map(obj => {\r\n                                let prop = getProperty(obj)\r\n                                const isContains = () => {\r\n                                    if (categories[prop] !== undefined) {\r\n                                        if (categories[prop].includes(obj[prop]) === true) {\r\n                                            return true\r\n                                        }\r\n                                    } else {\r\n                                        return false\r\n                                    }\r\n                                }\r\n                                return <ListItem onClick={() => handleClickButton(val, obj.[val])} button\r\n                                                 className={isContains() ? classes.active : null}>\r\n                                    <Icon type={val}/>\r\n                                    <ListItemText primary={`${obj.[val] || 'Не указано'} - ${obj.properties.length} шт`}/>\r\n                                </ListItem>\r\n                            })\r\n                        }\r\n                    </List>\r\n\r\n                </TabPanel>\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\nconst TabPanel = (props) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default FiltersTechnics","D:\\newprojects\\techs\\src\\components\\Posts\\Posts.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx",["337"],"import {\r\n    Button, DialogActions, DialogContent,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    ListSubheader, TextField\r\n} from \"@material-ui/core\";\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport {DeleteOutline} from \"@material-ui/icons\";\r\nimport React, {useEffect} from \"react\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from \"../Modal\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport Icon from \"../Icon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    activeType: {\r\n      background: \"#d5d5d5\"\r\n    }\r\n}));\r\n\r\nconst ListTypes = ({types, deleteType, getTypes, addType}) => {\r\n    const params = useParams();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = data => addType(data);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        getTypes()\r\n    }, [])\r\n    return (\r\n        <>\r\n            {types &&\r\n            <List subheader={<ListSubheader>Settings</ListSubheader>}>\r\n                {types.map(el => {\r\n                        return <ListItem className={(params.type === el.type) ? classes.activeType : \"\"} component={Link} to={`/types/${el.type}`} key={el.id}>\r\n\r\n                            <ListItemIcon>\r\n                                <Icon type={el.type} />\r\n                            </ListItemIcon>\r\n                            <ListItemText id=\"switch-list-label-wifi\" primary={el.name}/>\r\n                            <ListItemSecondaryAction>\r\n                                <DeleteOutline onClick={() => deleteType(el.id)}/>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    }\r\n                )}\r\n            </List>\r\n            }\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                startIcon={<CloudUploadIcon/>} onClick={handleClickOpen}>\r\n                Добавить тип\r\n            </Button>\r\n\r\n            <Modal open={open} handleClose={handleClose} title={\"Добавить тип\"}>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <DialogContent>\r\n                        <TextField {...register(\"type\")} defaultValue=\"type\"/>\r\n                        <TextField {...register(\"name\")} defaultValue=\"name\"/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </DialogActions>\r\n                </form>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListTypes\r\n\r\n","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\countDays.js",[],"D:\\newprojects\\techs\\src\\components\\global\\getProperty.js",[],"D:\\newprojects\\techs\\src\\components\\Post\\Post.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\deepEqual.js",["338","339"],"export const deepEqual = (a, b) => {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n\r\n    if (a == null || typeof(a) != \"object\" ||\r\n        b == null || typeof(b) != \"object\")\r\n    {\r\n        return false;\r\n    }\r\n\r\n    let propertiesInA = 0, propertiesInB = 0;\r\n    for (let property in a) {\r\n        propertiesInA += 1;\r\n    }\r\n    for (let property in b) {\r\n        propertiesInB += 1;\r\n        if (!(property in a) || !deepEqual(a[property], b[property])) {\r\n            return false;\r\n        }\r\n    }\r\n    return propertiesInA == propertiesInB;\r\n}\r\n\r\nexport default deepEqual","D:\\newprojects\\techs\\src\\components\\Icon\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Modal\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Accordion\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ActiveCategories\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListTechnics\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Icon\\Icon.jsx",["340"],"import icons from \"../global/global\";\r\nimport React from \"react\";\r\nimport {Help} from \"@material-ui/icons\";\r\n\r\nconst Icon = ({type, types}) => {\r\n    const regexp = /^[а-яА-Я]+$/i;\r\n\r\n    const icon = (type) => {\r\n        if (icons[type] !== undefined) {\r\n            let Icon = icons[type]\r\n            return <Icon/>\r\n        } else\r\n        //     if (regexp.test(type)) {\r\n        //     let obj = types.filter(el => el.name === type)\r\n        //     if (icons[obj[0].type] !== undefined) {\r\n        //         let Icon = icons[obj[0].type]\r\n        //         return <Icon/>\r\n        //     } else {\r\n        //         return <Help/>\r\n        //     }\r\n        // } else\r\n        {\r\n            return <Help/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {icon(type)}\r\n        </>\r\n    )\r\n}\r\nexport default Icon\r\n\r\n","D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx",[],"D:\\newprojects\\techs\\src\\components\\ActiveCategories\\ActiveCategories.jsx",["341"],"import React, {useEffect} from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Icon from \"../Icon\";\r\n\r\nconst ActiveCategories = ({categories}) => {\r\n    const generateUrl = (arr) => {\r\n        let str = Object.keys(categories).map(key => {\r\n            if (categories[key].length === 0) {\r\n                return null\r\n            } else {\r\n                return `${key}=${categories[key]}`\r\n            }\r\n        })\r\n        return str.filter(n => n).join('&')\r\n    } // Генерация URL на основе активных категорий\r\n    let history = useHistory();\r\n    const categoriesElements = Object.keys(categories).map(key => {\r\n        return categories[key].map(el => {\r\n            return <Chip avatar={<Icon type={key}></Icon>} label={el}/>\r\n        })\r\n    }) // Генерация карточек по кабинетам\r\n\r\n    useEffect(() => {\r\n        let urlData = generateUrl(categories)\r\n        history.push({\r\n            search: `${(urlData === '&') ? '' : urlData}`\r\n        });\r\n    }, [categories])\r\n    return (\r\n        <>\r\n            {categoriesElements}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActiveCategories","D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListTechnics\\ListTechnics.jsx",["342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359"],"D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx",["360","361"],"import {ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport icons from \"../global/global\";\r\nimport AutocompleteTextarea from \"../AutocompleteTextarea\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Icon from \"../Icon\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItemText: {\r\n        fontSize: '.9em',\r\n        fontWeight: \"bold\"\r\n    }\r\n}))\r\n\r\nconst ListItemForm = ({activeTechnic, property, text}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    // const getIcon = (val, size) => {\r\n    //   let Icon = icons[val]\r\n    //   return <Icon style={{fontSize: `${size}px`}}/>\r\n    //}\r\n    const [editMode, setEditMode] = useState(false)\r\n    const editPropertyTechnic = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    return <ListItem onDoubleClick={() => editPropertyTechnic(activeTechnic, property)}>\r\n        <ListItemIcon>\r\n            <Icon type={property}/>\r\n        </ListItemIcon>\r\n        {!editMode ? <ListItemText\r\n            classes={{primary: classes.listItemText}}\r\n            primary={activeTechnic[property] ||\r\n            <Button variant=\"contained\" color=\"secondary\"\r\n                    onClick={() => {\r\n                        editPropertyTechnic(activeTechnic, property)\r\n                    }}>Заполнить</Button>}\r\n            secondary={text}\r\n        /> : <AutocompleteTextarea activeTechnic={activeTechnic} property={property} text={text}\r\n                                   setEditMode={setEditMode}/>}\r\n\r\n    </ListItem>\r\n}\r\nexport default ListItemForm\r\n\r\n\r\n","D:\\newprojects\\techs\\src\\components\\global\\global.js",["362"],"import {\r\n    Facebook,\r\n    GitHub,\r\n    Instagram, Language, Link, Telegram, Twitter, YouTube, Contacts, MenuBook,\r\n    Place, Store, TurnedInNot, Toc, Print, DesktopWindows, Scanner, DesktopMac, TabletAndroid,\r\n    Mouse, Phone, Videocam, SurroundSound, LaptopChromebook, LiveTv, Keyboard, VideoLabel, RecordVoiceOver,TrackChanges\r\n} from \"@material-ui/icons\";\r\n\r\nconst icons = {\r\n    facebook: Facebook,\r\n    github: GitHub,\r\n    instagram: Instagram,\r\n    twitter: Twitter,\r\n    youtube: YouTube,\r\n    website: Language,\r\n    vk: Telegram,\r\n    mainLink: Link,\r\n    room: Store,\r\n    build: Place,\r\n    faculty: Place,\r\n    invent: Toc,\r\n    zavod: TurnedInNot,\r\n    user: Contacts,\r\n    matfyo: RecordVoiceOver,\r\n    printer: Print,\r\n    monitor: DesktopWindows,\r\n    scanner: Scanner,\r\n    monoblok: DesktopMac,\r\n    tablet: TabletAndroid,\r\n    mouse: Mouse,\r\n    phone: Phone,\r\n    projector: Videocam,\r\n    pcset: LaptopChromebook,\r\n    screen: VideoLabel,\r\n    speaker: SurroundSound,\r\n    desktoppc: LaptopChromebook,\r\n    keyboard: Keyboard,\r\n    tv: LiveTv,\r\n    mfu: Print,\r\n    xerox: Print,\r\n    send: DesktopMac,\r\n    year: TrackChanges,\r\n\r\n}\r\n\r\nexport default icons\r\n\r\n\r\n","D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx",["363"],"import {\r\n    Avatar, Button,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport s from \"./Profile.module.scss\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../Preloader\";\r\nimport ProfileView from \"./ProfileView\";\r\nimport ProfileEdit from \"./ProfileEdit\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        \"&:hover\": {\r\n            opacity: \"0.6\"\r\n        },\r\n        cursor: \"pointer\"\r\n    },\r\n    avatarInput: {\r\n        display: \"none\"\r\n    },\r\n    label: {\r\n        background: \"red\"\r\n    }\r\n\r\n})\r\n\r\nconst Profile = ({user, id, getUserInfo, updateUserInfo, isUpdateProfile, uploadPhoto, match}) => {\r\n    const classes = useStyles();\r\n\r\n    // Считывание URL\r\n    let userIdURL = match.params.uID;\r\n    // если undefined , то присваиваем id авторизованного\r\n    if (!userIdURL) {\r\n        userIdURL = id\r\n    }\r\n\r\n    // переключение режима профайла (простмотр/редактирование)\r\n    let [editMode, setEditMode] = useState(false)\r\n    const toogleMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    // проверка владельца\r\n    const checkIsOwner = () => {\r\n        if (userIdURL === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    let [userId, setUserId] = useState(userIdURL)\r\n    useEffect(() => {\r\n        getUserInfo(userId)\r\n    }, [getUserInfo, userId,userIdURL]);\r\n\r\n    // обновление картинки профиля\r\n    const onImageChange = (e) => {\r\n        uploadPhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={s.profile}>\r\n            {!user\r\n                ? <Preloader/>\r\n                : <>\r\n                    <Grid item xs={4}>\r\n                        <label className={classes.label}  htmlFor=\"contained-button-file\">\r\n                            <Avatar\r\n                                className={classes.avatar}\r\n                                style={{height: '300px', width: '300px', margin: '0 auto'}}\r\n                                src={user.photos.large}\r\n                                variant=\"circular\"\r\n                            />\r\n                        </label>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            onChange={onImageChange}\r\n                            className={classes.avatarInput}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            name=\"image\"\r\n                            type=\"file\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        className={s.profile__info}\r\n                        item xs>\r\n                        {checkIsOwner() &&\r\n                        <Button\r\n                            onClick={toogleMode}\r\n                            variant=\"outlined\"\r\n                            className={s.profile__edit}\r\n                        >\r\n                            {editMode\r\n                                ? 'Назад'\r\n                                : 'Редактировать профиль'\r\n                            }\r\n\r\n                        </Button> }\r\n                        {\r\n                            isUpdateProfile && <Preloader/>\r\n                        }\r\n                        {\r\n                            !editMode && <ProfileView user={user}/>\r\n                        }\r\n                        {\r\n                            editMode && <ProfileEdit\r\n                                user={user}\r\n                                toogleMode={toogleMode}\r\n                                updateUserInfo={updateUserInfo}\r\n                            />\r\n                        }\r\n\r\n                    </Grid>\r\n                </>}\r\n        </Grid>\r\n    )\r\n}\r\nexport default withRouter(Profile);","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx",[],"D:\\newprojects\\techs\\src\\components\\Profile\\ProfileEdit.jsx",[],"D:\\newprojects\\techs\\src\\components\\Profile\\ProfileView.jsx",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js",[],"D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\index.js",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx",["364","365"],"// import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n        Button,\r\n    Chip,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText, Tooltip\r\n} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Icon from \"../Icon\";\r\n\r\n// const useStyles = makeStyles((theme) => ({}))\r\n\r\nconst MiniCardTechnic = ({el, keys}) => {\r\n\r\n    // const classes = useStyles();\r\n    return (\r\n        <ListItem component={Link} key={el} to={`/technics/${el.id}`} button>\r\n\r\n            <ListItemIcon>\r\n                <Icon type={el.type} />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={`[${!el.invent ?\r\n                    <Button color=\"secondary\">Заполнить</Button> : el.invent}] - ${el.name}`}\r\n                secondary={`${el.year} ${el.user}`}\r\n            />\r\n            <ListItemSecondaryAction style={{display: \"flex\"}}>\r\n                {Object.keys(keys).map(key => {\r\n                    if (!el[keys[key].key]) {\r\n                        return <Tooltip key={key} title={keys[key].name}><span style={{\r\n                            display: \"block\",\r\n                            width: \"10px\",\r\n                            textAlign: \"center\",\r\n                            color: \"white\",\r\n                            marginRight: \"2px\",\r\n                            background: keys[key].bg\r\n                        }}>!</span></Tooltip>\r\n                    }\r\n                })}\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MiniCardTechnic","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx",["366"],"import {IconButton, TextField} from \"@material-ui/core\";\r\nimport Autocomplete, {createFilterOptions} from \"@material-ui/lab/Autocomplete\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    }\r\n}))\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst AutocompleteTextarea = ({activeTechnic, property, updateTechnic, setEditMode, getUsers, getRooms, text}) => {\r\n\r\n    const classes = useStyles()\r\n    const [array, setArray] = useState(\"\")\r\n    const [value, setValue] = useState(null)\r\n    useEffect(() => {\r\n        if (property === 'fyo') {\r\n            async function fetchUsers() {\r\n                let response = await getUsers()\r\n                return response\r\n            }\r\n\r\n            fetchUsers().then(response => setArray(response))\r\n        }\r\n        if (property === 'matfyo') {\r\n            async function fetchUsers() {\r\n                let response = await getUsers()\r\n                return response\r\n            }\r\n\r\n            fetchUsers().then(response => setArray(response))\r\n        }\r\n        if (property === 'room') {\r\n            async function fetchRooms() {\r\n                let response = await getRooms()\r\n                return response\r\n            }\r\n\r\n            fetchRooms().then(response => setArray(response))\r\n        }\r\n    }, [])\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSubmit(onSubmit)();\r\n            setArray([])\r\n        }\r\n        if (e.key === 'Escape') {\r\n            setEditMode(false)\r\n        }\r\n\r\n    }\r\n    const selectItem = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setValue({\r\n                [property]: newValue,\r\n            });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setValue({\r\n                [property]: newValue.inputValue,\r\n            });\r\n        } else {\r\n            setValue(newValue);\r\n        }\r\n    }\r\n    const {register, handleSubmit, control, reset} = useForm();\r\n    const onSubmit = (obj) => {\r\n        if (obj[property] === undefined) {\r\n            let val = {\r\n                [property]: value[property]\r\n            }\r\n            debugger\r\n            updateTechnic(activeTechnic.id, val)\r\n            setEditMode(false)\r\n            reset()\r\n        } else {\r\n            updateTechnic(activeTechnic.id, obj)\r\n            setEditMode(false)\r\n            reset()\r\n        }\r\n    }\r\n    return (\r\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\r\n            { ((property === 'date') || (property === 'year'))\r\n                ? <TextField\r\n                    id=\"date\"\r\n                    label=\"Birthday\"\r\n                    type=\"date\"\r\n                    {...register(property)}\r\n                    defaultValue=\"2017-05-24\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                : <div>\r\n                    {!array ?\r\n                        <TextField onKeyDown={handleKeyDown} defaultValue={activeTechnic[property]}\r\n                                   autoFocus={true} {...register(property)} />\r\n                        : <Controller\r\n                            name={property}\r\n                            control={control}\r\n                            render={({field}) => <Autocomplete\r\n                                filterOptions={(options, params) => {\r\n                                    const filtered = filter(options, params);\r\n                                    if (params.inputValue !== '') {\r\n                                        filtered.push({\r\n                                            inputValue: params.inputValue,\r\n                                            [property]: `Add \"${params.inputValue}\"`,\r\n                                        });\r\n                                    }\r\n                                    return filtered;\r\n                                }}\r\n                                selectOnFocus\r\n                                defaultValue={activeTechnic[property]}\r\n                                clearOnBlur\r\n                                onKeyDown={handleKeyDown}\r\n                                onChange={selectItem}\r\n                                handleHomeEndKeys\r\n                                id=\"free-solo-with-text-demo\"\r\n                                options={array}\r\n                                getOptionLabel={(option) => {\r\n                                    if (typeof option === 'string') {\r\n                                        return option;\r\n                                    }\r\n                                    if (option.inputValue) {\r\n                                        return option.inputValue;\r\n                                    }\r\n                                    return option[property];\r\n                                }}\r\n                                renderOption={(option) => option[property]}\r\n                                style={{width: 250}}\r\n                                freeSolo\r\n                                renderInput={(field) => (\r\n                                    <TextField autoFocus={true} {...field} label={text} variant=\"outlined\"/>\r\n                                )}\r\n                            />}\r\n                        />\r\n\r\n                    }\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <IconButton\r\n                    color=\"primary\" aria-label=\"upload picture\" type=\"submit\"\r\n                >\r\n                    <SaveIcon/>\r\n                </IconButton>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nexport default AutocompleteTextarea","D:\\newprojects\\techs\\src\\components\\SocialLink\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FollowList\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Status\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FollowList\\FolowList.jsx",[],"D:\\newprojects\\techs\\src\\components\\SocialLink\\SocialLink.jsx",[],"D:\\newprojects\\techs\\src\\components\\Status\\Status.jsx",[],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","severity":1,"message":"372","line":14,"column":7,"nodeType":"373","endLine":14,"endColumn":9,"suggestions":"374"},{"ruleId":"375","severity":1,"message":"376","line":1,"column":32,"nodeType":"377","messageId":"378","endLine":1,"endColumn":43},{"ruleId":"375","severity":1,"message":"379","line":1,"column":45,"nodeType":"377","messageId":"378","endLine":1,"endColumn":55},{"ruleId":"375","severity":1,"message":"380","line":3,"column":5,"nodeType":"377","messageId":"378","endLine":3,"endColumn":11},{"ruleId":"375","severity":1,"message":"381","line":4,"column":5,"nodeType":"377","messageId":"378","endLine":4,"endColumn":9},{"ruleId":"375","severity":1,"message":"382","line":8,"column":5,"nodeType":"377","messageId":"378","endLine":8,"endColumn":9},{"ruleId":"375","severity":1,"message":"383","line":8,"column":11,"nodeType":"377","messageId":"378","endLine":8,"endColumn":19},{"ruleId":"375","severity":1,"message":"384","line":8,"column":21,"nodeType":"377","messageId":"378","endLine":8,"endColumn":33},{"ruleId":"375","severity":1,"message":"385","line":8,"column":35,"nodeType":"377","messageId":"378","endLine":8,"endColumn":47},{"ruleId":"375","severity":1,"message":"386","line":16,"column":8,"nodeType":"377","messageId":"378","endLine":16,"endColumn":19},{"ruleId":"375","severity":1,"message":"387","line":17,"column":8,"nodeType":"377","messageId":"378","endLine":17,"endColumn":18},{"ruleId":"375","severity":1,"message":"388","line":21,"column":8,"nodeType":"377","messageId":"378","endLine":21,"endColumn":17},{"ruleId":"371","severity":1,"message":"389","line":98,"column":8,"nodeType":"373","endLine":98,"endColumn":21,"suggestions":"390"},{"ruleId":"371","severity":1,"message":"391","line":27,"column":8,"nodeType":"373","endLine":27,"endColumn":20,"suggestions":"392"},{"ruleId":"375","severity":1,"message":"393","line":12,"column":11,"nodeType":"377","messageId":"378","endLine":12,"endColumn":21},{"ruleId":"375","severity":1,"message":"394","line":22,"column":9,"nodeType":"377","messageId":"378","endLine":22,"endColumn":19},{"ruleId":"375","severity":1,"message":"395","line":22,"column":21,"nodeType":"377","messageId":"378","endLine":22,"endColumn":32},{"ruleId":"371","severity":1,"message":"396","line":100,"column":8,"nodeType":"373","endLine":100,"endColumn":10,"suggestions":"397"},{"ruleId":"375","severity":1,"message":"398","line":101,"column":37,"nodeType":"377","messageId":"378","endLine":101,"endColumn":42},{"ruleId":"375","severity":1,"message":"399","line":101,"column":57,"nodeType":"377","messageId":"378","endLine":101,"endColumn":63},{"ruleId":"375","severity":1,"message":"400","line":1,"column":27,"nodeType":"377","messageId":"378","endLine":1,"endColumn":35},{"ruleId":"371","severity":1,"message":"401","line":63,"column":8,"nodeType":"373","endLine":63,"endColumn":25,"suggestions":"402"},{"ruleId":"371","severity":1,"message":"372","line":43,"column":8,"nodeType":"373","endLine":43,"endColumn":10,"suggestions":"403"},{"ruleId":"375","severity":1,"message":"404","line":13,"column":14,"nodeType":"377","messageId":"378","endLine":13,"endColumn":22},{"ruleId":"405","severity":1,"message":"406","line":22,"column":26,"nodeType":"407","messageId":"408","endLine":22,"endColumn":28},{"ruleId":"375","severity":1,"message":"409","line":6,"column":11,"nodeType":"377","messageId":"378","endLine":6,"endColumn":17},{"ruleId":"371","severity":1,"message":"410","line":29,"column":8,"nodeType":"373","endLine":29,"endColumn":20,"suggestions":"411"},{"ruleId":"375","severity":1,"message":"381","line":1,"column":9,"nodeType":"377","messageId":"378","endLine":1,"endColumn":13},{"ruleId":"375","severity":1,"message":"382","line":1,"column":15,"nodeType":"377","messageId":"378","endLine":1,"endColumn":19},{"ruleId":"375","severity":1,"message":"412","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":18},{"ruleId":"375","severity":1,"message":"413","line":3,"column":8,"nodeType":"377","messageId":"378","endLine":3,"endColumn":23},{"ruleId":"375","severity":1,"message":"414","line":4,"column":8,"nodeType":"377","messageId":"378","endLine":4,"endColumn":31},{"ruleId":"375","severity":1,"message":"415","line":5,"column":16,"nodeType":"377","messageId":"378","endLine":5,"endColumn":25},{"ruleId":"375","severity":1,"message":"416","line":7,"column":8,"nodeType":"377","messageId":"378","endLine":7,"endColumn":19},{"ruleId":"375","severity":1,"message":"417","line":18,"column":11,"nodeType":"377","messageId":"378","endLine":18,"endColumn":18},{"ruleId":"375","severity":1,"message":"418","line":19,"column":10,"nodeType":"377","messageId":"378","endLine":19,"endColumn":19},{"ruleId":"375","severity":1,"message":"419","line":19,"column":21,"nodeType":"377","messageId":"378","endLine":19,"endColumn":33},{"ruleId":"420","severity":1,"message":"421","line":38,"column":57,"nodeType":"422","messageId":"423","endLine":38,"endColumn":59},{"ruleId":"424","severity":1,"message":"425","line":61,"column":9,"nodeType":"426","messageId":"427","endLine":62,"endColumn":10},{"ruleId":"424","severity":1,"message":"425","line":63,"column":9,"nodeType":"426","messageId":"427","endLine":64,"endColumn":10},{"ruleId":"424","severity":1,"message":"425","line":65,"column":9,"nodeType":"426","messageId":"427","endLine":66,"endColumn":10},{"ruleId":"424","severity":1,"message":"425","line":67,"column":9,"nodeType":"426","messageId":"427","endLine":68,"endColumn":10},{"ruleId":"424","severity":1,"message":"425","line":70,"column":5,"nodeType":"426","messageId":"427","endLine":71,"endColumn":6},{"ruleId":"424","severity":1,"message":"425","line":78,"column":5,"nodeType":"426","messageId":"427","endLine":79,"endColumn":6},{"ruleId":"424","severity":1,"message":"425","line":80,"column":5,"nodeType":"426","messageId":"427","endLine":81,"endColumn":6},{"ruleId":"375","severity":1,"message":"428","line":2,"column":8,"nodeType":"377","messageId":"378","endLine":2,"endColumn":14},{"ruleId":"375","severity":1,"message":"429","line":5,"column":8,"nodeType":"377","messageId":"378","endLine":5,"endColumn":13},{"ruleId":"375","severity":1,"message":"430","line":4,"column":70,"nodeType":"377","messageId":"378","endLine":4,"endColumn":78},{"ruleId":"375","severity":1,"message":"431","line":52,"column":18,"nodeType":"377","messageId":"378","endLine":52,"endColumn":27},{"ruleId":"375","severity":1,"message":"432","line":4,"column":5,"nodeType":"377","messageId":"378","endLine":4,"endColumn":9},{"ruleId":"420","severity":1,"message":"421","line":31,"column":44,"nodeType":"422","messageId":"423","endLine":31,"endColumn":46},{"ruleId":"371","severity":1,"message":"433","line":46,"column":8,"nodeType":"373","endLine":46,"endColumn":10,"suggestions":"434"},"no-native-reassign",["435"],"no-negated-in-lhs",["436"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTypes'. Either include it or remove the dependency array. If 'getTypes' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["437"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'queryString' is defined but never used.","'FolderIcon' is defined but never used.","'deepEqual' is defined but never used.","React Hook useEffect has a missing dependency: 'getActiveType'. Either include it or remove the dependency array. If 'getActiveType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["438"],"React Hook useEffect has missing dependencies: 'currentPage', 'getUsers', and 'rowsPerPage'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["439"],"'IconButton' is defined but never used.","'addComment' is defined but never used.","'getComments' is defined but never used.","React Hook useEffect has missing dependencies: 'getComments', 'getTechnicInfo', and 'params.id'. Either include them or remove the dependency array. If 'getTechnicInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["440"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getStatistic' and 'val'. Either include them or remove the dependency array. If 'getStatistic' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["441"],["442"],"'property' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'regexp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'generateUrl' and 'history'. Either include them or remove the dependency array.",["443"],"'Typography' is defined but never used.","'MiniCardTechnic' is defined but never used.","'MiniCardTechnicSkeleton' is defined but never used.","'useEffect' is defined but never used.","'getProperty' is defined but never used.","'classes' is assigned a value but never used.","'condition' is assigned a value but never used.","'setCondition' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Avatar' is defined but never used.","'icons' is defined but never used.","'MenuBook' is defined but never used.","'setUserId' is assigned a value but never used.","'Chip' is defined but never used.","React Hook useEffect has missing dependencies: 'getRooms', 'getUsers', and 'property'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["444"],"no-global-assign","no-unsafe-negation",{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"445","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},"Update the dependencies array to be: [getTypes]",{"range":"460","text":"461"},"Update the dependencies array to be: [getActiveType, params.type]",{"range":"462","text":"463"},"Update the dependencies array to be: [currentPage, getUsers, rowsPerPage, sectionUrl]",{"range":"464","text":"465"},"Update the dependencies array to be: [getComments, getTechnicInfo, params.id]",{"range":"466","text":"467"},"Update the dependencies array to be: [value, technics, getStatistic, val]",{"range":"468","text":"469"},{"range":"470","text":"461"},"Update the dependencies array to be: [categories, generateUrl, history]",{"range":"471","text":"472"},"Update the dependencies array to be: [getRooms, getUsers, property]",{"range":"473","text":"474"},[438,440],"[getTypes]",[2613,2626],"[getActiveType, params.type]",[935,947],"[currentPage, getUsers, rowsPerPage, sectionUrl]",[2653,2655],"[getComments, getTechnicInfo, params.id]",[2004,2021],"[value, technics, getStatistic, val]",[1199,1201],[1026,1038],"[categories, generateUrl, history]",[1517,1519],"[getRooms, getUsers, property]"]
[{"D:\\newprojects\\techs\\src\\index.js":"1","D:\\newprojects\\techs\\src\\reportWebVitals.js":"2","D:\\newprojects\\techs\\src\\redux\\redux-store.js":"3","D:\\newprojects\\techs\\src\\components\\App\\index.js":"4","D:\\newprojects\\techs\\src\\redux\\App-reducer.js":"5","D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js":"6","D:\\newprojects\\techs\\src\\redux\\Users-reducer.js":"7","D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js":"8","D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js":"9","D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js":"10","D:\\newprojects\\techs\\src\\api\\api.js":"11","D:\\newprojects\\techs\\src\\components\\App\\App.jsx":"12","D:\\newprojects\\techs\\src\\components\\Preloader\\index.js":"13","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js":"14","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js":"15","D:\\newprojects\\techs\\src\\components\\Header\\index.js":"16","D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx":"17","D:\\newprojects\\techs\\src\\components\\Preloader\\Preloader.jsx":"18","D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx":"19","D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx":"20","D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js":"21","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js":"22","D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js":"23","D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js":"24","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js":"25","D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js":"26","D:\\newprojects\\techs\\src\\pages\\Profile\\index.js":"27","D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx":"28","D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx":"29","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx":"30","D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx":"31","D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx":"32","D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx":"33","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx":"34","D:\\newprojects\\techs\\src\\components\\Posts\\index.js":"35","D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\index.js":"36","D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js":"37","D:\\newprojects\\techs\\src\\components\\Users\\index.js":"38","D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx":"39","D:\\newprojects\\techs\\src\\components\\Posts\\Posts.jsx":"40","D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx":"41","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx":"42","D:\\newprojects\\techs\\src\\components\\global\\countDays.js":"43","D:\\newprojects\\techs\\src\\components\\global\\getProperty.js":"44","D:\\newprojects\\techs\\src\\components\\Post\\Post.jsx":"45","D:\\newprojects\\techs\\src\\components\\global\\deepEqual.js":"46","D:\\newprojects\\techs\\src\\components\\Icon\\index.js":"47","D:\\newprojects\\techs\\src\\components\\Modal\\index.js":"48","D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js":"49","D:\\newprojects\\techs\\src\\components\\Accordion\\index.js":"50","D:\\newprojects\\techs\\src\\components\\ActiveCategories\\index.js":"51","D:\\newprojects\\techs\\src\\components\\ListTechnics\\index.js":"52","D:\\newprojects\\techs\\src\\components\\Profile\\index.js":"53","D:\\newprojects\\techs\\src\\components\\Icon\\Icon.jsx":"54","D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx":"55","D:\\newprojects\\techs\\src\\components\\ActiveCategories\\ActiveCategories.jsx":"56","D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx":"57","D:\\newprojects\\techs\\src\\components\\ListTechnics\\ListTechnics.jsx":"58","D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx":"59","D:\\newprojects\\techs\\src\\components\\global\\global.js":"60","D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx":"61","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx":"62","D:\\newprojects\\techs\\src\\components\\Profile\\ProfileEdit.jsx":"63","D:\\newprojects\\techs\\src\\components\\Profile\\ProfileView.jsx":"64","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js":"65","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\index.js":"66","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx":"67","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx":"68","D:\\newprojects\\techs\\src\\components\\SocialLink\\index.js":"69","D:\\newprojects\\techs\\src\\components\\FollowList\\index.js":"70","D:\\newprojects\\techs\\src\\components\\Status\\index.js":"71","D:\\newprojects\\techs\\src\\components\\FollowList\\FolowList.jsx":"72","D:\\newprojects\\techs\\src\\components\\SocialLink\\SocialLink.jsx":"73","D:\\newprojects\\techs\\src\\components\\Status\\Status.jsx":"74","D:\\newprojects\\techs\\src\\components\\global\\groupArray.js":"75","D:\\newprojects\\techs\\src\\components\\global\\formatDate.js":"76","D:\\newprojects\\techs\\src\\components\\global\\images.js":"77","D:\\newprojects\\techs\\src\\pages\\RoomPage\\index.js":"78","D:\\newprojects\\techs\\src\\pages\\RoomPage\\RoomPage.jsx":"79"},{"size":585,"mtime":1619453189691,"results":"80","hashOfConfig":"81"},{"size":362,"mtime":499162500000,"results":"82","hashOfConfig":"81"},{"size":799,"mtime":1623688791559,"results":"83","hashOfConfig":"81"},{"size":364,"mtime":1628266721671,"results":"84","hashOfConfig":"81"},{"size":800,"mtime":1624975646264,"results":"85","hashOfConfig":"81"},{"size":2414,"mtime":1613510004007,"results":"86","hashOfConfig":"81"},{"size":4067,"mtime":1622231323629,"results":"87","hashOfConfig":"81"},{"size":2962,"mtime":1622061365007,"results":"88","hashOfConfig":"81"},{"size":7712,"mtime":1622835922035,"results":"89","hashOfConfig":"81"},{"size":11844,"mtime":1628955375564,"results":"90","hashOfConfig":"81"},{"size":4368,"mtime":1628955666437,"results":"91","hashOfConfig":"81"},{"size":821,"mtime":1628266433161,"results":"92","hashOfConfig":"81"},{"size":63,"mtime":1619384275192,"results":"93","hashOfConfig":"81"},{"size":198,"mtime":1622062179840,"results":"94","hashOfConfig":"81"},{"size":203,"mtime":1619365649818,"results":"95","hashOfConfig":"81"},{"size":348,"mtime":1620069278960,"results":"96","hashOfConfig":"81"},{"size":2821,"mtime":1624985699994,"results":"97","hashOfConfig":"81"},{"size":154,"mtime":1619384365533,"results":"98","hashOfConfig":"81"},{"size":362,"mtime":1619813994120,"results":"99","hashOfConfig":"81"},{"size":1532,"mtime":1628954406129,"results":"100","hashOfConfig":"81"},{"size":1741,"mtime":1619363631463,"results":"101","hashOfConfig":"81"},{"size":415,"mtime":1625133389273,"results":"102","hashOfConfig":"81"},{"size":456,"mtime":1621279691901,"results":"103","hashOfConfig":"81"},{"size":488,"mtime":1620058626451,"results":"104","hashOfConfig":"81"},{"size":568,"mtime":1628431889894,"results":"105","hashOfConfig":"81"},{"size":2740,"mtime":1628347838454,"results":"106","hashOfConfig":"81"},{"size":201,"mtime":1621960851643,"results":"107","hashOfConfig":"81"},{"size":335,"mtime":1622107163360,"results":"108","hashOfConfig":"81"},{"size":5387,"mtime":1628933392309,"results":"109","hashOfConfig":"81"},{"size":296,"mtime":1627408270784,"results":"110","hashOfConfig":"81"},{"size":2033,"mtime":1622836417830,"results":"111","hashOfConfig":"81"},{"size":3943,"mtime":1620319031757,"results":"112","hashOfConfig":"81"},{"size":11446,"mtime":1628942315203,"results":"113","hashOfConfig":"81"},{"size":205,"mtime":1618141801688,"results":"114","hashOfConfig":"81"},{"size":217,"mtime":1622829046391,"results":"115","hashOfConfig":"81"},{"size":414,"mtime":1628707279461,"results":"116","hashOfConfig":"81"},{"size":385,"mtime":1627054954769,"results":"117","hashOfConfig":"81"},{"size":665,"mtime":1621020966360,"results":"118","hashOfConfig":"81"},{"size":4169,"mtime":1628933201629,"results":"119","hashOfConfig":"81"},{"size":608,"mtime":1622835984835,"results":"120","hashOfConfig":"81"},{"size":3091,"mtime":1628324873170,"results":"121","hashOfConfig":"81"},{"size":2563,"mtime":1622837644323,"results":"122","hashOfConfig":"81"},{"size":214,"mtime":1628412940933,"results":"123","hashOfConfig":"81"},{"size":171,"mtime":1628611265499,"results":"124","hashOfConfig":"81"},{"size":1119,"mtime":1628324761997,"results":"125","hashOfConfig":"81"},{"size":586,"mtime":1628933451999,"results":"126","hashOfConfig":"81"},{"size":211,"mtime":1628266832820,"results":"127","hashOfConfig":"81"},{"size":53,"mtime":1625225106329,"results":"128","hashOfConfig":"81"},{"size":381,"mtime":1627573523918,"results":"129","hashOfConfig":"81"},{"size":86,"mtime":1627408270781,"results":"130","hashOfConfig":"81"},{"size":260,"mtime":1628707279459,"results":"131","hashOfConfig":"81"},{"size":382,"mtime":1628348366461,"results":"132","hashOfConfig":"81"},{"size":444,"mtime":1622282851834,"results":"133","hashOfConfig":"81"},{"size":839,"mtime":1628406686481,"results":"134","hashOfConfig":"81"},{"size":455,"mtime":1628324718494,"results":"135","hashOfConfig":"81"},{"size":1331,"mtime":1628933331687,"results":"136","hashOfConfig":"81"},{"size":3777,"mtime":1628409519551,"results":"137","hashOfConfig":"81"},{"size":2168,"mtime":1628932844697,"results":"138","hashOfConfig":"81"},{"size":1541,"mtime":1628942200482,"results":"139","hashOfConfig":"81"},{"size":1179,"mtime":1628933451978,"results":"140","hashOfConfig":"81"},{"size":4020,"mtime":1622285407784,"results":"141","hashOfConfig":"81"},{"size":287,"mtime":1627054954773,"results":"142","hashOfConfig":"81"},{"size":4362,"mtime":1622276878074,"results":"143","hashOfConfig":"81"},{"size":1658,"mtime":1622276863657,"results":"144","hashOfConfig":"81"},{"size":390,"mtime":1628265685551,"results":"145","hashOfConfig":"81"},{"size":425,"mtime":1627579228961,"results":"146","hashOfConfig":"81"},{"size":1787,"mtime":1628939771776,"results":"147","hashOfConfig":"81"},{"size":5885,"mtime":1628928613651,"results":"148","hashOfConfig":"81"},{"size":68,"mtime":1619550059029,"results":"149","hashOfConfig":"81"},{"size":260,"mtime":1622060242810,"results":"150","hashOfConfig":"81"},{"size":337,"mtime":1620320732531,"results":"151","hashOfConfig":"81"},{"size":1056,"mtime":1622060047880,"results":"152","hashOfConfig":"81"},{"size":760,"mtime":1621022329453,"results":"153","hashOfConfig":"81"},{"size":1437,"mtime":1621022383173,"results":"154","hashOfConfig":"81"},{"size":287,"mtime":1628931477543,"results":"155","hashOfConfig":"81"},{"size":163,"mtime":1628934692339,"results":"156","hashOfConfig":"81"},{"size":3621,"mtime":1628941179502,"results":"157","hashOfConfig":"81"},{"size":371,"mtime":1628955384434,"results":"158","hashOfConfig":"81"},{"size":2508,"mtime":1628957936257,"results":"159","hashOfConfig":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"17rpeos",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"162"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"162"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"162"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"162"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"162"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"162"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"162"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"162"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"162"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"162"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"162"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"162"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\newprojects\\techs\\src\\index.js",[],["333","334"],"D:\\newprojects\\techs\\src\\reportWebVitals.js",[],"D:\\newprojects\\techs\\src\\redux\\redux-store.js",[],"D:\\newprojects\\techs\\src\\components\\App\\index.js",[],"D:\\newprojects\\techs\\src\\redux\\App-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Dialogs-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Users-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Auth-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Profile-reducer.js",[],"D:\\newprojects\\techs\\src\\redux\\Tech-reducer.js",[],"D:\\newprojects\\techs\\src\\api\\api.js",[],"D:\\newprojects\\techs\\src\\components\\App\\App.jsx",["335"],"import React, {useEffect} from \"react\";\r\nimport Header from \"../Header\";\r\nimport {Switch} from \"react-router-dom\";\r\nimport AppWithRouter from \"./AppWithRouter\";\r\nimport Authorization from \"./Authorization\";\r\nimport Preloader from \"../Preloader\";\r\n\r\nconst App = ({isAuth, initialize, getTypes, initialized}) => {\r\n    // useEffect(() => {\r\n    //     initialize()\r\n    // },[initialize]);\r\n    useEffect(() => {\r\n        getTypes()\r\n    },[]);\r\n    return (\r\n        <>\r\n            {\r\n                !initialized ? <Preloader />\r\n                : <>\r\n                    <Header/>\r\n\r\n                        <Switch>\r\n                            {!isAuth ? <AppWithRouter/> : <Authorization/>}\r\n\r\n                        </Switch>\r\n                </>\r\n            }\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default App\r\n","D:\\newprojects\\techs\\src\\components\\Preloader\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\index.js",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Header\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.jsx",[],"D:\\newprojects\\techs\\src\\components\\Preloader\\Preloader.jsx",[],"D:\\newprojects\\techs\\src\\components\\App\\Authorization\\Authorization.jsx",[],"D:\\newprojects\\techs\\src\\components\\App\\AppWithRouter\\AppWithRouter.jsx",[],"D:\\newprojects\\techs\\src\\components\\Header\\Header.css.js",[],"D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\UsersPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\SignInPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\TypePage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\Profile\\ProfilePage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\TypePage\\TypePage.jsx",["336","337","338","339"],"import {withRouter, useParams, useLocation, useHistory} from \"react-router-dom\";\r\nimport {\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    Paper\r\n} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport ListTypes from \"../../components/ListTypes\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport queryString from 'query-string'\r\nimport Icon from \"../../components/Icon\";\r\nimport ListTechnics from \"../../components/ListTechnics\";\r\nimport ActiveCategories from \"../../components/ActiveCategories\";\r\nimport FiltersTechnic from \"../../components/FiltersTechnic\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary,\r\n        position: \"relative\",\r\n        height: \"250px\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n    years: {\r\n        height: \"80%\",\r\n        overflow: \"overlay\"\r\n\r\n    },\r\n    typeInfoWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    imageType: {\r\n        background: \"#3f51b5\",\r\n        color: \"white\",\r\n        display: \"block\",\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n        textAlign: \"center\",\r\n        marginRight: \"20px\",\r\n    },\r\n    wrapperInfo: {\r\n        marginTop: \"50px\"\r\n    },\r\n    icon: {\r\n        fontSize: \"2.5em\",\r\n        paddingTop: \"10px\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n    roomItem: {\r\n        marginTop: \"20px\",\r\n        padding: \"7px\"\r\n    },\r\n    activeItem: {\r\n        background: \"red\",\r\n    },\r\n    roomNumber: {}\r\n}));\r\n\r\nconst TypePage = ({ getActiveType,  activeType, toogleLoadingInfoFotType }) => {\r\n    // const {search} = useLocation()\r\n    // const {years, builds} = queryString.parse(search)\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    const [categories, setCategories] = useState(() => [])\r\n    const handlerCategory = (prop, value) => {\r\n        let property = () => {\r\n            let obj = {[prop]: value}\r\n            if (JSON.stringify(categories).includes(JSON.stringify(obj))) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        } // Проверка наличия выбранной кабегории в массиве категорий\r\n        setCategories(prevState => (property()) ? [...prevState, {[prop]: value}] : prevState.filter(el => ((Object.keys(el)[0],Object.values(el)[0]) !== (prop,value))))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getActiveType(params.type)\r\n    }, [params.type]) // получение техники в соответствии с url, обновление при смене url\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container className={classes.wrapperInfo} spacing={3}>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>\r\n                        {toogleLoadingInfoFotType ? <SceletonInfoType/> : <>\r\n                            <div className={classes.typeInfoWrapper}>\r\n                                <div className={classes.typeInfo}>\r\n                                    <Icon type={activeType.type}/>\r\n                                    <Typography color={\"primary\"}>Тип</Typography>\r\n                                    <Typography variant=\"h6\">{activeType.name}</Typography>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        [ {activeType.type} ]\r\n                                    </Typography>\r\n                                </div>\r\n                            </div>\r\n                            <Divider/>\r\n                        </>\r\n                        }\r\n                    </Paper>\r\n                </Grid> {/*  Тип, картинка */}\r\n\r\n                <Grid item xs={9}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography color={\"primary\"}>Фильтрация</Typography>\r\n                        <Divider/>\r\n                        <FiltersTechnic categories={categories} handlerCategory={handlerCategory}/>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid> {/*  Сводная информация*/}\r\n            {activeType ? <>\r\n            </> : \"\"}\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                    <ActiveCategories categories={categories} handlerCategory={handlerCategory}/>\r\n                    <ListTechnics categories={categories} setCategories={setCategories}/>\r\n                </Grid> {/*  Список техники по кабинетам*/}\r\n                <Grid item xs={4}>\r\n                    <ListTypes/>\r\n                </Grid> {/*  Список типов техникик */}\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(TypePage)\r\n\r\nexport const SceletonInfoType = () => {\r\n    return <div>\r\n        <Skeleton/>\r\n        <Skeleton animation={false}/>\r\n        <Skeleton animation=\"wave\"/>\r\n    </div>\r\n}\r\n\r\n","D:\\newprojects\\techs\\src\\pages\\TypesTechnicsPage\\TypesTechnicsPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\UsersPage\\UsersPage.jsx",["340"],"import React, {useEffect} from \"react\";\r\nimport {Container, Paper, Tab, Tabs} from \"@material-ui/core\";\r\nimport Preloader from \"../../components/Preloader\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n// import {makeStyles} from \"@material-ui/styles\";\r\nimport Users from \"../../components/Users\";\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n// });\r\n\r\nconst UsersPage = ({isFetching, rowsPerPage, currentPage, getUsers, match}) => {\r\n    let sectionUrl = match.params.section\r\n    const [value, setValue] = React.useState(0);\r\n    useEffect(() => {\r\n        if (sectionUrl === 'following') {\r\n            setValue(1)\r\n            getUsers(rowsPerPage, currentPage, true);\r\n        }\r\n        if (sectionUrl === 'allusers') {\r\n            setValue(0)\r\n            getUsers(rowsPerPage, currentPage, false);\r\n        }\r\n    }, [sectionUrl])\r\n    // const classes = useStyles();\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!isFetching\r\n                ? <Container>\r\n                    <Typography variant=\"body1\" component=\"span\">\r\n                    </Typography>\r\n                    <Paper square>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={handleChange}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"All Users\" component={Link} to=\"/users/allusers\"/>\r\n                            <Tab label=\"following\" component={Link} to=\"/users/following\"/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <Users/>\r\n                </Container>\r\n                : <Preloader/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersPage)","D:\\newprojects\\techs\\src\\pages\\SignInPage\\SignInPage.jsx",[],"D:\\newprojects\\techs\\src\\pages\\TechnicPage\\TechnicPage.jsx",["341","342","343","344"],"import React, {useEffect} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    List, ListItem, ListItemAvatar, ListItemText,\r\n} from \"@material-ui/core\";\r\nimport {deepOrange} from '@material-ui/core/colors';\r\nimport ControlledAccordions from \"../../components/Accordion\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemForm from \"../../components/ListItemForm\";\r\nimport Icon from \"../../components/Icon\";\r\nimport countDays from \"../../components/global/countDays\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {format} from \"date-fns\";\r\nimport images from \"../../components/global/images\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatarWrapper: {\r\n        padding: \"20px\",\r\n        textAlign: \"center\"\r\n    },\r\n    devider: {\r\n        margin: \"20px\"\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        margin: \"0 auto\",\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n        cursor: \"pointer\"\r\n    },\r\n    technicInfoWrapper: {\r\n        padding: \"20px\"\r\n    },\r\n    listItemText: {\r\n        fontSize: '1.1em',\r\n        fontWeight: \"bold\"\r\n    },\r\n    paper: {\r\n        padding: \"10px\",\r\n        width: \"100%\"\r\n    },\r\n    repairs: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    repair: {\r\n        minWidth: \"200px\",\r\n        width: \"23%\",\r\n        textAlign: \"center\"\r\n    },\r\n    margin: {\r\n        margin: \"20px 0\"\r\n    }\r\n}))\r\nlet repair = [\r\n    {\r\n        id: '1',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '2',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '3',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n    {\r\n        id: '4',\r\n        application: '2017-05-25',\r\n        message: 'message',\r\n        dispatch: '2017-05-27',\r\n        getting: '2017-05-29'\r\n    },\r\n\r\n]\r\n\r\nconst TechnicPage = ({activeTechnic, getTechnicInfo, users, addComment, activeTechnicComments, getComments}) => {\r\n    useEffect(() => {\r\n        getTechnicInfo(params.id)\r\n        getComments(params.id)\r\n\r\n    }, [])\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    const onSubmit = data => {\r\n        addComment(activeTechnic.id, data.msg)\r\n    };\r\n    const classes = useStyles();\r\n    const params = useParams();\r\n    const formatDate = (value) => {\r\n        return format(new Date(value), 'dd.MM.yyyy')\r\n    }\r\n    const addImage = (name) => {\r\n        console.log(images[name])\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <Paper>\r\n                        <div className={classes.avatarWrapper}>\r\n                            <Avatar\r\n                                variant={\"square\"}\r\n                                src={images[activeTechnic.name]}\r\n                                className={classes.avatar}\r\n                            >\r\n\r\n                                {/*<Icon type={activeTechnic.type}/>*/}\r\n                            </Avatar>\r\n                            <Divider className={classes.devider}/>\r\n                            <Typography variant={\"body2\"} component={\"span\"}>{activeTechnic.type}</Typography>\r\n                            <Typography variant={\"h6\"} component={\"h1\"}>{activeTechnic.name}</Typography>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Место установки\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <List>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"room\"} text={\"Кабинет\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"build\"} text={\"Корпус\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"user\"} text={\"ФИО сотрудника\"}\r\n                                              array={users}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"date\"}\r\n                                              text={\"Дата получения\"}/>\r\n                                <ListItemForm activeTechnic={activeTechnic} property={\"faculty\"}\r\n                                              text={\"Факультет\"}/>\r\n                            </List>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                Бухгалтерия\r\n                            </Typography>\r\n                            <Divider/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"invent\"} text={\"Инвентарный номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"zavod\"} text={\"Заводской номер\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"matfyo\"}\r\n                                          text={\"Материально-ответственное лицо\"}/>\r\n                            <ListItemForm activeTechnic={activeTechnic} property={\"year\"}\r\n                                          text={\"Год выпуска\"}/>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid className={classes.margin} container spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Комментарии\r\n                        </Typography>\r\n                    <Typography>Описание: {activeTechnic.desc}</Typography>\r\n                    <Typography>Проблема: {activeTechnic.problem}</Typography>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <input defaultValue=\"test\" {...register(\"msg\")} />\r\n                        <input type=\"submit\" />\r\n                    </form>\r\n                    <List>\r\n                        {activeTechnicComments.map((el,i) => {\r\n                            return <ListItem key={i}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={el.body} secondary={formatDate(el.date)} />\r\n                            </ListItem>\r\n                        })}\r\n\r\n                    </List>\r\n\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <Grid container className={classes.margin} spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Заявки на ремонт\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            endIcon={<Icon type={\"send\"}></Icon>}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className={classes.repairs}>\r\n                        {repair.map(el => {\r\n                            return <Card className={classes.repair}>\r\n                                <CardContent>\r\n                                    <Typography>Дата заявки: {el.application}</Typography>\r\n                                    <Typography>Проблема: {el.message}</Typography>\r\n                                    <Typography>Дата передачи: {el.dispatch}</Typography>\r\n                                    <Typography>Дата получения: {el.getting}</Typography>\r\n                                    <Typography>Всего в ремонте: {countDays(el.dispatch,el.getting)}</Typography>\r\n\r\n                                </CardContent>\r\n                            </Card>\r\n                        })}\r\n                    </div>\r\n                </Paper>\r\n\r\n            </Grid>\r\n            <Grid container className={classes.margin} spacing={2}>\r\n                {\r\n                    ((activeTechnic.type === 'Принтер') || (activeTechnic.type === 'МФУ') || (activeTechnic.type === 'Ксерокс')) &&\r\n                    <Paper className={classes.paper}>\r\n                                <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                    Заправки\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"}>Максимальное количество\r\n                                    заправок за год: 2</Typography>\r\n                                <Divider/>\r\n                                {/*<Steppers/>*/}\r\n\r\n                                {activeTechnic.refill ? <>\r\n                                    <ControlledAccordions array={activeTechnic.refill}/>\r\n                                </> : <Button>Заполнить</Button>}\r\n                    </Paper>\r\n                }\r\n            </Grid>\r\n            <Grid container className={classes.margin} spacing={2}>\r\n                <Paper className={classes.paper}>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                            Техника в этом кабинете\r\n                        </Typography>\r\n                    </div>\r\n                    <div>\r\n                        <Button component={Link} to={`/room/${activeTechnic.room}`}>Техника кабинета</Button>\r\n                        <ul>\r\n                            <li>Компьютер</li>\r\n                            <li>Колонки</li>\r\n                            <li>Принтер</li>\r\n                            <li>Монитор</li>\r\n                            <li>Клавиатура</li>\r\n                            <li>Мышь</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TechnicPage;","D:\\newprojects\\techs\\src\\components\\Common\\TextError.jsx",[],"D:\\newprojects\\techs\\src\\components\\Posts\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Users\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FiltersTechnic\\FiltersTechnic.jsx",["345","346","347"],"import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport {List, ListItem, ListItemText} from \"@material-ui/core\";\r\nimport Icon from \"../Icon\";\r\nimport getProperty from \"../global/getProperty\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: 224,\r\n    },\r\n    tabs: {\r\n        width: \"30%\",\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    statisticItems: {\r\n        height: \"180px\",\r\n        overflow: \"auto\"\r\n    },\r\n    tabPanel: {\r\n        width: \"70%\",\r\n    },\r\n    active: {\r\n        background: \"red\"\r\n    }\r\n}));\r\n\r\n\r\nconst FiltersTechnics = ({getStatistic, technics, paramsTechnics, statistics, categories, handlerCategory}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    let val = paramsTechnics[value].property\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    useEffect(() => {\r\n        getStatistic(val)\r\n    }, [value, technics])\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                {paramsTechnics.map((el, i) => {\r\n                    return <Tab key={i} label={el.title} {...a11yProps(i)} />\r\n                })}\r\n\r\n            </Tabs>\r\n\r\n            {paramsTechnics.map((el, i) => {\r\n                return <TabPanel\r\n                    className={classes.tabPanel}\r\n                    value={value} index={i}>\r\n                    <List key={i} className={classes.statisticItems}>\r\n                        {\r\n                            statistics.map((obj,i) => {\r\n                                let prop = getProperty(obj)\r\n                                const isContains = () => {\r\n                                    let a = categories.some(el => {\r\n                                        if (obj[prop] === el[prop]) {\r\n                                            return true\r\n                                        }\r\n                                    })\r\n                                    return a\r\n                                }\r\n                                return <ListItem key={i} onClick={() => handlerCategory(val, obj.[val])} button\r\n                                                 className={isContains() ? classes.active : null}>\r\n                                    <Icon type={val}/>\r\n                                    <ListItemText\r\n                                        primary={`${obj.[val] || 'Не указано'} - ${obj.properties.length} шт`}/>\r\n                                </ListItem>\r\n                            })\r\n                        }\r\n                    </List>\r\n\r\n                </TabPanel>\r\n            })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst a11yProps = (index) => {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\nconst TabPanel = (props) => {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default FiltersTechnics","D:\\newprojects\\techs\\src\\components\\Posts\\Posts.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListTypes\\ListTypes.jsx",["348"],"import {\r\n    Button, DialogActions, DialogContent,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    ListSubheader, TextField\r\n} from \"@material-ui/core\";\r\nimport {Link,useParams} from \"react-router-dom\";\r\nimport {DeleteOutline} from \"@material-ui/icons\";\r\nimport React, {useEffect} from \"react\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Modal from \"../Modal\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport Icon from \"../Icon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    activeType: {\r\n      background: \"#d5d5d5\"\r\n    }\r\n}));\r\n\r\nconst ListTypes = ({types, deleteType, getTypes, addType}) => {\r\n    const params = useParams();\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = data => addType(data);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        getTypes()\r\n    }, [])\r\n    return (\r\n        <>\r\n            {types &&\r\n            <List subheader={<ListSubheader>Settings</ListSubheader>}>\r\n                {types.map(el => {\r\n                        return <ListItem className={(params.type === el.type) ? classes.activeType : \"\"} component={Link} to={`/types/${el.type}`} key={el.id}>\r\n\r\n                            <ListItemIcon>\r\n                                <Icon type={el.type} />\r\n                            </ListItemIcon>\r\n                            <ListItemText id=\"switch-list-label-wifi\" primary={el.name}/>\r\n                            <ListItemSecondaryAction>\r\n                                <DeleteOutline onClick={() => deleteType(el.id)}/>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                    }\r\n                )}\r\n            </List>\r\n            }\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n                startIcon={<CloudUploadIcon/>} onClick={handleClickOpen}>\r\n                Добавить тип\r\n            </Button>\r\n\r\n            <Modal open={open} handleClose={handleClose} title={\"Добавить тип\"}>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <DialogContent>\r\n                        <TextField {...register(\"type\")} defaultValue=\"type\"/>\r\n                        <TextField {...register(\"name\")} defaultValue=\"name\"/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </DialogActions>\r\n                </form>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListTypes\r\n\r\n","D:\\newprojects\\techs\\src\\components\\Users\\Users.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\countDays.js",[],"D:\\newprojects\\techs\\src\\components\\global\\getProperty.js",[],"D:\\newprojects\\techs\\src\\components\\Post\\Post.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\deepEqual.js",["349","350"],"export const deepEqual = (a, b) => {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n\r\n    if (a == null || typeof(a) != \"object\" ||\r\n        b == null || typeof(b) != \"object\")\r\n    {\r\n        return false;\r\n    }\r\n\r\n    let propertiesInA = 0, propertiesInB = 0;\r\n    for (let property in a) {\r\n        propertiesInA += 1;\r\n    }\r\n    for (let property in b) {\r\n        propertiesInB += 1;\r\n        if (!(property in a) || !deepEqual(a[property], b[property])) {\r\n            return false;\r\n        }\r\n    }\r\n    return propertiesInA == propertiesInB;\r\n}\r\n\r\nexport default deepEqual",["351","352"],"D:\\newprojects\\techs\\src\\components\\Icon\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Modal\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListItemForm\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Accordion\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ActiveCategories\\index.js",[],"D:\\newprojects\\techs\\src\\components\\ListTechnics\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Profile\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Icon\\Icon.jsx",["353"],"import icons from \"../global/global\";\r\nimport React from \"react\";\r\nimport {Help} from \"@material-ui/icons\";\r\n\r\nconst Icon = ({type, types}) => {\r\n    const regexp = /^[а-яА-Я]+$/i;\r\n\r\n    const icon = (type) => {\r\n        if (icons[type] !== undefined) {\r\n            let Icon = icons[type]\r\n            return <Icon/>\r\n        } else\r\n        //     if (regexp.test(type)) {\r\n        //     let obj = types.filter(el => el.name === type)\r\n        //     if (icons[obj[0].type] !== undefined) {\r\n        //         let Icon = icons[obj[0].type]\r\n        //         return <Icon/>\r\n        //     } else {\r\n        //         return <Help/>\r\n        //     }\r\n        // } else\r\n        {\r\n            return <Help/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {icon(type)}\r\n        </>\r\n    )\r\n}\r\nexport default Icon\r\n\r\n","D:\\newprojects\\techs\\src\\components\\Modal\\Modal.jsx",[],"D:\\newprojects\\techs\\src\\components\\ActiveCategories\\ActiveCategories.jsx",["354"],"import React, {useEffect} from \"react\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Icon from \"../Icon\";\r\n\r\nconst ActiveCategories = ({categories, handlerCategory}) => {\r\n    const generateUrl = (arr) => {\r\n        let str = Object.keys(categories).map(key => {\r\n            if (categories[key].length === 0) {\r\n                return null\r\n            } else {\r\n                return `${key}=${categories[key]}`\r\n            }\r\n        })\r\n        return str.filter(n => n).join('&')\r\n    } // Генерация URL на основе активных категорий\r\n    let history = useHistory();\r\n    const categoriesElements = categories.map((el,i) => {\r\n        let type = Object.keys(el)[0]\r\n        let value = Object.values(el)[0]\r\n        return <Chip style={{cursor: \"pointer\"}} onClick={() => handlerCategory(type,value)} key={i} avatar={<Icon type={type}></Icon>} label={value}/>\r\n    }) // Генерация карточек по кабинетам\r\n\r\n    useEffect(() => {\r\n        let urlData = generateUrl(categories)\r\n        history.push({\r\n            search: `${(urlData === '&') ? '' : urlData}`\r\n        });\r\n    }, [categories])\r\n    return (\r\n        <>\r\n            {categoriesElements}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActiveCategories","D:\\newprojects\\techs\\src\\components\\Accordion\\Accordion.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListTechnics\\ListTechnics.jsx",[],"D:\\newprojects\\techs\\src\\components\\ListItemForm\\ListItemForm.jsx",["355","356"],"import {ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport icons from \"../global/global\";\r\nimport AutocompleteTextarea from \"../AutocompleteTextarea\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Icon from \"../Icon\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    listItemText: {\r\n        fontSize: '.9em',\r\n        fontWeight: \"bold\"\r\n    }\r\n}))\r\n\r\nconst ListItemForm = ({activeTechnic, property, text}) => {\r\n\r\n    const classes = useStyles();\r\n    const [editMode, setEditMode] = useState(false)\r\n    const editPropertyTechnic = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    return <ListItem onDoubleClick={() => editPropertyTechnic(activeTechnic, property)}>\r\n        <ListItemIcon>\r\n            <Icon type={property}/>\r\n        </ListItemIcon>\r\n        {!editMode ? <ListItemText\r\n            classes={{primary: classes.listItemText}}\r\n            primary={activeTechnic[property] ||\r\n            <Button variant=\"contained\" color=\"secondary\"\r\n                    onClick={() => {\r\n                        editPropertyTechnic(activeTechnic, property)\r\n                    }}>Заполнить</Button>}\r\n            secondary={text}\r\n        /> : <AutocompleteTextarea activeTechnic={activeTechnic} property={property} text={text}\r\n                                   setEditMode={setEditMode}/>}\r\n\r\n    </ListItem>\r\n}\r\nexport default ListItemForm\r\n\r\n\r\n","D:\\newprojects\\techs\\src\\components\\global\\global.js",[],"D:\\newprojects\\techs\\src\\components\\Profile\\Profile.jsx",["357"],"import {\r\n    Avatar, Button,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport s from \"./Profile.module.scss\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../Preloader\";\r\nimport ProfileView from \"./ProfileView\";\r\nimport ProfileEdit from \"./ProfileEdit\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        \"&:hover\": {\r\n            opacity: \"0.6\"\r\n        },\r\n        cursor: \"pointer\"\r\n    },\r\n    avatarInput: {\r\n        display: \"none\"\r\n    },\r\n    label: {\r\n        background: \"red\"\r\n    }\r\n\r\n})\r\n\r\nconst Profile = ({user, id, getUserInfo, updateUserInfo, isUpdateProfile, uploadPhoto, match}) => {\r\n    const classes = useStyles();\r\n\r\n    // Считывание URL\r\n    let userIdURL = match.params.uID;\r\n    // если undefined , то присваиваем id авторизованного\r\n    if (!userIdURL) {\r\n        userIdURL = id\r\n    }\r\n\r\n    // переключение режима профайла (простмотр/редактирование)\r\n    let [editMode, setEditMode] = useState(false)\r\n    const toogleMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    // проверка владельца\r\n    const checkIsOwner = () => {\r\n        if (userIdURL === id) {\r\n            return true\r\n        }\r\n    }\r\n\r\n    let [userId, setUserId] = useState(userIdURL)\r\n    useEffect(() => {\r\n        getUserInfo(userId)\r\n    }, [getUserInfo, userId,userIdURL]);\r\n\r\n    // обновление картинки профиля\r\n    const onImageChange = (e) => {\r\n        uploadPhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={s.profile}>\r\n            {!user\r\n                ? <Preloader/>\r\n                : <>\r\n                    <Grid item xs={4}>\r\n                        <label className={classes.label}  htmlFor=\"contained-button-file\">\r\n                            <Avatar\r\n                                className={classes.avatar}\r\n                                style={{height: '300px', width: '300px', margin: '0 auto'}}\r\n                                src={user.photos.large}\r\n                                variant=\"circular\"\r\n                            />\r\n                        </label>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            onChange={onImageChange}\r\n                            className={classes.avatarInput}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            name=\"image\"\r\n                            type=\"file\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        className={s.profile__info}\r\n                        item xs>\r\n                        {checkIsOwner() &&\r\n                        <Button\r\n                            onClick={toogleMode}\r\n                            variant=\"outlined\"\r\n                            className={s.profile__edit}\r\n                        >\r\n                            {editMode\r\n                                ? 'Назад'\r\n                                : 'Редактировать профиль'\r\n                            }\r\n\r\n                        </Button> }\r\n                        {\r\n                            isUpdateProfile && <Preloader/>\r\n                        }\r\n                        {\r\n                            !editMode && <ProfileView user={user}/>\r\n                        }\r\n                        {\r\n                            editMode && <ProfileEdit\r\n                                user={user}\r\n                                toogleMode={toogleMode}\r\n                                updateUserInfo={updateUserInfo}\r\n                            />\r\n                        }\r\n\r\n                    </Grid>\r\n                </>}\r\n        </Grid>\r\n    )\r\n}\r\nexport default withRouter(Profile);","D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnicSceleton.jsx",[],"D:\\newprojects\\techs\\src\\components\\Profile\\ProfileEdit.jsx",[],"D:\\newprojects\\techs\\src\\components\\Profile\\ProfileView.jsx",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\index.js",[],"D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\index.js",[],"D:\\newprojects\\techs\\src\\components\\MiniCardTechnic\\MiniCardTechnic.jsx",["358","359","360"],"// import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {\r\n        Button,\r\n    Chip,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText, Tooltip\r\n} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Icon from \"../Icon\";\r\nimport images from \"../global/images\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n// const useStyles = makeStyles((theme) => ({}))\r\n\r\nconst MiniCardTechnic = ({el, keys}) => {\r\n\r\n    // const classes = useStyles();\r\n    return (\r\n        <ListItem component={Link} key={el} to={`/technics/${el.id}`} button>\r\n\r\n            <ListItemIcon>\r\n                <Avatar variant={\"square\"} src={images[el.name]}></Avatar>\r\n                {/*<Icon type={el.type} />*/}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={`[${!el.invent ?\r\n                    <Button color=\"secondary\">Заполнить</Button> : el.invent}] - ${el.name}`}\r\n                secondary={`${el.year} ${el.user}`}\r\n            />\r\n            <ListItemSecondaryAction style={{display: \"flex\"}}>\r\n                {Object.keys(keys).map(key => {\r\n                    if (!el[keys[key].key]) {\r\n                        return <Tooltip key={key} title={keys[key].name}><span style={{\r\n                            display: \"block\",\r\n                            width: \"10px\",\r\n                            textAlign: \"center\",\r\n                            color: \"white\",\r\n                            marginRight: \"2px\",\r\n                            background: keys[key].bg\r\n                        }}>!</span></Tooltip>\r\n                    }\r\n                })}\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MiniCardTechnic","D:\\newprojects\\techs\\src\\components\\AutocompleteTextarea\\AutocompleteTextarea.jsx",["361"],"import {IconButton, TextField} from \"@material-ui/core\";\r\nimport Autocomplete, {createFilterOptions} from \"@material-ui/lab/Autocomplete\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    }\r\n}))\r\n\r\nconst filter = createFilterOptions();\r\n\r\nconst AutocompleteTextarea = ({activeTechnic, property, updateTechnic, setEditMode, getUsers, getRooms, text}) => {\r\n\r\n    const classes = useStyles()\r\n    const [array, setArray] = useState(\"\")\r\n    const [value, setValue] = useState(null)\r\n    useEffect(() => {\r\n        if (property === 'fyo') {\r\n            async function fetchUsers() {\r\n                let response = await getUsers()\r\n                return response\r\n            }\r\n\r\n            fetchUsers().then(response => setArray(response))\r\n        }\r\n        if (property === 'matfyo') {\r\n            async function fetchUsers() {\r\n                let response = await getUsers()\r\n                return response\r\n            }\r\n\r\n            fetchUsers().then(response => setArray(response))\r\n        }\r\n        if (property === 'room') {\r\n            async function fetchRooms() {\r\n                let response = await getRooms()\r\n                return response\r\n            }\r\n\r\n            fetchRooms().then(response => setArray(response))\r\n        }\r\n    }, [])\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSubmit(onSubmit)();\r\n            setArray([])\r\n        }\r\n        if (e.key === 'Escape') {\r\n            setEditMode(false)\r\n        }\r\n\r\n    }\r\n    const selectItem = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setValue({\r\n                [property]: newValue,\r\n            });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setValue({\r\n                [property]: newValue.inputValue,\r\n            });\r\n        } else {\r\n            setValue(newValue);\r\n        }\r\n    }\r\n    const {register, handleSubmit, control, reset} = useForm();\r\n    const onSubmit = (obj) => {\r\n        if (obj[property] === undefined) {\r\n            let val = {\r\n                [property]: value[property]\r\n            }\r\n            updateTechnic(activeTechnic.id, val)\r\n            setEditMode(false)\r\n            reset()\r\n        } else {\r\n            updateTechnic(activeTechnic.id, obj)\r\n            setEditMode(false)\r\n            reset()\r\n        }\r\n    }\r\n    return (\r\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\r\n            { ((property === 'date') || (property === 'year'))\r\n                ? <TextField\r\n                    id=\"date\"\r\n                    label=\"Birthday\"\r\n                    type=\"date\"\r\n                    {...register(property)}\r\n                    defaultValue=\"2017-05-24\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                : <div>\r\n                    {!array ?\r\n                        <TextField onKeyDown={handleKeyDown} defaultValue={activeTechnic[property]}\r\n                                   autoFocus={true} {...register(property)} />\r\n                        : <Controller\r\n                            name={property}\r\n                            control={control}\r\n                            render={({field}) => <Autocomplete\r\n                                filterOptions={(options, params) => {\r\n                                    const filtered = filter(options, params);\r\n                                    if (params.inputValue !== '') {\r\n                                        filtered.push({\r\n                                            inputValue: params.inputValue,\r\n                                            [property]: `Add \"${params.inputValue}\"`,\r\n                                        });\r\n                                    }\r\n                                    return filtered;\r\n                                }}\r\n                                selectOnFocus\r\n                                defaultValue={activeTechnic[property]}\r\n                                clearOnBlur\r\n                                onKeyDown={handleKeyDown}\r\n                                onChange={selectItem}\r\n                                handleHomeEndKeys\r\n                                id=\"free-solo-with-text-demo\"\r\n                                options={array}\r\n                                getOptionLabel={(option) => {\r\n                                    if (typeof option === 'string') {\r\n                                        return option;\r\n                                    }\r\n                                    if (option.inputValue) {\r\n                                        return option.inputValue;\r\n                                    }\r\n                                    return option[property];\r\n                                }}\r\n                                renderOption={(option) => option[property]}\r\n                                style={{width: 250}}\r\n                                freeSolo\r\n                                renderInput={(field) => (\r\n                                    <TextField autoFocus={true} {...field} label={text} variant=\"outlined\"/>\r\n                                )}\r\n                            />}\r\n                        />\r\n\r\n                    }\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <IconButton\r\n                    color=\"primary\" aria-label=\"upload picture\" type=\"submit\"\r\n                >\r\n                    <SaveIcon/>\r\n                </IconButton>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nexport default AutocompleteTextarea","D:\\newprojects\\techs\\src\\components\\SocialLink\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FollowList\\index.js",[],"D:\\newprojects\\techs\\src\\components\\Status\\index.js",[],"D:\\newprojects\\techs\\src\\components\\FollowList\\FolowList.jsx",[],"D:\\newprojects\\techs\\src\\components\\SocialLink\\SocialLink.jsx",[],"D:\\newprojects\\techs\\src\\components\\Status\\Status.jsx",[],"D:\\newprojects\\techs\\src\\components\\global\\groupArray.js",[],"D:\\newprojects\\techs\\src\\components\\global\\formatDate.js",[],"D:\\newprojects\\techs\\src\\components\\global\\images.js",[],"D:\\newprojects\\techs\\src\\pages\\RoomPage\\index.js",[],"D:\\newprojects\\techs\\src\\pages\\RoomPage\\RoomPage.jsx",["362","363","364"],{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","severity":1,"message":"370","line":14,"column":7,"nodeType":"371","endLine":14,"endColumn":9,"suggestions":"372"},{"ruleId":"373","severity":1,"message":"374","line":1,"column":32,"nodeType":"375","messageId":"376","endLine":1,"endColumn":43},{"ruleId":"373","severity":1,"message":"377","line":1,"column":45,"nodeType":"375","messageId":"376","endLine":1,"endColumn":55},{"ruleId":"373","severity":1,"message":"378","line":13,"column":8,"nodeType":"375","messageId":"376","endLine":13,"endColumn":19},{"ruleId":"369","severity":1,"message":"379","line":95,"column":8,"nodeType":"371","endLine":95,"endColumn":21,"suggestions":"380"},{"ruleId":"369","severity":1,"message":"381","line":27,"column":8,"nodeType":"371","endLine":27,"endColumn":20,"suggestions":"382"},{"ruleId":"369","severity":1,"message":"383","line":101,"column":8,"nodeType":"371","endLine":101,"endColumn":10,"suggestions":"384"},{"ruleId":"373","severity":1,"message":"385","line":102,"column":37,"nodeType":"375","messageId":"376","endLine":102,"endColumn":42},{"ruleId":"373","severity":1,"message":"386","line":102,"column":57,"nodeType":"375","messageId":"376","endLine":102,"endColumn":63},{"ruleId":"373","severity":1,"message":"387","line":111,"column":11,"nodeType":"375","messageId":"376","endLine":111,"endColumn":19},{"ruleId":"373","severity":1,"message":"388","line":1,"column":27,"nodeType":"375","messageId":"376","endLine":1,"endColumn":35},{"ruleId":"369","severity":1,"message":"389","line":45,"column":8,"nodeType":"371","endLine":45,"endColumn":25,"suggestions":"390"},{"ruleId":"391","severity":1,"message":"392","line":71,"column":64,"nodeType":"393","messageId":"394","endLine":71,"endColumn":66},{"ruleId":"369","severity":1,"message":"370","line":43,"column":8,"nodeType":"371","endLine":43,"endColumn":10,"suggestions":"395"},{"ruleId":"373","severity":1,"message":"396","line":13,"column":14,"nodeType":"375","messageId":"376","endLine":13,"endColumn":22},{"ruleId":"397","severity":1,"message":"398","line":22,"column":26,"nodeType":"399","messageId":"400","endLine":22,"endColumn":28},{"ruleId":"365","replacedBy":"401"},{"ruleId":"367","replacedBy":"402"},{"ruleId":"373","severity":1,"message":"403","line":6,"column":11,"nodeType":"375","messageId":"376","endLine":6,"endColumn":17},{"ruleId":"369","severity":1,"message":"404","line":29,"column":8,"nodeType":"371","endLine":29,"endColumn":20,"suggestions":"405"},{"ruleId":"373","severity":1,"message":"406","line":2,"column":8,"nodeType":"375","messageId":"376","endLine":2,"endColumn":14},{"ruleId":"373","severity":1,"message":"407","line":5,"column":8,"nodeType":"375","messageId":"376","endLine":5,"endColumn":13},{"ruleId":"373","severity":1,"message":"408","line":52,"column":18,"nodeType":"375","messageId":"376","endLine":52,"endColumn":27},{"ruleId":"373","severity":1,"message":"409","line":4,"column":5,"nodeType":"375","messageId":"376","endLine":4,"endColumn":9},{"ruleId":"373","severity":1,"message":"410","line":12,"column":8,"nodeType":"375","messageId":"376","endLine":12,"endColumn":12},{"ruleId":"391","severity":1,"message":"411","line":34,"column":44,"nodeType":"393","messageId":"394","endLine":34,"endColumn":46},{"ruleId":"369","severity":1,"message":"412","line":46,"column":8,"nodeType":"371","endLine":46,"endColumn":10,"suggestions":"413"},{"ruleId":"373","severity":1,"message":"414","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":11},{"ruleId":"369","severity":1,"message":"415","line":16,"column":8,"nodeType":"371","endLine":16,"endColumn":10,"suggestions":"416"},{"ruleId":"391","severity":1,"message":"411","line":31,"column":71,"nodeType":"393","messageId":"394","endLine":31,"endColumn":73},"no-native-reassign",["417"],"no-negated-in-lhs",["418"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTypes'. Either include it or remove the dependency array. If 'getTypes' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["419"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'queryString' is defined but never used.","React Hook useEffect has a missing dependency: 'getActiveType'. Either include it or remove the dependency array. If 'getActiveType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["420"],"React Hook useEffect has missing dependencies: 'currentPage', 'getUsers', and 'rowsPerPage'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["421"],"React Hook useEffect has missing dependencies: 'getComments', 'getTechnicInfo', and 'params.id'. Either include them or remove the dependency array. If 'getTechnicInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["422"],"'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'addImage' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getStatistic' and 'val'. Either include them or remove the dependency array. If 'getStatistic' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["423"],"array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["424"],"'property' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["417"],["418"],"'regexp' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'generateUrl' and 'history'. Either include them or remove the dependency array.",["425"],"'Avatar' is defined but never used.","'icons' is defined but never used.","'setUserId' is assigned a value but never used.","'Chip' is defined but never used.","'Icon' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'getRooms', 'getUsers', and 'property'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["426"],"'Box' is defined but never used.","React Hook useEffect has missing dependencies: 'getTechnicsByRoom' and 'room'. Either include them or remove the dependency array. If 'getTechnicsByRoom' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["427"],"no-global-assign","no-unsafe-negation",{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"428","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},"Update the dependencies array to be: [getTypes]",{"range":"445","text":"446"},"Update the dependencies array to be: [getActiveType, params.type]",{"range":"447","text":"448"},"Update the dependencies array to be: [currentPage, getUsers, rowsPerPage, sectionUrl]",{"range":"449","text":"450"},"Update the dependencies array to be: [getComments, getTechnicInfo, params.id]",{"range":"451","text":"452"},"Update the dependencies array to be: [value, technics, getStatistic, val]",{"range":"453","text":"454"},{"range":"455","text":"446"},"Update the dependencies array to be: [categories, generateUrl, history]",{"range":"456","text":"457"},"Update the dependencies array to be: [getRooms, getUsers, property]",{"range":"458","text":"459"},"Update the dependencies array to be: [getTechnicsByRoom, room]",{"range":"460","text":"461"},[438,440],"[getTypes]",[2826,2839],"[getActiveType, params.type]",[935,947],"[currentPage, getUsers, rowsPerPage, sectionUrl]",[2693,2695],"[getComments, getTechnicInfo, params.id]",[1346,1363],"[value, technics, getStatistic, val]",[1199,1201],[1138,1150],"[categories, generateUrl, history]",[1517,1519],"[getRooms, getUsers, property]",[774,776],"[getTechnicsByRoom, room]"]
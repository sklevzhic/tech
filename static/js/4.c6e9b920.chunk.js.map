{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/CurrentInfo.jsx","components/Profile/ProfileInfo.jsx","components/Profile/Posts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","CurrentInfo","statusGlobalState","updateStatus","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onChange","e","currentTarget","value","onBlur","type","defaultValue","onDoubleClick","className","ProfileInfo","user","photos","large","small","src","alt","fullName","aboutMe","avatar","Posts","memo","postElements","posts","map","el","imgPost","text","likecount","dislikeCount","id","Profile","ProfileWrapper","uId","match","params","userId","getUserInfo","getStatus","prevProps","prevState","snapshot","compose","profilePage","withRouter"],"mappings":"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","file":"static/js/4.c6e9b920.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    }\r\n)\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to=\"/login\"/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedwithAuthRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return connectedwithAuthRedirect\r\n}","import React, {useEffect, useState} from \"react\";\r\n\r\nconst CurrentInfo = ({statusGlobalState, updateStatus}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(statusGlobalState);\r\n    useEffect(() => {\r\n        setStatus(statusGlobalState)\r\n    }, [statusGlobalState]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n    }\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n        updateStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                editMode\r\n                    ? <input\r\n                        autoFocus={true}\r\n                        onChange={onChangeStatus}\r\n                        onBlur={deactivateMode}\r\n                        type=\"text\"\r\n                        defaultValue={status}/>\r\n                    : <span onDoubleClick={activateMode}\r\n                            className=\"card-subtitle\">{statusGlobalState || \"статуса нет\"} </span>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CurrentInfo","import {Link} from 'react-router-dom'\r\nimport CurrentInfo from \"./CurrentInfo\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div className=\"row\">\r\n            {\r\n                (props.user === '')\r\n                    ? <p>Загрузка</p>\r\n                    : <div>\r\n                        <div className=\"col s4\">\r\n                            {\r\n                                ((props.user.photos.large === null) || (props.user.photos.small === null))\r\n                                    ? <img src=\"https://cropas.by/wp-content/uploads/2015/05/admin.jpg\" alt=\"1\"/>\r\n                                    : <img src={props.user.photos.large} alt=\"2\"/>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col s8\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-content\">\r\n                                    <span className=\"card-title\">{props.user.fullName} </span>\r\n                                    <CurrentInfo statusGlobalState={props.status} updateStatus={props.updateStatus}/>\r\n                                    <div className=\"card-action\">\r\n                                        <button className=\"waves-effect waves-light btn\"><i\r\n                                            className=\"material-icons left\">cloud</i>0 публикаций\r\n                                        </button>\r\n                                        <button className=\"waves-effect waves-light btn\"><i\r\n                                            className=\"material-icons left\">cloud</i>0 подписчиков\r\n                                        </button>\r\n                                        <button className=\"waves-effect waves-light btn\"><i\r\n                                            className=\"material-icons left\">cloud</i>0 подписок\r\n                                        </button>\r\n                                    </div>\r\n                                    <h5>{props.user.aboutMe} </h5>\r\n                                    <p>{props.user.avatar}</p>\r\n\r\n                                    <Link to='/addpost' className=\"btn-floating btn-large waves-effect waves-light red\"><i\r\n                                        className=\"material-icons\">add</i></Link>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\n\r\nconst Posts = React.memo((props) =>  {\r\n    let postElements = props.posts.map((el) => {\r\n        return (\r\n            <div key={el.id} className=\"col s4\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-image waves-effect waves-block waves-light\">\r\n                        <img src={el.imgPost} alt={el.text}/>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                    <span className=\"card-title activator grey-text text-darken-1\">{el.text}\r\n                        <i className=\"material-icons right\">more_vert</i>\r\n                    </span>\r\n                        <p>\r\n                            <button className=\"waves-effect waves-light btn-small\"><i\r\n                                className=\"material-icons left\">sentiment_very_satisfied</i>{el.likecount}</button>\r\n                            <button className=\"waves-effect btn-small\"><i\r\n                                className=\"material-icons left\">sentiment_very_dissatisfied</i>{el.dislikeCount}\r\n                            </button>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-reveal\">\r\n                                        <span className=\"card-title grey-text text-darken-4\">{el.text}<i\r\n                                            className=\"material-icons right\">close</i></span>\r\n                        <p>Here is some more information about this product that is only revealed once clicked\r\n                            on.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    })\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"postsWrapper\">\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Posts","import ProfileInfo from \"./ProfileInfo\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo user={props.user} status={props.status}updateStatus={props.updateStatus}/>\r\n            <Posts posts={props.posts} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getStatus, getUserInfo, updateStatus} from \"../../redux/Profile-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileWrapper extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let uId = this.props.match.params.userId;\r\n        if (!uId) {\r\n            uId = this.props.id\r\n        }\r\n        this.props.getUserInfo(uId)\r\n        this.props.getStatus(uId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let uId = this.props.match.params.userId;\r\n        if (!uId) {\r\n            uId = this.props.id\r\n        }\r\n        this.props.getUserInfo(uId)\r\n        this.props.getStatus(uId)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile user={this.props.user} posts={this.props.posts} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        user: state.profilePage.user,\r\n        status: state.profilePage.status,\r\n        id: state.auth.id\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserInfo, getStatus, updateStatus}),\r\n    // withAuthRedirect,\r\n    withRouter\r\n)(ProfileWrapper)"],"sourceRoot":""}
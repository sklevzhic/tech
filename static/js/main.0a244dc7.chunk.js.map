{"version":3,"sources":["components/Common/Preloader.module.css","components/Main/Users/Users.module.css","components/Common/TextError.module.css","components/Main/Messenger/Messenger.module.css","reportWebVitals.js","components/Main/Profile/CurrentInfo.jsx","components/Main/Profile/ProfileInfo.jsx","components/Main/Profile/Posts.jsx","components/Main/Profile/Profile.jsx","api/api.js","redux/Profile-reducer.js","hoc/withAuthRedirect.jsx","components/Main/Profile/ProfileContainer.jsx","components/Main/Profile/NewPost.jsx","components/Main/Profile/NewPostContainer.jsx","redux/Dialogs-reducer.js","redux/Users-reducer.js","redux/Auth-reducer.js","redux/App-reducer.js","redux/redux-store.js","components/Main/Messenger/Dialogs/Dialogs.jsx","components/Main/Messenger/Messages/AddNewMessage.jsx","components/Main/Messenger/Messages/AddNewMessageContainer.jsx","components/Main/Messenger/Messages/MessagesList.jsx","components/Main/Messenger/Messages/MessagesListContainer.jsx","components/Main/Messenger/Messages/Messages.jsx","components/Main/Messenger/Messenger.jsx","components/Common/Preloader.jsx","components/Main/Users/Users.jsx","redux/users-selectors.js","components/Main/Users/UsersContainer.jsx","components/Header/Navigation/Navigation.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Common/TextError.jsx","components/Main/Auth/Login.jsx","components/Main/Auth/LoginContainer.jsx","App.js","index.js","components/Header/Navigation/Navigation.module.css","components/Header/Header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CurrentInfo","props","useState","editMode","setEditMode","status","setStatus","autoFocus","onChange","e","currentTarget","value","onBlur","type","defaultValue","onDoubleClick","className","ProfileInfo","user","photos","large","small","src","alt","fullName","updateStatus","aboutMe","avatar","to","Posts","postElements","id","imgPost","text","map","el","likecount","dislikeCount","Profile","instance","axios","create","withCredentials","baseURL","headers","usersAPI","rowsPerPage","currentPage","get","responce","data","console","log","profileAPI","getUserInfo","post","delete","getStatus","put","authAPI","email","password","rememberMe","ADD_NEW_POST","CHANGE_NEW_POST","SET_USER","SET_STATUS","UPDATE_STATUS","initialState","posts","newPostText","ProfileReducer","state","action","newPost","Date","now","toString","copyState","unshift","newText","mapStateToPropsForRedirect","isAuth","auth","ProfileWrapper","uId","this","match","params","userId","React","Component","compose","connect","profile","profilePage","dispatch","resultCode","withRouter","NewPost","updatePost","target","htmlFor","name","onClick","addPost","NewPostContainer","updatePostActionCreator","ADD_NEW_MESSAGE","CHANGE_NEW_MESSAGE","dialogs","messages","msg","imgsrc","newMessageText","DialogsReducer","newMessage","FOLLOW","SET_USERS","SELECT_PAGE","TOGGLE_PRELOADER","GET_TOTAL_USERS","TOOGLE_FOLLOWING_IN_PROGRESS","IS_AUTH","users","totalUsers","isFetching","followingInProgress","togglePreloader","toggleFollowingInProgress","userID","UsersReducer","u","followed","items","totalCount","body","page","filter","SET_USER_DATA","login","setUserData","getAuthUserData","AuthReducer","INITIALIZED_SUCCESS","initialized","AppReducer","redusers","combineReducers","dialogsPage","usersPage","app","store","createStore","applyMiddleware","thunkMiddleware","dialogsElements","getState","Dialogs","s","dialogsList","AddNewMessage","onChangeNewMessage","addNewMessage","AddNewMessageContainer","updateMessageActionCreator","MessagesList","messagesElements","messageItem","messageText","MessagesListContainer","Messages","Messenger","dialogsWrapper","Preloader","bgpreloader","Users","usersElements","disabled","some","unfollow","follow","countPages","Math","ceil","pages","i","push","paginationElements","onSelectPage","href","pagination1","getUsers","createSelector","UsersWrapper","componentDidMount","getUsersThunkCreator","selectPage","response","getTotalUsers","followSuccess","unfollowSuccess","RedirectComponent","Navigation","nav","logaut","show","none","Header","header","logo","placeholder","AuthWrapper","HeaderContainer","TextError","error","children","Login","validationSchema","yup","required","min","initialValues","toggle","address","onSubmit","values","component","LoginContainer","App","initialize","initializeApp","path","render","ProfileContainer","UsersContainer","promise","Promise","all","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0a244dc7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgpreloader\":\"Preloader_bgpreloader__3kkjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination1\":\"Users_pagination1__UECU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__1T1lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Messenger_dialogsWrapper__Gt2ee\",\"dialogsList\":\"Messenger_dialogsList__3v3pB\",\"messages\":\"Messenger_messages__1bx9b\",\"messageItem\":\"Messenger_messageItem__120c7\",\"messageText\":\"Messenger_messageText__gcY5X\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from \"react\";\r\n\r\nconst CurrentInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] =useState(false);\r\n    let [status, setStatus] =useState(props.status);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n            <>\r\n                {\r\n                    editMode\r\n                        ? <input\r\n                            autoFocus={true}\r\n                            onChange={onChangeStatus}\r\n                            onBlur={deactivateMode}\r\n                            type=\"text\"\r\n                            defaultValue={status}/>\r\n                        : <span onDoubleClick={activateMode}\r\n                                className=\"card-subtitle\">{editMode || \"статуса нет\"} </span>\r\n                }\r\n\r\n            </>\r\n    )\r\n}\r\n// class CurrentInfo extends React.Component {\r\n//     state = {\r\n//         editMode: false,\r\n//         status: this.props.status\r\n//     }\r\n//     editStatus = () => {\r\n//         this.setState({\r\n//             editMode: !this.state.editMode\r\n//         })\r\n//         this.props.updateStatus(this.state.status)\r\n//     }\r\n//\r\n//     onChangeStatus = (e) => {\r\n//         this.setState({\r\n//             status: e.currentTarget.value\r\n//         })\r\n//     }\r\n//\r\n//     componentDidUpdate(prevProps, prevState, snapshot) {\r\n//         if (prevProps.status !== this.props.status) {\r\n//             this.setState({\r\n//                 status: this.props.status\r\n//             })\r\n//         }\r\n//     }\r\n//\r\n//     render() {\r\n//         return (\r\n//             <>\r\n//                 {\r\n//                     this.state.editMode\r\n//                         ? <input\r\n//                             autoFocus={true}\r\n//                             onChange={this.onChangeStatus}\r\n//                             onBlur={this.editStatus}\r\n//                             type=\"text\"\r\n//                             defaultValue={this.state.status}/>\r\n//                         : <span onDoubleClick={this.editStatus}\r\n//                                 className=\"card-subtitle\">{this.props.status || \"статуса нет\"} </span>\r\n//                 }\r\n//\r\n//             </>\r\n//         )\r\n//     }\r\n//\r\n// }\r\n\r\nexport default CurrentInfo","import {Link} from 'react-router-dom'\r\nimport CurrentInfo from \"./CurrentInfo\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div className=\"row\">\r\n            {\r\n                (props.user === '')\r\n                    ? <p>Загрузка</p>\r\n                    : <div>\r\n                        <div className=\"col s4\">\r\n                            {\r\n                                ((props.user.photos.large === null) || (props.user.photos.small === null))\r\n                                    ? <img src=\"https://cropas.by/wp-content/uploads/2015/05/admin.jpg\" alt=\"1\"/>\r\n                                    : <img src={props.user.photos.large} alt=\"2\"/>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col s8\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-content\">\r\n                                    <span className=\"card-title\">{props.user.fullName} </span>\r\n                                    <CurrentInfo status={props.status} updateStatus={props.updateStatus}/>\r\n                                    <div className=\"card-action\">\r\n                                        <button className=\"waves-effect waves-light btn\"><i\r\n                                            className=\"material-icons left\">cloud</i>0 публикаций\r\n                                        </button>\r\n                                        <button className=\"waves-effect waves-light btn\"><i\r\n                                            className=\"material-icons left\">cloud</i>0 подписчиков\r\n                                        </button>\r\n                                        <button className=\"waves-effect waves-light btn\"><i\r\n                                            className=\"material-icons left\">cloud</i>0 подписок\r\n                                        </button>\r\n                                    </div>\r\n                                    <h5>{props.user.aboutMe} </h5>\r\n                                    <p>{props.user.avatar}</p>\r\n\r\n                                    <Link to='/addpost' className=\"btn-floating btn-large waves-effect waves-light red\"><i\r\n                                        className=\"material-icons\">add</i></Link>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\n\r\nconst Posts = ( props ) => {\r\n    let arr = [\r\n        {\r\n            id: 'Name',\r\n            imgPost: 'imgPost',\r\n            text: 'text',\r\n        }\r\n    ]\r\n    let postElements = arr.map((el) => {\r\n        return (\r\n            <div key={el.id} className=\"col s4\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-image waves-effect waves-block waves-light\">\r\n                        <img src={el.imgPost} alt={el.text}/>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                    <span className=\"card-title activator grey-text text-darken-1\">{el.text}\r\n                        <i className=\"material-icons right\">more_vert</i>\r\n                    </span>\r\n                        <p>\r\n                            <button className=\"waves-effect waves-light btn-small\"><i className=\"material-icons left\">sentiment_very_satisfied</i>{el.likecount}</button>\r\n                            <button className=\"waves-effect btn-small\"><i className=\"material-icons left\">sentiment_very_dissatisfied</i>{el.dislikeCount}</button>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"card-reveal\">\r\n                                        <span className=\"card-title grey-text text-darken-4\">{el.text}<i\r\n                                            className=\"material-icons right\">close</i></span>\r\n                        <p>Here is some more information about this product that is only revealed once clicked\r\n                            on.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    })\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"postsWrapper\">\r\n                { postElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Posts","import ProfileInfo from \"./ProfileInfo\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo user={props.user} status={props.status} updateStatus={props.updateStatus}/>\r\n            <Posts/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile","import axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"69bc9857-b17c-4142-859f-4409d84efd2a\"\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(rowsPerPage, currentPage) {\r\n        return instance.get(`/users?page=${currentPage}&count=${rowsPerPage}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    getUserInfo(id) {\r\n        console.log('invalid')\r\n        return profileAPI.getUserInfo(id)\r\n    },\r\n    following(id) {\r\n        return instance.post(`/follow/${id}`)\r\n    },\r\n    unfollowing (id) {\r\n        return instance.delete(`/follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserInfo(id) {\r\n        return instance.get(`/profile/${id}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`/profile/status/${id}`)\r\n            .then(responce => responce)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', status)\r\n            .then(responce => responce.data);\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`).then(responce => responce.data)\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return  instance.post(`/auth/login`, {email, password, rememberMe}).then(responce => responce.data)\r\n    },\r\n    logout() {\r\n        return  instance.post(`/auth/logout`).then(responce => responce.data)\r\n    }\r\n}\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_NEW_POST = 'ADD-NEW-POST';\r\nconst CHANGE_NEW_POST = 'CHANGE-NEW-POST';\r\nconst SET_USER = 'SET_USER';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst UPDATE_STATUS = 'UPDATE_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n\r\n    ],\r\n    user: \"\",\r\n    status: \"\",\r\n    newPostText: \"\",\r\n}\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST: {\r\n            let newPost = {\r\n                text: state.newPostText,\r\n                id: Date.now().toString(),\r\n                likecount: 0,\r\n                dislikeCount: 0,\r\n                imgPost: \"https://shum.minsk.by/wp-content/uploads/2019/04/%D0%B1%D0%B0%D1%80weg.jpg\"\r\n            }\r\n            let copyState = {...state}\r\n            copyState.posts = [...copyState.posts]\r\n            copyState.posts.unshift(newPost);\r\n            return copyState\r\n        }\r\n        case CHANGE_NEW_POST: {\r\n            let copyState = {...state}\r\n            copyState.newPostText = action.newText;\r\n            return copyState\r\n        }\r\n        case SET_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case UPDATE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = () => {\r\n    return {type: ADD_NEW_POST}\r\n};\r\nexport const updatePostActionCreator = (text) => {\r\n    return {type: CHANGE_NEW_POST, newText: text }\r\n};\r\nexport const setUser = (user) => {\r\n    return {type: SET_USER, user}\r\n}\r\nexport const setStatus = (status) => {\r\n    return {type: SET_STATUS, status}\r\n}\r\n\r\nexport const getUserInfo = (userId) => (dispatch) => {\r\n    usersAPI.getUserInfo(userId)\r\n        .then(responce => {\r\n            dispatch(setUser(responce))\r\n        })\r\n    }\r\nexport const getStatus = (id) => (dispatch) => {\r\n    profileAPI.getStatus(id)\r\n        .then(responce => {\r\n            if (responce.status === 200) {\r\n                dispatch(setStatus(responce.data))\r\n            }\r\n        })\r\n}\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus({status: status})\r\n        .then(responce => {\r\n            if (responce.resultCode === 0) {\r\n                dispatch(setStatus(responce.data.status))\r\n            }\r\n        })\r\n\r\n}\r\nexport default ProfileReducer","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    }\r\n)\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Redirect to=\"/login\"/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedwithAuthRedirect = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return connectedwithAuthRedirect\r\n}","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getStatus, getUserInfo, updateStatus} from \"../../../redux/Profile-reducer\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileWrapper extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let uId = this.props.match.params.userId;\r\n        if (!uId) {\r\n            uId = this.props.id\r\n        }\r\n        this.props.getUserInfo(uId)\r\n        this.props.getStatus(uId)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile user={this.props.user} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.posts,\r\n        user: state.profilePage.user,\r\n        status: state.profilePage.status,\r\n        id: state.auth.id\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserInfo, getStatus, updateStatus}),\r\n    // withAuthRedirect,\r\n    withRouter\r\n)(ProfileWrapper)","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n    const NewPost = (props) => {\r\n\r\n        const  addPost = () => {\r\n            props.addPost()\r\n        }\r\n\r\n        const updatePost = (e) => {\r\n            props.updatePost(e.target.value)\r\n        }\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"row\">\r\n                <Link\r\n                    to='/profile'\r\n                    className=\"btn-floating btn-large waves-effect waves-light red\">\r\n                    <i className=\"material-icons\">arrow_back</i>\r\n                </Link>\r\n            </div>\r\n            <div className=\"row\">\r\n                <form className=\"col s12\">\r\n\r\n                    <div className=\"input-field\">\r\n                        <i className=\"material-icons prefix\">account_circle</i>\r\n                        <textarea\r\n                            id=\"textarea1\"\r\n                            className=\"materialize-textarea\"\r\n                            onChange={ updatePost }\r\n                        > </textarea>\r\n                        <label htmlFor=\"textarea1\" className='active'>Textarea</label>\r\n\r\n\r\n                        <Link to='/profile'\r\n                            className=\"btn waves-effect waves-light\"\r\n                            type=\"submit\"\r\n                            name=\"action\"\r\n                            onClick={ addPost }\r\n                        >Опубликовать\r\n                            <i className=\"material-icons right\">send</i>\r\n                        </Link>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NewPost","import {addPostActionCreator, updatePostActionCreator} from \"../../../redux/Profile-reducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updatePost: (text) => {\r\n\r\n            dispatch(updatePostActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst NewPostContainer = connect (mapStateToProps, mapDispatchToProps)(NewPost)\r\nexport default NewPostContainer","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\nconst CHANGE_NEW_MESSAGE = 'CHANGE-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {name: \"Alexander\", id: 1},\r\n        {name: \"Alexander1\", id: 2},\r\n        {name: \"Alexander2\", id: 3},\r\n        {name: \"Alexander3\", id: 4},\r\n        {name: \"Alexander5\", id: 5},\r\n        {name: \"Alexander6\", id: 6},\r\n        {name: \"Alexander7\", id: 7},\r\n        {name: \"Alexander8\", id: 8},\r\n    ],\r\n    messages: [\r\n        {\r\n            msg: \"1This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 1,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"2This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 2,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"3This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 3,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {msg: \"it to make it appear circular.\", id: 4, imgsrc: \"https://via.placeholder.com/300\"},\r\n        {\r\n            msg: \"5This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 5,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 6,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n    ],\r\n    newMessageText: 'test text'\r\n\r\n};\r\n\r\nconst DialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE:\r\n            let newMessage = {\r\n                msg: state.newMessageText,\r\n                id: Date.now()\r\n            }\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [newMessage, ...state.messages]\r\n            }\r\n        case CHANGE_NEW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const addNewMessageActionCreator = () => {\r\n    return {type: ADD_NEW_MESSAGE}\r\n}\r\nexport const updateMessageActionCreator = (text) => {\r\n    return {type: CHANGE_NEW_MESSAGE, newText: text}\r\n}\r\n\r\nexport default DialogsReducer","import {usersAPI} from \"../api/api\";\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SELECT_PAGE = 'SELECT_PAGE';\r\nlet TOGGLE_PRELOADER = 'TOGGLE_PRELOADER';\r\nlet GET_TOTAL_USERS = 'GET_TOTAL_USERS';\r\nlet TOOGLE_FOLLOWING_IN_PROGRESS = 'TOOGLE_FOLLOWING_IN_PROGRESS'\r\nlet IS_AUTH = 'IS_AUTH'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    rowsPerPage: 10,\r\n    currentPage: 1,\r\n    totalUsers: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users.items],\r\n                totalUsers: action.users.totalCount\r\n            }\r\n        }\r\n        case IS_AUTH: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.body\r\n            }\r\n        }\r\n        case SELECT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.page + 1\r\n            }\r\n\r\n        }\r\n        case GET_TOTAL_USERS: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n\r\n        }\r\n        case TOGGLE_PRELOADER: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        }\r\n        case TOOGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching\r\n                    ? [...state.followingInProgress, action.isFetching]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n// Подписка\r\nexport const followSuccess = (id) => {\r\n    return {type: FOLLOW, id: id}\r\n}\r\nexport const isAuth = (body) => {\r\n    return {type: FOLLOW, body: body}\r\n}\r\nexport const unfollowSuccess = (id) => {\r\n    return {type: FOLLOW, id: id}\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type: SET_USERS, users}\r\n}\r\nexport const selectPage = (page) => {\r\n    return {type: SELECT_PAGE, page}\r\n}\r\nexport const getTotalUsers = (totalUsers) => {\r\n    return {type: GET_TOTAL_USERS, totalUsers}\r\n}\r\nexport const togglePreloader = (isFetching) => {\r\n    return {type: TOGGLE_PRELOADER, isFetching}\r\n}\r\n\r\nexport const toggleFollowingInProgress = (isFetching, userID) => {\r\n    return {type: TOOGLE_FOLLOWING_IN_PROGRESS, isFetching, userID}\r\n}\r\n\r\nexport const getUsersThunkCreator = (rowsPerPage, currentPage) => {\r\n    return (dispatch) => {\r\n        dispatch(togglePreloader(true))\r\n        usersAPI.getUsers(rowsPerPage, currentPage)\r\n            .then(response => {\r\n                dispatch(setUsers(response))\r\n                dispatch(togglePreloader(false))\r\n            })\r\n    }\r\n}\r\nexport const follow = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, id))\r\n        usersAPI.following(id)\r\n            .then(responce => {\r\n                dispatch(toggleFollowingInProgress(false, id))\r\n                dispatch(followSuccess(id))\r\n\r\n            })\r\n\r\n    }\r\n}\r\nexport const unfollow = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, id))\r\n        usersAPI.unfollowing(id)\r\n            .then(responce => {\r\n                dispatch(toggleFollowingInProgress(false, id))\r\n                dispatch(unfollowSuccess(id))\r\n            })\r\n    }\r\n}\r\n\r\nexport default UsersReducer","import {authAPI} from \"../api/api\";\r\nimport {isAuth} from \"./Users-reducer\";\r\n\r\nlet SET_USER_DATA = 'SET_USER_DATA'\r\nlet initialState = {\r\n    login: null,\r\n    id: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst AuthReducer = ( state = initialState, action) => {\r\n        switch (action.type) {\r\n            case SET_USER_DATA: {\r\n                return {\r\n                    ...state,\r\n                    login: action.login,\r\n                    id: action.id,\r\n                    email: action.email,\r\n                    isAuth: action.isAuth\r\n                }\r\n            }\r\n            default :\r\n                return state\r\n        }\r\n}\r\n\r\nexport const setUserData = (login, id, email, isAuth) => {\r\n    return {type: SET_USER_DATA, login, id, email, isAuth}\r\n}\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me().then(responce => {\r\n        if (responce.resultCode === 0) {\r\n            dispatch(setUserData(responce.data.login, responce.data.id, responce.data.email, true))\r\n        }\r\n    })\r\n}\r\n\r\nexport const login = (data) => (dispatch) => {\r\n    authAPI.login(data.email,data.password, data.toggle).then(responce => {\r\n        if (responce.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        }\r\n    })\r\n}\r\nexport const logaut = (data) => (dispatch) => {\r\n    authAPI.logout().then(responce => {\r\n        if (responce.resultCode === 0) {\r\n            dispatch(setUserData(null,null,null,false))\r\n        }\r\n    })\r\n}\r\n\r\nexport default AuthReducer","import {getAuthUserData} from \"./Auth-reducer\";\r\n\r\nlet INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst AppReducer = ( state = initialState, action) => {\r\n        switch (action.type) {\r\n            case INITIALIZED_SUCCESS: {\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default :\r\n                return state\r\n        }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {type: INITIALIZED_SUCCESS}\r\n}\r\nexport const initialize = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(()=> {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\nexport default AppReducer","import DialogsReducer from \"./Dialogs-reducer\";\r\nimport ProfileReducer from \"./Profile-reducer\";\r\nimport UsersReducer from \"./Users-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport AuthReducer from \"./Auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport AppReducer from \"./App-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n    dialogsPage: DialogsReducer,\r\n    profilePage: ProfileReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n    app: AppReducer\r\n})\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import {Link} from \"react-router-dom\";\r\nimport s from \"../Messenger.module.css\";\r\nimport React from \"react\";\r\nimport store from \"../../../../redux/redux-store\";\r\n\r\nlet dialogsElements = store.getState().dialogsPage.dialogs.map(el => {\r\n    return <Link key={el.id} to={`/dialogs/${el.id}`} className=\"collection-item\"><span\r\n        className=\"badge\">1</span>{el.name}</Link>\r\n})\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n        <div className={'collection ' + s.dialogsList}>\r\n            {dialogsElements}\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs","import React from \"react\";\r\n\r\nconst AddNewMessage = (props) => {\r\n\r\n    let onChangeNewMessage = (e) => {\r\n        props.onChangeNewMessage(e.target.value)\r\n    }\r\n    let addNewMessage = () => {\r\n            props.addNewMessage();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <textarea\r\n                className=\"materialize-textarea\"\r\n                value={props.newMessageText}\r\n                onChange={ onChangeNewMessage }\r\n            />\r\n            <button onClick={ addNewMessage }>></button>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default AddNewMessage","import {addNewMessageActionCreator, updateMessageActionCreator} from \"../../../../redux/Dialogs-reducer\";\r\nimport AddNewMessage from \"./AddNewMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: () => {\r\n            dispatch(addNewMessageActionCreator())\r\n        },\r\n        onChangeNewMessage: (text) => {\r\n            dispatch(updateMessageActionCreator(text))\r\n        }\r\n}\r\n}\r\n\r\nconst AddNewMessageContainer = connect(mapStateToProps, mapDispatchToProps)(AddNewMessage)\r\n\r\nexport default AddNewMessageContainer;","import s from \"../Messenger.module.css\";\r\n\r\n\r\nconst MessagesList = (props) => {\r\n    let messagesElements = props.messages.map(el => {\r\n        return <div key={el.id} className={s.messageItem}>\r\n            <button className=\"btn-floating btn-large waves-effect waves-light red\">АК</button>\r\n            <p className={s.messageText}>{el.msg}</p>\r\n        </div>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {messagesElements}\r\n        </div>\r\n    )\r\n}\r\nexport default MessagesList","import {connect} from \"react-redux\";\r\nimport MessagesList from \"./MessagesList\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst MessagesListContainer = connect(mapStateToProps, mapDispatchToProps)(MessagesList)\r\n\r\nexport default MessagesListContainer;","import s from \"../Messenger.module.css\";\r\nimport React from \"react\";\r\nimport AddNewMessageContainer from \"./AddNewMessageContainer\";\r\nimport MessagesListContainer from \"./MessagesListContainer\";\r\n\r\n\r\nconst Messages = () => {\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className=\"col s12 m8 offset-m2 l6 offset-l3\">\r\n                <AddNewMessageContainer/>\r\n                <MessagesListContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Messages","import React from \"react\";\r\nimport s from './Messenger.module.css'\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport Messages from \"./Messages/Messages\";\r\n\r\nconst Messenger = () => {\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <Dialogs />\r\n            <Messages />\r\n        </div>\r\n    )\r\n}\r\nexport default Messenger","import s from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.bgpreloader}>\r\n            <div className=\"progress\">\r\n                <div className=\"indeterminate\"></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader","import Preloader from \"../../Common/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Users.module.css'\r\n\r\nconst Users = (props) => {\r\n    let usersElements = props.users.map(u => {\r\n        return <li key={u.id} className=\"collection-item avatar\">\r\n            <NavLink to={`/profile/${u.id}`} >\r\n                <img src={\r\n                    ((u.photos.large === null) || (u.photos.small === null))\r\n                        ? \"https://www.needava.com/wp-content/uploads/2015/08/profile-175-50x50-300x300.jpg\"\r\n                        : u.photos.small\r\n\r\n                } className=\"circle\" alt={`${u.login}`}/>\r\n            </NavLink>\r\n                    <span className=\"title\">{`${u.name}`}</span>\r\n                    {\r\n                        u.followed\r\n                            ? <button\r\n                                disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                className=\"waves-effect waves-light btn right\"\r\n                                onClick={() => props.unfollow(u.id)}\r\n                            >Отписаться</button>\r\n                            : <button\r\n                                disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                className=\"waves-effect waves-light btn right\"\r\n                                onClick={() => props.follow(u.id)}\r\n                            >Подписаться</button>\r\n                    }\r\n                </li>\r\n\r\n\r\n    })\r\n\r\n    let countPages = Math.ceil(props.totalUsers / props.rowsPerPage);\r\n    let pages = [];\r\n    for (let i=1; i<=countPages; i++) {\r\n        pages.push(i)\r\n    }\r\n    let paginationElements = pages.map(el => {\r\n        return <li\r\n            key={el}\r\n            className={ props.currentPage === el ? 'active' : 'waves-effect'}\r\n            onClick={() => props.onSelectPage(el)}\r\n        >\r\n            <a href=\"#!\">{el}</a>\r\n        </li>\r\n    })\r\n\r\n    return  (\r\n        <div>\r\n             { props.isFetching ? <Preloader /> : null }\r\n            <ul className={\"pagination \" + s.pagination1} >\r\n                {paginationElements}\r\n            </ul>\r\n\r\n            <ul className=\"collection\">\r\n                {usersElements}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst UsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(UsersSelector, (users) => {\r\n   return users.filter(u => true)\r\n})","import {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {getTotalUsers, selectPage, getUsersThunkCreator, follow, unfollow} from \"../../../redux/Users-reducer\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getUsers} from \"../../../redux/users-selectors\";\r\n\r\n\r\nclass UsersWrapper extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.getUsersThunkCreator(this.props.rowsPerPage, this.props.currentPage)\r\n\r\n    }\r\n    onSelectPage = (page) => {\r\n        this.props.selectPage(page -1)\r\n        this.props.getUsersThunkCreator(this.props.rowsPerPage, page)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Users\r\n                totalUsers={this.props.totalUsers}\r\n                rowsPerPage={this.props.rowsPerPage}\r\n                currentPage={this.props.currentPage}\r\n                isFetching={this.props.isFetching}\r\n                users={this.props.users}\r\n                onSelectPage={ this.onSelectPage }\r\n                follow= {this.props.follow}\r\n                unfollow= {this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        rowsPerPage: state.usersPage.rowsPerPage,\r\n        currentPage: state.usersPage.currentPage,\r\n        totalUsers: state.usersPage.totalUsers,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        selectPage,\r\n        getUsersThunkCreator,\r\n        getTotalUsers,\r\n        follow,\r\n        unfollow,\r\n    }),\r\n    withAuthRedirect\r\n)(UsersWrapper) ;","import s from './Navigation.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navigation = ( props ) => {\r\n\r\n    return (\r\n            <nav className={s.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Index</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/users\">Users</Link>\r\n                        </li>\r\n                    <li><Link to=\"/dialogs\">Dialogs</Link></li>\r\n                    {\r\n                        (!props.props.login)\r\n                            ? <li><Link to={`/login`}>Login</Link></li>\r\n                            : <li><Link to={`/profile/${props.props.id}` }>{props.props.login}</Link></li>\r\n\r\n                    }\r\n                    <li onClick={props.props.logaut} className={ props.props.login !== null ? s.show : s.none}><Link to=\"/login\">Log out</Link></li>\r\n                </ul>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import s from './Header.module.css'\r\nimport Navigation from \"./Navigation/Navigation\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <a className={s.logo} href='/'>\r\n                <img src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"\"/>\r\n            </a>\r\n            <div>\r\n                <input type=\"text\" placeholder=\"search\"/>\r\n            </div>\r\n            <Navigation props={props}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import Header from \"./Header\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {logaut} from \"../../redux/Auth-reducer\";\r\n\r\nclass AuthWrapper extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        id: state.auth.id,\r\n        email: state.auth.email\r\n    }\r\n}\r\n\r\nlet HeaderContainer = connect(mapStateToProps, {\r\n    logaut\r\n})(AuthWrapper)\r\n\r\n\r\n\r\nexport default HeaderContainer","import s from './TextError.module.css'\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div className={s.error}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError","import React from 'react';\r\nimport {Formik, Form, Field, ErrorMessage, useFormik} from 'formik';\r\nimport {Redirect} from \"react-router-dom\"\r\nimport * as yup from 'yup';\r\nimport {connect} from \"react-redux\";\r\nimport TextError from \"../../Common/TextError\";\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        let initialValues = {email: '', password: '', toggle: true, address: ''}\r\n\r\n        const onSubmit = values => {\r\n            this.props.login(values)\r\n        }\r\n\r\n        const validationSchema = yup.object({\r\n            email: yup\r\n                .string('Enter your email')\r\n                .email('Enter a valid email')\r\n                .required('Email is required'),\r\n            password: yup\r\n                .string('Enter your password')\r\n                .min(8, 'Password should be of minimum 8 characters length')\r\n                .required('Password is required'),\r\n        });\r\n\r\n        if (this.props.isAuth) {\r\n            return <Redirect to=\"/profile\"/>\r\n        }\r\n\r\n\r\n        return <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n                <Form>\r\n                    <Field type=\"email\" name=\"email\" placeholder=\"email\"/>\r\n                    <ErrorMessage name=\"email\" component={TextError}/>\r\n                    <Field type=\"password\" name=\"password\" placeholder=\"password\"/>\r\n                    <ErrorMessage name=\"password\" component={TextError}/>\r\n                    <Field type=\"checkbox\" name=\"toggle\"/>\r\n                    {/*<Field type=\"address\" name=\"address\">{*/}\r\n                    {/*    (props) => {*/}\r\n                    {/*        const {fields, form, meta} = props*/}\r\n                    {/*        return <input type=\"text\" {...fields}/>*/}\r\n                    {/*    }*/}\r\n                    {/*}</Field>*/}\r\n                    {/*<ErrorMessage name=\"address\" component={TextError}/>*/}\r\n\r\n                    <button type=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                </Form>\r\n        </Formik>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n\r\n","import React from 'react';\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {login} from \"../../../redux/Auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass LoginContainer extends React.Component {\r\n    render() {\r\n        return        <Login login={this.props.login}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {login}))\r\n    (LoginContainer);","import './App.css'\r\nimport ProfileContainer from \"./components/Main/Profile/ProfileContainer\";\r\nimport NewPostContainer from \"./components/Main/Profile/NewPostContainer\";\r\nimport Messenger from \"./components/Main/Messenger/Messenger\";\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport React from \"react\";\r\nimport UsersContainer from \"./components/Main/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Main/Auth/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {initialize} from \"./redux/App-reducer\";\r\nimport {compose} from \"redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport Preloader from \"./components/Common/Preloader\";\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initialize()\r\n    }\r\n    render() {\r\n        if (!this.props.initializeApp) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <HeaderContainer/>\r\n                    <Switch>\r\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                        <Route path='/dialogs' render={() => <Messenger/>}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/addpost' render={() => <NewPostContainer/>}/>\r\n                        <Route path='/login' render={() => <LoginContainer/>}/>\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initializeApp: state.app.initialized\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initialize}))\r\n    (App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from 'react-redux'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    )\r\n\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__E2tS8\",\"none\":\"Navigation_none__1ItzI\",\"show\":\"Navigation_show__nSI-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__VTLEp\",\"logo\":\"Header_logo__267T5\"};"],"sourceRoot":""}
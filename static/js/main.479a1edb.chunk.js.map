{"version":3,"sources":["components/Status/Status.module.scss","pages/SignInPage/SignInPage.module.scss","components/Common/TextError.module.css","reportWebVitals.js","components/Header/Header.css.js","components/Header/Header.jsx","api/api.js","redux/Auth-reducer.js","components/Header/index.js","components/Preloader/index.js","components/Preloader/Preloader.jsx","components/Status/Status.jsx","redux/Profile-reducer.js","components/Status/index.js","components/FollowList/index.js","components/FollowList/FolowList.jsx","components/SocialLink/index.js","components/SocialLink/SocialLink.jsx","components/Profile/ProfileView.jsx","components/Common/TextError.jsx","components/Profile/ProfileEdit.jsx","components/Profile/Profile.jsx","components/Profile/index.js","pages/Profile/index.js","pages/Profile/ProfilePage.jsx","components/App/AppWithRouter/AppWithRouter.jsx","components/App/AppWithRouter/index.js","pages/SignInPage/SignInPage.jsx","pages/SignInPage/index.js","components/App/Authorization/Authorization.jsx","components/App/Authorization/index.js","components/App/App.jsx","redux/App-reducer.js","components/App/index.js","redux/Dialogs-reducer.js","redux/Users-reducer.js","redux/redux-store.js","index.js","components/Profile/Profile.module.scss"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","Header","isAuth","logout","user","React","useState","anchorEl","setAnchorEl","handleClose","classes","className","AppBar","Toolbar","Typography","variant","Button","component","Link","to","aria-controls","onClick","event","currentTarget","Avatar","fullName","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","instance","axios","withCredentials","baseURL","headers","profileAPI","get","responce","data","put","photo","formData","FormData","append","status","authAPI","email","password","rememberMe","captcha","post","url","SET_USER_DATA","GET_CAPTCH_URL","BUTTON_ACTIVITY_SWITCH","initialState","login","captchaUrl","isButtonDisabled","setUserData","type","buttonActivitySwitch","getAuthUserData","dispatch","a","resultCode","getCaptchaUrl","AuthReducer","state","action","connect","profilePage","auth","Preloader","LinearProgress","Status","statusGlobal","updateStatus","getStatus","useEffect","editMode","setEditMode","setStatus","s","gutterBottom","status__text","onDoubleClick","TextField","fullWidth","autoFocus","onChange","e","value","onBlur","defaultValue","ADD_NEW_POST","DELETE_POST","CHANGE_NEW_POST","SET_USER","SET_STATUS","UPDATE_STATUS","UPDATE_PHOTO","LOADING_PROFILE_SWITCH","posts","imgPost","text","isUpdateProfile","lodingProfileSwitch","getUserInfo","userId","ProfileReducer","newPost","newPostText","copyState","unshift","filter","p","newText","photos","FollowList","followedBy","follows","media","buttons","count","map","el","href","SocialLink","contacts","icons","facebook","Facebook","github","GitHub","instagram","Instagram","twitter","Twitter","youtube","YouTube","website","Language","vk","Telegram","mainLink","Object","keys","key","Icon","disabled","IconButton","target","ProfileView","toogleMode","profile__namewrapper","profile__name","profile__edit","profile__buttons","aboutMe","Divider","Grid","lookingForAJob","lookingForAJobDescription","TextError","props","error","children","ProfileEdit","updateUserInfo","initialValues","validationSchema","yup","onSubmit","values","margin","label","name","placeholder","as","Select","avatar","cursor","avatarInput","Profile","uploadPhoto","container","profile","item","xs","htmlFor","style","src","large","accept","files","multiple","profile__info","getState","ProfilePage","Container","AppWithRouter","exact","path","render","SignInPage","checked","setChecked","required","min","maxWidth","test","Card","formWrapper","align","toggle","address","FormControlLabel","control","Checkbox","labelPlacement","alt","endIcon","mapToDispatch","Authorization","App","initialize","INITIALIZED_SUCCESS","initialized","AppReducer","promise","Promise","all","ADD_NEW_MESSAGE","CHANGE_NEW_MESSAGE","dialogs","messages","msg","imgsrc","newMessageText","DialogsReducer","newMessage","Date","now","FOLLOW","SET_USERS","SELECT_PAGE","TOGGLE_PRELOADER","GET_TOTAL_USERS","TOOGLE_FOLLOWING_IN_PROGRESS","IS_AUTH","users","rowsPerPage","currentPage","totalUsers","isFetching","followingInProgress","UsersReducer","u","followed","items","totalCount","body","page","redusers","combineReducers","dialogsPage","usersPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.479a1edb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"status__edit\":\"Status_status__edit__3goKw\",\"status__text\":\"Status_status__text__1f7vy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"SignInPage_formWrapper__2aRwT\",\"test\":\"SignInPage_test__3htZ9\",\"centerAlign\":\"SignInPage_centerAlign__2dLKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__1T1lq\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {fade, makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default useStyles\r\n\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from \"./Header.css\";\r\nimport {Avatar, Button, Menu, MenuItem} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Header = ({isAuth, logout, user}) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\">\r\n                        Недоинст\r\n                    </Typography>\r\n                    <div className={classes.grow}/>\r\n                    {isAuth && <>\r\n                        <Button component={Link} to={\"/users\"}>\r\n                            <Typography variant=\"body1\">Users</Typography>\r\n                        </Button>\r\n                        <Button aria-controls=\"simple-menu\" onClick={handleClick}>\r\n                            <Avatar\r\n                                // src={user.photos.small || null}\r\n                            ></Avatar>\r\n                            {user.fullName}\r\n                        </Button>\r\n\r\n\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem\r\n                                component={Link}\r\n                                to={\"/profile\"}\r\n                                onClick={handleClose}\r\n                            >Profile</MenuItem>\r\n                            <MenuItem onClick={logout}>Logout</MenuItem>\r\n                        </Menu>\r\n                    </>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","import axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"69bc9857-b17c-4142-859f-4409d84efd2a\"\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(rowsPerPage, currentPage) {\r\n        return instance.get(`/users?page=${currentPage}&count=${rowsPerPage}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    following(id) {\r\n        return instance.post(`/follow/${id}`)\r\n    },\r\n    unfollowing (id) {\r\n        return instance.delete(`/follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserInfo(id) {\r\n        return instance.get(`/profile/${id}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`/profile/status/${id}`)\r\n            .then(responce => responce)\r\n    },\r\n    updateUserInfo(user) {\r\n        return instance.put(`/profile`, user)\r\n            .then(responce => responce.data)\r\n    },\r\n\r\n    uploadPhoto(photo) {\r\n        let formData =  new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        })\r\n\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', status)\r\n            .then(responce => responce.data);\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`).then(responce => responce.data)\r\n    },\r\n    login(email, password, rememberMe, captcha) {\r\n        return  instance.post(`/auth/login`, {email, password, rememberMe, captcha}).then(responce => responce.data)\r\n    },\r\n    getCaptcha() {\r\n        return instance.get(`/security/get-captcha-url`).then(responce => {\r\n            return  responce.data.url\r\n        })\r\n    },\r\n    logout() {\r\n        return  instance.post(`/auth/logout`).then(responce => responce.data)\r\n    }\r\n}\r\n\r\n","import {authAPI} from \"../api/api\";\r\n\r\nlet SET_USER_DATA = 'SET_USER_DATA'\r\nlet GET_CAPTCH_URL = 'GET_CAPTCH_URL'\r\nlet BUTTON_ACTIVITY_SWITCH = 'BUTTON_ACTIVITY_SWITCH'\r\n\r\nlet initialState = {\r\n    login: null,\r\n    id: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: \"\",\r\n    isButtonDisabled: false\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                login: action.login,\r\n                id: action.id,\r\n                email: action.email,\r\n                isAuth: action.isAuth,\r\n                isButtonDisabled: false\r\n            }\r\n        }\r\n        case GET_CAPTCH_URL: {\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.url\r\n            }\r\n        }\r\n        case BUTTON_ACTIVITY_SWITCH: {\r\n            return {\r\n                ...state,\r\n                isButtonDisabled: !state.isButtonDisabled\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (login, id, email, isAuth) => {\r\n    return {type: SET_USER_DATA, login, id, email, isAuth}\r\n}\r\n\r\nexport const buttonActivitySwitch = () => {\r\n    return {type: BUTTON_ACTIVITY_SWITCH}\r\n}\r\n\r\nexport const getCaptchaURL = (url) => {\r\n    return {type: GET_CAPTCH_URL, url}\r\n}\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let responce = await authAPI.me();\r\n    if (responce.resultCode === 0) {\r\n        dispatch(setUserData(responce.data.login, responce.data.id, responce.data.email, true))\r\n    }\r\n}\r\n\r\nexport const login = (data) => async (dispatch) => {\r\n    buttonActivitySwitch()\r\n    let responce = await authAPI.login(data.email, data.password, data.toggle, data.captcha)\r\n    if (responce.resultCode === 0) {\r\n        dispatch(buttonActivitySwitch())\r\n        dispatch(getAuthUserData())\r\n    } else if (responce.resultCode === 10) {\r\n        dispatch(getCaptchaUrl())\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let responce = await authAPI.getCaptcha()\r\n    dispatch(getCaptchaURL(responce))\r\n\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let responce = await authAPI.logout()\r\n    if (responce.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default AuthReducer","import Header from './Header'\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/Auth-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.profilePage.user,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{ logout })(Header)","import Preloader from './Preloader'\r\n\r\nexport default Preloader","import {LinearProgress} from \"@material-ui/core\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n    <LinearProgress />\r\n    )\r\n}\r\n\r\nexport default Preloader","import {TextField, Typography} from \"@material-ui/core\";\r\n\r\nimport s from './Status.module.scss'\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst Status = ({id, statusGlobal, updateStatus, getStatus}) => {\r\n    useEffect(() => {\r\n        (async () => {\r\n            await getStatus(id);\r\n        })();\r\n    }, [getStatus, id]);\r\n\r\n    let [editMode, setEditMode] = useState(true)\r\n    let [status, setStatus] = useState({statusGlobal})\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    const activateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(true)\r\n        updateStatus(status)\r\n    }\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {\r\n                editMode\r\n                    ? <Typography\r\n                        variant=\"body1\"\r\n                        component=\"p\"\r\n                        gutterBottom\r\n                        className={s.status__text}\r\n                        color=\"textSecondary\"\r\n                        onDoubleClick={activateEditMode}\r\n                    >\r\n                        {statusGlobal}\r\n                    </Typography>\r\n                    : <TextField\r\n                    fullWidth\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        onChange={onChangeStatus}\r\n                        onBlur={deactivateEditMode}\r\n                        defaultValue={statusGlobal}\r\n                    />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_NEW_POST = 'ADD-NEW-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst CHANGE_NEW_POST = 'CHANGE-NEW-POST';\r\nconst SET_USER = 'SET_USER';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst UPDATE_STATUS = 'UPDATE_STATUS';\r\nconst UPDATE_PHOTO = 'UPDATE_PHOTO';\r\nconst LOADING_PROFILE_SWITCH = 'LOADING_PROFILE_SWITCH'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: '0',\r\n            imgPost: 'https://social-network.samuraijs.com/activecontent/images/users/16277/user.jpg?v=2',\r\n            text: 'text',\r\n        },\r\n        {\r\n            id: '1',\r\n            imgPost: 'https://social-network.samuraijs.com/activecontent/images/users/16277/user.jpg?v=2',\r\n            text: 'text',\r\n        }\r\n    ],\r\n    user: \"\",\r\n    status: \"\",\r\n    isUpdateProfile: false\r\n}\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST: {\r\n            let newPost = {\r\n                text: action.newPostText,\r\n                imgPost: \"https://social-network.samuraijs.com/activecontent/images/users/16277/user.jpg?v=2\"\r\n            }\r\n            let copyState = {...state}\r\n            copyState.posts = [...copyState.posts]\r\n            copyState.posts.unshift(newPost);\r\n            return copyState\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.id)\r\n            }\r\n        }\r\n        case CHANGE_NEW_POST: {\r\n            let copyState = {...state}\r\n            copyState.newPostText = action.newText;\r\n            return copyState\r\n        }\r\n        case SET_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case LOADING_PROFILE_SWITCH: {\r\n            return {\r\n                ...state,\r\n                isUpdateProfile: !state.isUpdateProfile,\r\n            }\r\n        }\r\n        case UPDATE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case UPDATE_PHOTO: {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                user: {...state.user, photos: action.photos}\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {type: ADD_NEW_POST, newPostText}\r\n};\r\nexport const updatePostActionCreator = (text) => {\r\n    return {type: CHANGE_NEW_POST, newText: text}\r\n};\r\nexport const deletePost = (id) => {\r\n    return {type: DELETE_POST, id}\r\n};\r\nexport const setUser = (user) => {\r\n    return {type: SET_USER, user}\r\n}\r\nexport const setStatus = (status) => {\r\n    return {type: SET_STATUS, status}\r\n}\r\nexport const lodingProfileSwitch = () => {\r\n    return {type: LOADING_PROFILE_SWITCH}\r\n}\r\n\r\nexport const uploadPhotoSucceess = (photos) => {\r\n    return {type: UPDATE_PHOTO, photos}\r\n}\r\n\r\n// +\r\nexport const getUserInfo = (userId) => async (dispatch) => {\r\n    let responce = await profileAPI.getUserInfo(userId);\r\n    dispatch(setUser(responce))\r\n}\r\n\r\n\r\nexport const getStatus = (id) => (dispatch) => {\r\n    profileAPI.getStatus(id)\r\n        .then(responce => {\r\n            if (responce.status === 200) {\r\n                dispatch(setStatus(responce.data))\r\n            }\r\n        })\r\n}\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus({status: status})\r\n        .then(responce => {\r\n            if (responce.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n        })\r\n}\r\nexport const updateUserInfo = (user) => async (dispatch, getState) => {\r\n    dispatch(lodingProfileSwitch());\r\n    let userId = getState().auth.id\r\n    let responce = await profileAPI.updateUserInfo(user)\r\n    dispatch(lodingProfileSwitch())\r\n    if (responce.resultCode === 0) {\r\n        dispatch(getUserInfo(userId))\r\n    } else {\r\n        debugger\r\n    }\r\n\r\n}\r\nexport const uploadPhoto = (photo) => async (dispatch) => {\r\n    let responce = await profileAPI.uploadPhoto(photo)\r\n    debugger\r\n\r\n    if (responce.data.resultCode === 0) {\r\n        dispatch(uploadPhotoSucceess(responce.data.data.photos))\r\n    }\r\n}\r\n\r\nexport default ProfileReducer","import Status from \"./Status\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, updateStatus} from \"../../redux/Profile-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        statusGlobal: state.profilePage.status,\r\n        id: state.auth.id\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {updateStatus, getStatus})(Status)","import FollowList from \"./FolowList\";\r\n\r\nexport default FollowList","import {Link} from \"react-router-dom\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst FollowList = ({followedBy, follows, media}) => {\r\n    let buttons = [\r\n        {\r\n            text: \"Подписчиков\",\r\n            to: \"followers\",\r\n            count: followedBy = 25,\r\n        },\r\n        {\r\n            text: \"подписок\",\r\n            to: \"following\",\r\n            count: follows = 10,\r\n        },\r\n        {\r\n            text: \"публикаций\",\r\n            to: \"publications\",\r\n            count: media = 15,\r\n        },\r\n    ]\r\n    return (\r\n        <> {\r\n            buttons.map(el => {\r\n                return <Button\r\n                    component={Link}\r\n                    key={el.to}\r\n                    to={el.to}\r\n                    variant=\"outlined\"\r\n                    href=\"#text-buttons\"\r\n                >\r\n                    <span>{el.count} </span> {el.text}\r\n                </Button>\r\n            })\r\n        }\r\n</>\r\n    )\r\n}\r\n\r\nexport default FollowList","import SocialLink from './SocialLink'\r\n\r\n\r\nexport default SocialLink","import React from \"react\";\r\nimport LinkTo from '@material-ui/core/Link';\r\nimport {Facebook, GitHub, Instagram, Twitter, YouTube, Link, Telegram, Language} from '@material-ui/icons';\r\nimport {IconButton} from \"@material-ui/core\";\r\n\r\nconst SocialLink = ({contacts}) => {\r\n    const icons = {\r\n        facebook: Facebook,\r\n        github: GitHub,\r\n        instagram: Instagram,\r\n        twitter: Twitter,\r\n        youtube: YouTube,\r\n        website: Language,\r\n        vk: Telegram,\r\n        mainLink: Link\r\n    }\r\n    return (\r\n        <>\r\n            {Object.keys(contacts).map(key => {\r\n                let Icon = icons[key]\r\n\r\n                if (contacts[key]) {\r\n\r\n                    return <LinkTo color=\"secondary\" disabled={!contacts[key]} component={IconButton} key={key}\r\n                                   target=\"_blank\"\r\n                                   href={contacts[key]}>\r\n                        <Icon/>\r\n                    </LinkTo>\r\n                }\r\n                return null\r\n\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SocialLink","import s from \"./Profile.module.scss\";\r\nimport {Button, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport Status from \"../Status\";\r\nimport FollowList from \"../FollowList\";\r\nimport SocialLink from \"../SocialLink\";\r\nimport React from \"react\";\r\n\r\nconst ProfileView = ({user, toogleMode}) => {\r\n    return (\r\n        <>\r\n            <div className={s.profile__namewrapper}>\r\n                <Typography variant=\"h5\" component=\"h3\"\r\n                            className={s.profile__name}>{user.fullName} </Typography>\r\n                <Button onClick={toogleMode} variant=\"outlined\" className={s.profile__edit}>Редактировать\r\n                    профиль</Button>\r\n            </div>\r\n            <Status/>\r\n            <div className={`inline center ${s.profile__buttons}`}>\r\n                <FollowList/>\r\n            </div>\r\n            <Typography\r\n                variant=\"body1\"\r\n                component=\"p\"\r\n                gutterBottom\r\n            >{user.aboutMe} </Typography>\r\n            <Divider/>\r\n            <Grid>\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    component=\"p\"\r\n                    gutterBottom\r\n                >Контакты: </Typography>\r\n                <SocialLink contacts={user.contacts}/>\r\n            </Grid>\r\n            <Divider/>\r\n            <Typography\r\n                variant=\"body1\"\r\n                component=\"p\"\r\n                gutterBottom\r\n            >Поиск работы: {user.lookingForAJob ? \"Да\" : \"Нет\"}</Typography>\r\n            {user.lookingForAJob && <Typography\r\n                variant=\"body2\"\r\n                component=\"p\"\r\n                gutterBottom\r\n            >{user.lookingForAJobDescription}\r\n            </Typography>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileView\r\n","import s from './TextError.module.css'\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div className={s.error}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError","import React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport TextError from \"../Common/TextError\";\r\nimport {Select, TextField} from \"formik-material-ui\";\r\nimport {Button, MenuItem} from \"@material-ui/core\";\r\n\r\n\r\nconst ProfileEdit = ({user, toogleMode, updateUserInfo, isUpdateProfile}) => {\r\n\r\n    let initialValues = {\r\n        aboutMe: user.aboutMe,\r\n        lookingForAJob: user.lookingForAJob,\r\n        lookingForAJobDescription: user.lookingForAJobDescription,\r\n        fullName: user.fullName,\r\n        contacts: {\r\n            facebook: user.contacts.facebook,\r\n            github: user.contacts.github,\r\n            instagram: user.contacts.instagram,\r\n            mainLink: user.contacts.mainLink,\r\n            twitter: user.contacts.twitter,\r\n            vk: user.contacts.vk,\r\n            website: user.contacts.website,\r\n            youtube: user.contacts.youtube,\r\n        }\r\n    }\r\n\r\n    const onSubmit = values => {\r\n        updateUserInfo(values)\r\n        toogleMode()\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        aboutMe: yup\r\n            .string('Enter your email'),\r\n        fullName: yup\r\n            .string('Enter your fullName'),\r\n        lookingForAJob: yup\r\n            .string('Enter your password'),\r\n        lookingForAJobDescription: yup\r\n            .string('Enter your password'),\r\n\r\n    });\r\n\r\n    return <>\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n            <Form>\r\n                <Field component={TextField} margin=\"dense\" fullWidth type=\"text\" label=\"ФИО\" variant=\"outlined\"\r\n                       name=\"fullName\"\r\n                       placeholder=\"ФИО\"/>\r\n                <ErrorMessage name=\"fullName\" component={TextError}/>\r\n\r\n\r\n                <Field variant=\"outlined\" margin=\"dense\" as=\"select\" name=\"lookingForAJob\" component={Select}>\r\n                    <MenuItem value={true}>Да</MenuItem>\r\n                    <MenuItem value={false}>Нет</MenuItem>\r\n                </Field>\r\n\r\n                <Field component={TextField} margin=\"dense\" fullWidth type=\"text\" label=\"Комментарий\" variant=\"outlined\"\r\n                       name=\"lookingForAJobDescription\" placeholder=\"Комментарий\"/>\r\n                <ErrorMessage name=\"lookingForAJobDescription\" component={TextError}/>\r\n\r\n                <Field component={TextField} margin=\"dense\" fullWidth type=\"text\" label=\"О себе\" variant=\"outlined\"\r\n                       name=\"aboutMe\"\r\n                       placeholder=\"fullName\"/>\r\n                <ErrorMessage name=\"aboutMe\" component={TextError}/>\r\n\r\n                <div>\r\n                    <p>Контакты</p>\r\n                    {\r\n                        Object.keys(initialValues.contacts).map(key => {\r\n                            return <div key={key}>\r\n                                <Field fullWidth variant=\"outlined\" margin=\"dense\" component={TextField} type=\"text\"\r\n                                       name={`contacts.${key}`}\r\n                                       placeholder={key}/>\r\n                                <ErrorMessage name={`contacts.${key}`} component={TextError}/>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </div>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\" type=\"submit\">Отправить </Button>\r\n\r\n            </Form>\r\n        </Formik>\r\n    </>\r\n}\r\n\r\nexport default ProfileEdit\r\n","import {\r\n    Avatar,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport s from \"./Profile.module.scss\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Preloader from \"../Preloader\";\r\nimport ProfileView from \"./ProfileView\";\r\nimport ProfileEdit from \"./ProfileEdit\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        cursor: \"pointer\"\r\n    },\r\n    avatarInput: {\r\n        display: \"none\"\r\n    }\r\n})\r\n\r\nconst Profile = ({id, user, getUserInfo, updateUserInfo, isUpdateProfile, uploadPhoto}) => {\r\n    const classes = useStyles()\r\n    useEffect(() => {\r\n        (async () => {\r\n            await getUserInfo(id);\r\n        })();\r\n    }, [getUserInfo, id]);\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const toogleMode = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    const onImageChange = (e) => {\r\n        uploadPhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={s.profile}>\r\n            {!user ? <Preloader/> : <>\r\n                <Grid item xs={4}>\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Avatar\r\n                            className={classes.avatar}\r\n                            style={{height: '300px', width: '300px', margin: '0 auto'}}\r\n                            src={user.photos.large}\r\n                            variant=\"circular\"\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        accept=\"image/*\"\r\n                        onChange={onImageChange}\r\n                        className={classes.avatarInput}\r\n                        id=\"contained-button-file\"\r\n                        multiple\r\n                        name=\"image\"\r\n                        type=\"file\"\r\n                    />\r\n                </Grid>\r\n                <Grid\r\n                    className={s.profile__info}\r\n                    item xs>\r\n                    {\r\n                        isUpdateProfile && <Preloader/>\r\n                    }\r\n                    {\r\n                        !editMode && <ProfileView user={user} toogleMode={toogleMode}/>\r\n                    }\r\n                    {\r\n                        editMode && <ProfileEdit\r\n                            user={user}\r\n                            toogleMode={toogleMode}\r\n                            updateUserInfo={updateUserInfo}\r\n                        />\r\n                    }\r\n\r\n                </Grid>\r\n            </>}\r\n        </Grid>\r\n    )\r\n}\r\nexport default Profile;","import Profile from './Profile'\r\nimport {connect} from \"react-redux\";\r\nimport {getUserInfo, updateUserInfo, uploadPhoto} from \"../../redux/Profile-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        user: state.profilePage.user,\r\n        id: state.auth.id,\r\n        isUpdateProfile: state.profilePage.isUpdateProfile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getUserInfo, updateUserInfo, uploadPhoto})(Profile)","import ProfilePage from \"./ProfilePage\";\r\n\r\nexport default ProfilePage;","import {Container} from \"@material-ui/core\";\r\n// import s from './ProfilePage.module.css'\r\nimport ProfileInfo from \"../../components/Profile\";\r\n// import {useEffect} from \"react\";\r\n\r\nconst ProfilePage = (props) => {\r\n\r\n\r\n    return (\r\n        <Container\r\n        >\r\n            <ProfileInfo />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfilePage\r\n\r\n","import {Route, Switch} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Profile from \"../../../pages/Profile\";\r\n\r\nconst AppWithRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' render={() => <div>MainPage</div>} />\r\n            <Route path='/profile' render={() =><Profile />} />\r\n            <Route path='/messages' render={() => <div>messages</div>} />\r\n            <Route path='/users' render={() => <div>Users</div>} />\r\n            {/*<Route path='*' render={() => <div>404 NOT FOUND</div>} />*/}\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AppWithRouter","import AppWithRouter from './AppWithRouter'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(AppWithRouter)","import * as yup from \"yup\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport TextError from \"../../components/Common/TextError\";\r\nimport React from \"react\";\r\nimport {Button, Card, Container, FormControlLabel, Icon} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Checkbox, TextField} from 'formik-material-ui';\r\nimport s from './SignInPage.module.scss'\r\nimport Preloader from \"../../components/Preloader\";\r\n\r\nconst SignInPage = ({captchaUrl, isAuth, login, isButtonDisabled}) => {\r\n\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n    let initialValues = {email: '', password: '', captcha: '', toggle: true, address: ''}\r\n\r\n    const onSubmit = values => {\r\n        login(values)\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        email: yup\r\n            .string('Enter your email')\r\n            .email('Enter a valid email')\r\n            .required('Email is required'),\r\n        password: yup\r\n            .string('Enter your password')\r\n            .min(8, 'Password should be of minimum 8 characters length')\r\n            .required('Password is required'),\r\n    });\r\n\r\n\r\n    return <Container\r\n        component=\"main\"\r\n        maxWidth=\"xs\"\r\n        className={s.test}\r\n    >\r\n        <Card className={s.formWrapper}>\r\n            <Typography component=\"h1\" align=\"center\" variant=\"h5\">\r\n                Sign in\r\n            </Typography>\r\n            {isButtonDisabled && <Preloader/>}\r\n\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}\r\n            >\r\n                <Form>\r\n                    <Field\r\n                        fullWidth\r\n                        component={TextField}\r\n                        margin=\"dense\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"email\"\r\n                        label=\"Email\"\r\n                        variant=\"outlined\"\r\n\r\n                    />\r\n                    <Field\r\n                        fullWidth\r\n                        component={TextField}\r\n                        margin=\"dense\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"password\"\r\n                        label=\"Password\"\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        value=\"start\"\r\n                        control={<Field\r\n                            component={Checkbox}\r\n                            type={\"checkbox\"}\r\n                            checked={checked}\r\n                            color=\"primary\"\r\n                            onChange={() => setChecked(!checked)}\r\n                        />}\r\n                        label=\"Запомнить пароль\"\r\n                        labelPlacement=\"start\"\r\n                    />\r\n\r\n                    {captchaUrl && <img src={captchaUrl} alt=\"img\"/>}\r\n                    {captchaUrl && <div>\r\n                        <Field type=\"text\" name=\"captcha\" placeholder=\"captcha\"/>\r\n                        <ErrorMessage name=\"captcha\" component={TextError}/>\r\n                    </div>}\r\n\r\n\r\n                    <Button\r\n                        fullWidth\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        margin=\"dense\"\r\n\r\n                        disabled={isButtonDisabled}\r\n                        endIcon={<Icon>send</Icon>}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </Form>\r\n            </Formik>\r\n        </Card>\r\n    </Container>\r\n}\r\n\r\nexport default SignInPage","import SignInPage from \"./SignInPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {buttonActivitySwitch, login} from \"../../redux/Auth-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: state.auth.captchaUrl,\r\n        isAuth: state.auth.isAuth,\r\n        isButtonDisabled: state.auth.isButtonDisabled\r\n\r\n    }\r\n}\r\n\r\nconst mapToDispatch = {\r\n    login,\r\n    buttonActivitySwitch\r\n}\r\n\r\nexport default connect(mapStateToProps, mapToDispatch)(SignInPage)\r\n","import {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport SignInPage from \"../../../pages/SignInPage\";\r\n\r\nconst Authorization = () => {\r\n    return (\r\n        <Switch>\r\n        <Route path='/signin' render={() => <SignInPage/>}/>\r\n        <Redirect to={\"/signin\"}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Authorization","import Authorization from './Authorization'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Authorization)","import React, {useEffect} from \"react\";\r\nimport Header from \"../Header\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport AppWithRouter from \"./AppWithRouter\";\r\nimport Authorization from \"./Authorization\";\r\n\r\nconst App = ({isAuth, initialize}) => {\r\n    useEffect(() => {\r\n        initialize()\r\n    });\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Switch>\r\n                <Route exact path='/' render={() => <Redirect to={\"/profile\"}/>}/>\r\n                {isAuth ? <AppWithRouter/> : <Authorization/>}\r\n            </Switch>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import {getAuthUserData} from \"./Auth-reducer\";\r\n\r\nlet INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst AppReducer = ( state = initialState, action) => {\r\n        switch (action.type) {\r\n            case INITIALIZED_SUCCESS: {\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default :\r\n                return state\r\n        }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {type: INITIALIZED_SUCCESS}\r\n}\r\nexport const initialize = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(()=> {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\nexport default AppReducer","import App from \"./App\";\r\nimport {connect} from \"react-redux\";\r\nimport { initialize} from \"../../redux/App-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: state.auth.captchaUrl,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {initialize})(App)","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\nconst CHANGE_NEW_MESSAGE = 'CHANGE-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {name: \"Alexander\", id: 1},\r\n        {name: \"Alexander1\", id: 2},\r\n        {name: \"Alexander2\", id: 3},\r\n        {name: \"Alexander3\", id: 4},\r\n        {name: \"Alexander5\", id: 5},\r\n        {name: \"Alexander6\", id: 6},\r\n        {name: \"Alexander7\", id: 7},\r\n        {name: \"Alexander8\", id: 8},\r\n    ],\r\n    messages: [\r\n        {\r\n            msg: \"1This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 1,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"2This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 2,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"3This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 3,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {msg: \"it to make it appear circular.\", id: 4, imgsrc: \"https://via.placeholder.com/300\"},\r\n        {\r\n            msg: \"5This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 5,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 6,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n    ],\r\n    newMessageText: 'test text'\r\n\r\n};\r\n\r\nconst DialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE:\r\n            let newMessage = {\r\n                msg: state.newMessageText,\r\n                id: Date.now()\r\n            }\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [newMessage, ...state.messages]\r\n            }\r\n        case CHANGE_NEW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const addNewMessageActionCreator = () => {\r\n    return {type: ADD_NEW_MESSAGE}\r\n}\r\nexport const updateMessageActionCreator = (text) => {\r\n    return {type: CHANGE_NEW_MESSAGE, newText: text}\r\n}\r\n\r\nexport default DialogsReducer","import {usersAPI} from \"../api/api\";\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SELECT_PAGE = 'SELECT_PAGE';\r\nlet TOGGLE_PRELOADER = 'TOGGLE_PRELOADER';\r\nlet GET_TOTAL_USERS = 'GET_TOTAL_USERS';\r\nlet TOOGLE_FOLLOWING_IN_PROGRESS = 'TOOGLE_FOLLOWING_IN_PROGRESS'\r\nlet IS_AUTH = 'IS_AUTH'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    rowsPerPage: 10,\r\n    currentPage: 1,\r\n    totalUsers: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users.items],\r\n                totalUsers: action.users.totalCount\r\n            }\r\n        }\r\n        case IS_AUTH: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.body\r\n            }\r\n        }\r\n        case SELECT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.page + 1\r\n            }\r\n\r\n        }\r\n        case GET_TOTAL_USERS: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n\r\n        }\r\n        case TOGGLE_PRELOADER: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        }\r\n        case TOOGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching\r\n                        ? [...state.followingInProgress, action.isFetching]\r\n                        : state.followingInProgress.filter(id => id !== action.userId)\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n// Подписка\r\nexport const followSuccess = (id) => {\r\n    return {type: FOLLOW, id: id}\r\n}\r\nexport const isAuth = (body) => {\r\n    return {type: FOLLOW, body: body}\r\n}\r\nexport const unfollowSuccess = (id) => {\r\n    return {type: FOLLOW, id: id}\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type: SET_USERS, users}\r\n}\r\nexport const selectPage = (page) => {\r\n    return {type: SELECT_PAGE, page}\r\n}\r\nexport const getTotalUsers = (totalUsers) => {\r\n    return {type: GET_TOTAL_USERS, totalUsers}\r\n}\r\nexport const togglePreloader = (isFetching) => {\r\n    return {type: TOGGLE_PRELOADER, isFetching}\r\n}\r\n\r\nexport const toggleFollowingInProgress = (isFetching, userID) => {\r\n    return {type: TOOGLE_FOLLOWING_IN_PROGRESS, isFetching, userID}\r\n}\r\n\r\nexport const getUsersThunkCreator = (rowsPerPage, currentPage) => {\r\n    return async (dispatch) => {\r\n        dispatch(togglePreloader(true))\r\n        let response = await usersAPI.getUsers(rowsPerPage, currentPage)\r\n        dispatch(setUsers(response))\r\n        dispatch(togglePreloader(false))\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod) => {\r\n    dispatch(toggleFollowingInProgress(true, id))\r\n    let response = await apiMethod(id)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(followSuccess(id))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, id))\r\n}\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch,id, usersAPI.following)\r\n    }\r\n}\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, id, usersAPI.unfollowing)\r\n    }\r\n}\r\n\r\nexport default UsersReducer","import DialogsReducer from \"./Dialogs-reducer\";\r\nimport ProfileReducer from \"./Profile-reducer\";\r\nimport UsersReducer from \"./Users-reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport AuthReducer from \"./Auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport AppReducer from \"./App-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n    dialogsPage: DialogsReducer,\r\n    profilePage: ProfileReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n    app: AppReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport  './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from 'react-redux'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App className=\"\"/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    )\r\n\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3SqNm\",\"profile__avatar\":\"Profile_profile__avatar__3N3WJ\",\"profile__namewrapper\":\"Profile_profile__namewrapper__3kgyl\",\"profile__name\":\"Profile_profile__name__1JOfK\",\"profile__buttons\":\"Profile_profile__buttons__2vA4o\"};"],"sourceRoot":""}
{"version":3,"sources":["components/Common/Preloader.jsx","components/Common/TextError.module.css","components/Common/Preloader.module.css","api/api.js","reportWebVitals.js","components/Profile/NewPost.jsx","components/Profile/NewPostContainer.jsx","redux/Dialogs-reducer.js","redux/Auth-reducer.js","redux/App-reducer.js","redux/redux-store.js","components/Messenger/Dialogs/Dialogs.jsx","components/Messenger/Messages/AddNewMessage.jsx","components/Messenger/Messages/AddNewMessageContainer.jsx","components/Messenger/Messages/MessagesList.jsx","components/Messenger/Messages/MessagesListContainer.jsx","components/Messenger/Messages/Messages.jsx","components/Messenger/Messenger.jsx","components/Header/Navigation/Navigation.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Common/TextError.jsx","components/Auth/Login.jsx","components/Auth/LoginContainer.jsx","hoc/withSuspense.jsx","App.js","index.js","components/Messenger/Messenger.module.css","redux/Profile-reducer.js","components/Header/Navigation/Navigation.module.css","components/Header/Header.module.css","redux/Users-reducer.js"],"names":["Preloader","className","s","bgpreloader","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","rowsPerPage","currentPage","get","then","responce","data","getUserInfo","id","console","log","profileAPI","following","post","unfollowing","delete","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","NewPost","props","to","onChange","e","updatePost","target","value","htmlFor","type","name","onClick","addPost","NewPostContainer","connect","state","dispatch","addPostActionCreator","text","updatePostActionCreator","ADD_NEW_MESSAGE","CHANGE_NEW_MESSAGE","initialState","dialogs","messages","msg","imgsrc","newMessageText","DialogsReducer","action","newMessage","Date","now","newText","SET_USER_DATA","isAuth","setUserData","getAuthUserData","a","resultCode","AuthReducer","INITIALIZED_SUCCESS","initialized","AppReducer","redusers","combineReducers","dialogsPage","profilePage","ProfileReducer","usersPage","UsersReducer","auth","app","store","createStore","applyMiddleware","thunkMiddleware","dialogsElements","getState","map","el","Dialogs","dialogsList","AddNewMessage","onChangeNewMessage","addNewMessage","AddNewMessageContainer","updateMessageActionCreator","MessagesList","messagesElements","messageItem","messageText","MessagesListContainer","Messages","Messenger","dialogsWrapper","Navigation","nav","logaut","show","none","Header","header","logo","href","src","alt","placeholder","AuthWrapper","this","React","Component","HeaderContainer","TextError","error","children","Login","validationSchema","yup","required","min","initialValues","toggle","address","onSubmit","values","component","LoginContainer","compose","withSuspense","fallback","ProfileContainer","lazy","UsersContainer","App","initialize","initializeApp","path","render","withRouter","promise","Promise","all","ReactDOM","basename","process","document","getElementById","ADD_NEW_POST","DELETE_POST","CHANGE_NEW_POST","SET_USER","SET_STATUS","UPDATE_STATUS","posts","imgPost","user","newPostText","setStatus","userId","newPost","copyState","unshift","filter","p","FOLLOW","SET_USERS","SELECT_PAGE","TOGGLE_PRELOADER","GET_TOTAL_USERS","TOOGLE_FOLLOWING_IN_PROGRESS","IS_AUTH","users","totalUsers","isFetching","followingInProgress","followSuccess","selectPage","page","getTotalUsers","togglePreloader","toggleFollowingInProgress","userID","getUsersThunkCreator","response","followUnfollowFlow","apiMethod","follow","unfollow","u","followed","items","totalCount","body"],"mappings":"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","file":"static/js/main.d68bb142.chunk.js","sourcesContent":["import s from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.bgpreloader}>\r\n            <div className=\"progress\">\r\n                <div className=\"indeterminate\"></div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__1T1lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgpreloader\":\"Preloader_bgpreloader__3kkjW\"};","import axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"69bc9857-b17c-4142-859f-4409d84efd2a\"\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(rowsPerPage, currentPage) {\r\n        return instance.get(`/users?page=${currentPage}&count=${rowsPerPage}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    getUserInfo(id) {\r\n        console.log('invalid')\r\n        return profileAPI.getUserInfo(id)\r\n    },\r\n    following(id) {\r\n        return instance.post(`/follow/${id}`)\r\n    },\r\n    unfollowing (id) {\r\n        return instance.delete(`/follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserInfo(id) {\r\n        return instance.get(`/profile/${id}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`/profile/status/${id}`)\r\n            .then(responce => responce)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', status)\r\n            .then(responce => responce.data);\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`).then(responce => responce.data)\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return  instance.post(`/auth/login`, {email, password, rememberMe}).then(responce => responce.data)\r\n    },\r\n    logout() {\r\n        return  instance.post(`/auth/logout`).then(responce => responce.data)\r\n    }\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n    const NewPost = (props) => {\r\n\r\n        const  addPost = () => {\r\n            props.addPost()\r\n        }\r\n\r\n        const updatePost = (e) => {\r\n            props.updatePost(e.target.value)\r\n        }\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"row\">\r\n                <Link\r\n                    to='/profile'\r\n                    className=\"btn-floating btn-large waves-effect waves-light red\">\r\n                    <i className=\"material-icons\">arrow_back</i>\r\n                </Link>\r\n            </div>\r\n            <div className=\"row\">\r\n                <form className=\"col s12\">\r\n\r\n                    <div className=\"input-field\">\r\n                        <i className=\"material-icons prefix\">account_circle</i>\r\n                        <textarea\r\n                            id=\"textarea1\"\r\n                            className=\"materialize-textarea\"\r\n                            onChange={ updatePost }\r\n                        > </textarea>\r\n                        <label htmlFor=\"textarea1\" className='active'>Textarea</label>\r\n\r\n\r\n                        <Link to='/profile'\r\n                            className=\"btn waves-effect waves-light\"\r\n                            type=\"submit\"\r\n                            name=\"action\"\r\n                            onClick={ addPost }\r\n                        >Опубликовать\r\n                            <i className=\"material-icons right\">send</i>\r\n                        </Link>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NewPost","import {addPostActionCreator, updatePostActionCreator} from \"../../redux/Profile-reducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updatePost: (text) => {\r\n\r\n            dispatch(updatePostActionCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst NewPostContainer = connect (mapStateToProps, mapDispatchToProps)(NewPost)\r\nexport default NewPostContainer","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\nconst CHANGE_NEW_MESSAGE = 'CHANGE-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {name: \"Alexander\", id: 1},\r\n        {name: \"Alexander1\", id: 2},\r\n        {name: \"Alexander2\", id: 3},\r\n        {name: \"Alexander3\", id: 4},\r\n        {name: \"Alexander5\", id: 5},\r\n        {name: \"Alexander6\", id: 6},\r\n        {name: \"Alexander7\", id: 7},\r\n        {name: \"Alexander8\", id: 8},\r\n    ],\r\n    messages: [\r\n        {\r\n            msg: \"1This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 1,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"2This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 2,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"3This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 3,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {msg: \"it to make it appear circular.\", id: 4, imgsrc: \"https://via.placeholder.com/300\"},\r\n        {\r\n            msg: \"5This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 5,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 6,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n    ],\r\n    newMessageText: 'test text'\r\n\r\n};\r\n\r\nconst DialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE:\r\n            let newMessage = {\r\n                msg: state.newMessageText,\r\n                id: Date.now()\r\n            }\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [newMessage, ...state.messages]\r\n            }\r\n        case CHANGE_NEW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const addNewMessageActionCreator = () => {\r\n    return {type: ADD_NEW_MESSAGE}\r\n}\r\nexport const updateMessageActionCreator = (text) => {\r\n    return {type: CHANGE_NEW_MESSAGE, newText: text}\r\n}\r\n\r\nexport default DialogsReducer","import {authAPI} from \"../api/api\";\r\n\r\nlet SET_USER_DATA = 'SET_USER_DATA'\r\nlet initialState = {\r\n    login: null,\r\n    id: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                login: action.login,\r\n                id: action.id,\r\n                email: action.email,\r\n                isAuth: action.isAuth\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (login, id, email, isAuth) => {\r\n    return {type: SET_USER_DATA, login, id, email, isAuth}\r\n}\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let responce = await authAPI.me();\r\n    if (responce.resultCode === 0) {\r\n        dispatch(setUserData(responce.data.login, responce.data.id, responce.data.email, true))\r\n    }\r\n}\r\n\r\nexport const login = (data) => async (dispatch) => {\r\n    let responce = await authAPI.login(data.email, data.password, data.toggle)\r\n    if (responce.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    }\r\n}\r\nexport const logaut = (data) => async (dispatch) => {\r\n    let responce = authAPI.logout()\r\n    if (responce.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default AuthReducer","import {getAuthUserData} from \"./Auth-reducer\";\r\n\r\nlet INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst AppReducer = ( state = initialState, action) => {\r\n        switch (action.type) {\r\n            case INITIALIZED_SUCCESS: {\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default :\r\n                return state\r\n        }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {type: INITIALIZED_SUCCESS}\r\n}\r\nexport const initialize = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(()=> {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\nexport default AppReducer","import DialogsReducer from \"./Dialogs-reducer\";\r\nimport ProfileReducer from \"./Profile-reducer\";\r\nimport UsersReducer from \"./Users-reducer\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport AuthReducer from \"./Auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport AppReducer from \"./App-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n    dialogsPage: DialogsReducer,\r\n    profilePage: ProfileReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n    app: AppReducer\r\n})\r\nlet store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import {Link} from \"react-router-dom\";\r\nimport s from \"../Messenger.module.css\";\r\nimport React from \"react\";\r\nimport store from \"../../../redux/redux-store\";\r\n\r\nlet dialogsElements = store.getState().dialogsPage.dialogs.map(el => {\r\n    return <Link key={el.id} to={`/dialogs/${el.id}`} className=\"collection-item\"><span\r\n        className=\"badge\">1</span>{el.name}</Link>\r\n})\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n        <div className={'collection ' + s.dialogsList}>\r\n            {dialogsElements}\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs","import React from \"react\";\r\n\r\nconst AddNewMessage = (props) => {\r\n\r\n    let onChangeNewMessage = (e) => {\r\n        props.onChangeNewMessage(e.target.value)\r\n    }\r\n    let addNewMessage = () => {\r\n            props.addNewMessage();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <textarea\r\n                className=\"materialize-textarea\"\r\n                value={props.newMessageText}\r\n                onChange={ onChangeNewMessage }\r\n            />\r\n            <button onClick={ addNewMessage }>></button>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default AddNewMessage","import {addNewMessageActionCreator, updateMessageActionCreator} from \"../../../redux/Dialogs-reducer\";\r\nimport AddNewMessage from \"./AddNewMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: () => {\r\n            dispatch(addNewMessageActionCreator())\r\n        },\r\n        onChangeNewMessage: (text) => {\r\n            dispatch(updateMessageActionCreator(text))\r\n        }\r\n}\r\n}\r\n\r\nconst AddNewMessageContainer = connect(mapStateToProps, mapDispatchToProps)(AddNewMessage)\r\n\r\nexport default AddNewMessageContainer;","import s from \"../Messenger.module.css\";\r\n\r\n\r\nconst MessagesList = (props) => {\r\n    let messagesElements = props.messages.map(el => {\r\n        return <div key={el.id} className={s.messageItem}>\r\n            <button className=\"btn-floating btn-large waves-effect waves-light red\">АК</button>\r\n            <p className={s.messageText}>{el.msg}</p>\r\n        </div>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {messagesElements}\r\n        </div>\r\n    )\r\n}\r\nexport default MessagesList","import {connect} from \"react-redux\";\r\nimport MessagesList from \"./MessagesList\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst MessagesListContainer = connect(mapStateToProps, mapDispatchToProps)(MessagesList)\r\n\r\nexport default MessagesListContainer;","import s from \"../Messenger.module.css\";\r\nimport React from \"react\";\r\nimport AddNewMessageContainer from \"./AddNewMessageContainer\";\r\nimport MessagesListContainer from \"./MessagesListContainer\";\r\n\r\n\r\nconst Messages = () => {\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className=\"col s12 m8 offset-m2 l6 offset-l3\">\r\n                <AddNewMessageContainer/>\r\n                <MessagesListContainer/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Messages","import React from \"react\";\r\nimport s from './Messenger.module.css'\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport Messages from \"./Messages/Messages\";\r\n\r\nconst Messenger = () => {\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <Dialogs />\r\n            <Messages />\r\n        </div>\r\n    )\r\n}\r\nexport default Messenger","import s from './Navigation.module.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Navigation = ( props ) => {\r\n\r\n    return (\r\n            <nav className={s.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Index</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/users\">Users</Link>\r\n                        </li>\r\n                    <li><Link to=\"/dialogs\">Dialogs</Link></li>\r\n                    {\r\n                        (!props.props.login)\r\n                            ? <li><Link to={`/login`}>Login</Link></li>\r\n                            : <li><Link to={`/profile/${props.props.id}` }>{props.props.login}</Link></li>\r\n\r\n                    }\r\n                    <li onClick={props.props.logaut} className={ props.props.login !== null ? s.show : s.none}><Link to=\"/login\">Log out</Link></li>\r\n                </ul>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import s from './Header.module.css'\r\nimport Navigation from \"./Navigation/Navigation\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <a className={s.logo} href='/'>\r\n                <img src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"\"/>\r\n            </a>\r\n            <div>\r\n                <input type=\"text\" placeholder=\"search\"/>\r\n            </div>\r\n            <Navigation props={props}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import Header from \"./Header\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {logaut} from \"../../redux/Auth-reducer\";\r\n\r\nclass AuthWrapper extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        id: state.auth.id,\r\n        email: state.auth.email\r\n    }\r\n}\r\n\r\nlet HeaderContainer = connect(mapStateToProps, {\r\n    logaut\r\n})(AuthWrapper)\r\n\r\n\r\n\r\nexport default HeaderContainer","import s from './TextError.module.css'\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div className={s.error}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError","import React from 'react';\r\nimport {Formik, Form, Field, ErrorMessage, useFormik} from 'formik';\r\nimport {Redirect} from \"react-router-dom\"\r\nimport * as yup from 'yup';\r\nimport {connect} from \"react-redux\";\r\nimport TextError from \"../Common/TextError\";\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        let initialValues = {email: '', password: '', toggle: true, address: ''}\r\n\r\n        const onSubmit = values => {\r\n            this.props.login(values)\r\n        }\r\n\r\n        const validationSchema = yup.object({\r\n            email: yup\r\n                .string('Enter your email')\r\n                .email('Enter a valid email')\r\n                .required('Email is required'),\r\n            password: yup\r\n                .string('Enter your password')\r\n                .min(8, 'Password should be of minimum 8 characters length')\r\n                .required('Password is required'),\r\n        });\r\n\r\n        if (this.props.isAuth) {\r\n            return <Redirect to=\"/profile\"/>\r\n        }\r\n\r\n\r\n        return <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={onSubmit}\r\n        >\r\n                <Form>\r\n                    <Field type=\"email\" name=\"email\" placeholder=\"email\"/>\r\n                    <ErrorMessage name=\"email\" component={TextError}/>\r\n                    <Field type=\"password\" name=\"password\" placeholder=\"password\"/>\r\n                    <ErrorMessage name=\"password\" component={TextError}/>\r\n                    <Field type=\"checkbox\" name=\"toggle\"/>\r\n                    {/*<Field type=\"address\" name=\"address\">{*/}\r\n                    {/*    (props) => {*/}\r\n                    {/*        const {fields, form, meta} = props*/}\r\n                    {/*        return <input type=\"text\" {...fields}/>*/}\r\n                    {/*    }*/}\r\n                    {/*}</Field>*/}\r\n                    {/*<ErrorMessage name=\"address\" component={TextError}/>*/}\r\n\r\n                    <button type=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                </Form>\r\n        </Formik>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n\r\n","import React from 'react';\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {login} from \"../../redux/Auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass LoginContainer extends React.Component {\r\n    render() {\r\n        return        <Login login={this.props.login}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {login}))\r\n    (LoginContainer);","import React, {Suspense} from \"react\";\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props}/>\r\n         </Suspense>\r\n    }\r\n}","import './App.css'\r\nimport NewPostContainer from \"./components/Profile/NewPostContainer\";\r\nimport Messenger from \"./components/Messenger/Messenger\";\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport React, { Suspense } from 'react';\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Auth/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {initialize} from \"./redux/App-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport Preloader from \"./components/Common/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initialize()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initializeApp) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"container\">\r\n                    <HeaderContainer/>\r\n                    <Switch>\r\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n                        <Route path='/dialogs' render={() => <Messenger/>}/>\r\n                        <Route path='/users' render={withSuspense(UsersContainer)}/>\r\n                        <Route path='/addpost' render={() => <NewPostContainer/>}/>\r\n                        <Route path='/login' render={() => <LoginContainer/>}/>\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initializeApp: state.app.initialized\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initialize}))\r\n(App);\r\n","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from 'react-redux'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    )\r\n\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Messenger_dialogsWrapper__2OagM\",\"dialogsList\":\"Messenger_dialogsList__1SlXZ\",\"messages\":\"Messenger_messages__2J2rP\",\"messageItem\":\"Messenger_messageItem__3OEF-\",\"messageText\":\"Messenger_messageText__2IoFQ\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_NEW_POST = 'ADD-NEW-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst CHANGE_NEW_POST = 'CHANGE-NEW-POST';\r\nconst SET_USER = 'SET_USER';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst UPDATE_STATUS = 'UPDATE_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: '0',\r\n            imgPost: 'https://social-network.samuraijs.com/activecontent/images/users/16277/user.jpg?v=2',\r\n            text: 'text',\r\n        },\r\n        {\r\n            id: '1',\r\n            imgPost: 'https://social-network.samuraijs.com/activecontent/images/users/16277/user.jpg?v=2',\r\n            text: 'text',\r\n        }\r\n    ],\r\n    user: \"\",\r\n    status: \"\",\r\n    newPostText: \"\",\r\n}\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST: {\r\n            let newPost = {\r\n                text: action.newPostText,\r\n                imgPost: \"https://social-network.samuraijs.com/activecontent/images/users/16277/user.jpg?v=2\"\r\n            }\r\n            let copyState = {...state}\r\n            copyState.posts = [...copyState.posts]\r\n            copyState.posts.unshift(newPost);\r\n            return copyState\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.id)\r\n            }\r\n        }\r\n        case CHANGE_NEW_POST: {\r\n            let copyState = {...state}\r\n            copyState.newPostText = action.newText;\r\n            return copyState\r\n        }\r\n        case SET_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case UPDATE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {type: ADD_NEW_POST, newPostText}\r\n};\r\nexport const updatePostActionCreator = (text) => {\r\n    return {type: CHANGE_NEW_POST, newText: text }\r\n};\r\nexport const deletePost = (id) => {\r\n    return {type: DELETE_POST, id }\r\n};\r\nexport const setUser = (user) => {\r\n    return {type: SET_USER, user}\r\n}\r\nexport const setStatus = (status) => {\r\n    return {type: SET_STATUS, status}\r\n}\r\n\r\nexport const getUserInfo = (userId) => (dispatch) => {\r\n    usersAPI.getUserInfo(userId)\r\n        .then(responce => {\r\n            dispatch(setUser(responce))\r\n        })\r\n    }\r\nexport const getStatus = (id) => (dispatch) => {\r\n    profileAPI.getStatus(id)\r\n        .then(responce => {\r\n            if (responce.status === 200) {\r\n                dispatch(setStatus(responce.data))\r\n            }\r\n        })\r\n}\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus({status: status})\r\n        .then(responce => {\r\n            if (responce.resultCode === 0) {\r\n                dispatch(setStatus(responce.data.status))\r\n            }\r\n        })\r\n\r\n}\r\nexport default ProfileReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__E2tS8\",\"none\":\"Navigation_none__1ItzI\",\"show\":\"Navigation_show__nSI-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__VTLEp\",\"logo\":\"Header_logo__267T5\"};","import {usersAPI} from \"../api/api\";\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SELECT_PAGE = 'SELECT_PAGE';\r\nlet TOGGLE_PRELOADER = 'TOGGLE_PRELOADER';\r\nlet GET_TOTAL_USERS = 'GET_TOTAL_USERS';\r\nlet TOOGLE_FOLLOWING_IN_PROGRESS = 'TOOGLE_FOLLOWING_IN_PROGRESS'\r\nlet IS_AUTH = 'IS_AUTH'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    rowsPerPage: 10,\r\n    currentPage: 1,\r\n    totalUsers: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users.items],\r\n                totalUsers: action.users.totalCount\r\n            }\r\n        }\r\n        case IS_AUTH: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.body\r\n            }\r\n        }\r\n        case SELECT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.page + 1\r\n            }\r\n\r\n        }\r\n        case GET_TOTAL_USERS: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n\r\n        }\r\n        case TOGGLE_PRELOADER: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        }\r\n        case TOOGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching\r\n                        ? [...state.followingInProgress, action.isFetching]\r\n                        : state.followingInProgress.filter(id => id !== action.userId)\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n// Подписка\r\nexport const followSuccess = (id) => {\r\n    return {type: FOLLOW, id: id}\r\n}\r\nexport const isAuth = (body) => {\r\n    return {type: FOLLOW, body: body}\r\n}\r\nexport const unfollowSuccess = (id) => {\r\n    return {type: FOLLOW, id: id}\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type: SET_USERS, users}\r\n}\r\nexport const selectPage = (page) => {\r\n    return {type: SELECT_PAGE, page}\r\n}\r\nexport const getTotalUsers = (totalUsers) => {\r\n    return {type: GET_TOTAL_USERS, totalUsers}\r\n}\r\nexport const togglePreloader = (isFetching) => {\r\n    return {type: TOGGLE_PRELOADER, isFetching}\r\n}\r\n\r\nexport const toggleFollowingInProgress = (isFetching, userID) => {\r\n    return {type: TOOGLE_FOLLOWING_IN_PROGRESS, isFetching, userID}\r\n}\r\n\r\nexport const getUsersThunkCreator = (rowsPerPage, currentPage) => {\r\n    return async (dispatch) => {\r\n        dispatch(togglePreloader(true))\r\n        let response = await usersAPI.getUsers(rowsPerPage, currentPage)\r\n        dispatch(setUsers(response))\r\n        dispatch(togglePreloader(false))\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod) => {\r\n    dispatch(toggleFollowingInProgress(true, id))\r\n    let response = await apiMethod(id)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(followSuccess(id))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, id))\r\n}\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch,id, usersAPI.following)\r\n    }\r\n}\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, id, usersAPI.unfollowing)\r\n    }\r\n}\r\n\r\nexport default UsersReducer"],"sourceRoot":""}
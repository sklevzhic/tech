{"version":3,"sources":["components/Common/TextError.module.css","reportWebVitals.js","components/Header/Header.css.js","components/Header/Header.jsx","api/api.js","redux/Auth-reducer.js","components/Header/index.js","components/App/AppWithRouter/AppWithRouter.jsx","components/App/AppWithRouter/index.js","components/Common/TextError.jsx","pages/SignInPage/SignInPage.jsx","pages/SignInPage/index.js","components/App/Authorization/Authorization.jsx","components/App/Authorization/index.js","components/App/App.jsx","redux/App-reducer.js","components/App/index.js","redux/Dialogs-reducer.js","redux/Profile-reducer.js","redux/Users-reducer.js","redux/redux-store.js","index.js","pages/SignInPage/SignInPage.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","Header","isAuth","logout","classes","className","AppBar","Toolbar","Typography","variant","noWrap","to","button","endIcon","Icon","Button","onClick","instance","axios","withCredentials","baseURL","headers","authAPI","get","responce","data","email","password","rememberMe","captcha","post","url","SET_USER_DATA","GET_CAPTCH_URL","BUTTON_ACTIVITY_SWITCH","initialState","login","id","captchaUrl","isButtonActive","setUserData","type","getAuthUserData","dispatch","a","resultCode","getCaptchaUrl","AuthReducer","state","action","isButtonDisabled","console","log","connect","auth","AppWithRouter","exact","path","render","TextError","props","s","error","children","SignInPage","validationSchema","yup","required","min","Container","component","maxWidth","test","Card","formWrapper","align","initialValues","toggle","address","onSubmit","values","fullWidth","TextField","margin","name","placeholder","label","centerAlign","src","alt","mapToDispatch","buttonActivitySwitch","Authorization","App","initialize","useEffect","INITIALIZED_SUCCESS","initialized","AppReducer","promise","Promise","all","ADD_NEW_MESSAGE","CHANGE_NEW_MESSAGE","dialogs","messages","msg","imgsrc","newMessageText","DialogsReducer","newMessage","Date","now","newText","ADD_NEW_POST","DELETE_POST","CHANGE_NEW_POST","SET_USER","SET_STATUS","UPDATE_STATUS","UPDATE_PHOTO","posts","imgPost","text","user","status","newPostText","ProfileReducer","newPost","copyState","unshift","filter","p","photos","FOLLOW","SET_USERS","SELECT_PAGE","TOGGLE_PRELOADER","GET_TOTAL_USERS","TOOGLE_FOLLOWING_IN_PROGRESS","IS_AUTH","users","rowsPerPage","currentPage","totalUsers","isFetching","followingInProgress","UsersReducer","map","u","followed","items","totalCount","body","page","userId","redusers","combineReducers","dialogsPage","profilePage","usersPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f5668ec6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__1T1lq\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {fade, makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default useStyles\r\n\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from \"./Header.css\";\r\nimport {Button, Icon} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Header = ({isAuth, logout}) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Типа Соцсеть\r\n                    </Typography>\r\n                    <div className={classes.grow}/>\r\n                    <div>\r\n\r\n                    </div>\r\n                    <Link to={\"/profile\"} variant=\"contained\" color=\"default\" className={classes.button}\r\n                          endIcon={<Icon>person</Icon>}>\r\n                        Profile\r\n                    </Link>\r\n                    <Button variant=\"contained\" color=\"default\" className={classes.button} endIcon={<Icon>email</Icon>}>\r\n                        Messages\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"default\" className={classes.button}\r\n                            endIcon={<Icon>people</Icon>}>\r\n                        Users\r\n                    </Button>\r\n                    {isAuth ? <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            className={classes.button}\r\n                            onClick={logout}\r\n                            endIcon={<Icon>person</Icon>}>\r\n                            Log out\r\n                        </Button>\r\n                        : null\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","import axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    headers: {\r\n        \"API-KEY\": \"69bc9857-b17c-4142-859f-4409d84efd2a\"\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(rowsPerPage, currentPage) {\r\n        return instance.get(`/users?page=${currentPage}&count=${rowsPerPage}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    following(id) {\r\n        return instance.post(`/follow/${id}`)\r\n    },\r\n    unfollowing (id) {\r\n        return instance.delete(`/follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserInfo(id) {\r\n        return instance.get(`/profile/${id}`)\r\n            .then(responce => responce.data)\r\n    },\r\n    getStatus(id) {\r\n        return instance.get(`/profile/status/${id}`)\r\n            .then(responce => responce)\r\n    },\r\n    updateUserInfo(user) {\r\n        return instance.put(`/profile`, user)\r\n            .then(responce => responce.data)\r\n    },\r\n\r\n    uploadPhoto(photo) {\r\n        let formData =  new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        })\r\n\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', status)\r\n            .then(responce => responce.data);\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`).then(responce => responce.data)\r\n    },\r\n    login(email, password, rememberMe, captcha) {\r\n        return  instance.post(`/auth/login`, {email, password, rememberMe, captcha}).then(responce => responce.data)\r\n    },\r\n    getCaptcha() {\r\n        return instance.get(`/security/get-captcha-url`).then(responce => {\r\n            return  responce.data.url\r\n        })\r\n    },\r\n    logout() {\r\n        return  instance.post(`/auth/logout`).then(responce => responce.data)\r\n    }\r\n}\r\n\r\n","import {authAPI} from \"../api/api\";\r\n\r\nlet SET_USER_DATA = 'SET_USER_DATA'\r\nlet GET_CAPTCH_URL = 'GET_CAPTCH_URL'\r\nlet BUTTON_ACTIVITY_SWITCH = 'BUTTON_ACTIVITY_SWITCH'\r\n\r\nlet initialState = {\r\n    login: null,\r\n    id: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: \"\",\r\n    isButtonActive: true\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                login: action.login,\r\n                id: action.id,\r\n                email: action.email,\r\n                isAuth: action.isAuth,\r\n                isButtonDisabled: false\r\n            }\r\n        }\r\n        case GET_CAPTCH_URL: {\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.url\r\n            }\r\n        }\r\n        case BUTTON_ACTIVITY_SWITCH: {\r\n            return {\r\n                ...state,\r\n                isButtonActive: !state.isButtonActive\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n    console.log(state.isAuth)\r\n}\r\n\r\nexport const setUserData = (login, id, email, isAuth) => {\r\n    return {type: SET_USER_DATA, login, id, email, isAuth}\r\n}\r\n\r\nexport const buttonActivitySwitch = () => {\r\n    return {type: BUTTON_ACTIVITY_SWITCH}\r\n}\r\n\r\nexport const getCaptchaURL = (url) => {\r\n    return {type: GET_CAPTCH_URL, url}\r\n}\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let responce = await authAPI.me();\r\n    if (responce.resultCode === 0) {\r\n        dispatch(setUserData(responce.data.login, responce.data.id, responce.data.email, true))\r\n    }\r\n}\r\n\r\nexport const login = (data) => async (dispatch) => {\r\n    let responce = await authAPI.login(data.email, data.password, data.toggle, data.captcha)\r\n    if (responce.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else if (responce.resultCode === 10) {\r\n        dispatch(getCaptchaUrl())\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let responce = await authAPI.getCaptcha()\r\n    dispatch(getCaptchaURL(responce))\r\n\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let responce = await authAPI.logout()\r\n    if (responce.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default AuthReducer","import Header from './Header'\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/Auth-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{ logout })(Header)","import {Route, Switch} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst AppWithRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' render={() => <div>MainPage</div>} />\r\n            <Route path='/profile' render={() => <div>Profile</div>} />\r\n            <Route path='/messages' render={() => <div>messages</div>} />\r\n            <Route path='/users' render={() => <div>Users</div>} />\r\n            {/*<Route path='*' render={() => <div>404 NOT FOUND</div>} />*/}\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default AppWithRouter","import AppWithRouter from './AppWithRouter'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(AppWithRouter)","import s from './TextError.module.css'\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div className={s.error}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError","import * as yup from \"yup\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport TextError from \"../../components/Common/TextError\";\r\nimport React from \"react\";\r\nimport {Button, Card, Container, Icon} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TextField } from 'formik-material-ui';\r\nimport s from './SignInPage.module.css'\r\n\r\nconst SignInPage = ({captchaUrl, isAuth, login, isButtonActive}) => {\r\n\r\n    let initialValues = {email: '', password: '', captcha: '', toggle: true, address: ''}\r\n\r\n    const onSubmit = values => {\r\n        login(values)\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        email: yup\r\n            .string('Enter your email')\r\n            .email('Enter a valid email')\r\n            .required('Email is required'),\r\n        password: yup\r\n            .string('Enter your password')\r\n            .min(8, 'Password should be of minimum 8 characters length')\r\n            .required('Password is required'),\r\n    });\r\n\r\n\r\n\r\n\r\n    return <Container\r\n        component=\"main\"\r\n        maxWidth=\"xs\"\r\n        className={s.test}\r\n    >\r\n       <Card className={s.formWrapper}>\r\n           <Typography component=\"h1\"  align=\"center\" variant=\"h5\">\r\n               Sign in\r\n           </Typography>\r\n           <Formik\r\n               initialValues={initialValues}\r\n               validationSchema={validationSchema}\r\n               onSubmit={onSubmit}\r\n           >\r\n               <Form>\r\n                   <Field\r\n                       fullWidth\r\n                       component={TextField}\r\n                       margin=\"dense\"\r\n                       type=\"email\"\r\n                       name=\"email\"\r\n                       placeholder=\"email\"\r\n                       label=\"Email\"\r\n                       variant=\"outlined\"\r\n\r\n                   />\r\n                   <Field\r\n                       fullWidth\r\n                       component={TextField}\r\n                       margin=\"dense\"\r\n                       type=\"password\"\r\n                       name=\"password\"\r\n                       placeholder=\"password\"\r\n                       label=\"Password\"\r\n                       variant=\"outlined\"\r\n                   />\r\n                   <div className={s.centerAlign}>\r\n                       <Field type=\"checkbox\" name=\"toggle\"/>\r\n                   </div>\r\n                   {captchaUrl && <img src={captchaUrl} alt=\"img\"/>}\r\n                   {captchaUrl && <div>\r\n                       <Field type=\"text\" name=\"captcha\" placeholder=\"captcha\"/>\r\n                       <ErrorMessage name=\"captcha\" component={TextError}/>\r\n                   </div>}\r\n\r\n\r\n                   <Button\r\n                       fullWidth\r\n                       type=\"submit\"\r\n                       variant=\"contained\"\r\n                       color=\"primary\"\r\n                       margin=\"dense\"\r\n\r\n                       // disabled={!isButtonActive}\r\n                       endIcon={<Icon>send</Icon>}\r\n                   >\r\n                       Login\r\n                   </Button>\r\n               </Form>\r\n           </Formik>\r\n       </Card>\r\n    </Container>\r\n}\r\n\r\nexport default SignInPage","import SignInPage from \"./SignInPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {buttonActivitySwitch, login} from \"../../redux/Auth-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state.auth)\r\n    return {\r\n        captchaUrl: state.auth.captchaUrl,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapToDispatch = {\r\n    login,\r\n    buttonActivitySwitch\r\n}\r\n\r\nexport default connect(mapStateToProps, mapToDispatch)(SignInPage)\r\n","import {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport SignInPage from \"../../../pages/SignInPage\";\r\n\r\nconst Authorization = () => {\r\n    return (\r\n        <Switch>\r\n        <Route path='/signin' render={() => <SignInPage/>}/>\r\n        <Redirect to={\"/signin\"}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Authorization","import Authorization from './Authorization'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Authorization)","import React, {useEffect} from \"react\";\r\nimport Header from \"../Header\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport AppWithRouter from \"./AppWithRouter\";\r\nimport Authorization from \"./Authorization\";\r\n\r\nconst App = ({isAuth, initialize}) => {\r\n    useEffect(() => {\r\n        initialize()\r\n\r\n    });\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Switch>\r\n                <Route exact path='/' render={() => <Redirect to={\"/profile\"}/>}/>\r\n                {isAuth ? <AppWithRouter/> : <Authorization/>}\r\n            </Switch>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import {getAuthUserData} from \"./Auth-reducer\";\r\n\r\nlet INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst AppReducer = ( state = initialState, action) => {\r\n        switch (action.type) {\r\n            case INITIALIZED_SUCCESS: {\r\n                return {\r\n                    ...state,\r\n                    initialized: true\r\n                }\r\n            }\r\n            default :\r\n                return state\r\n        }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {type: INITIALIZED_SUCCESS}\r\n}\r\nexport const initialize = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise])\r\n        .then(()=> {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\nexport default AppReducer","import App from \"./App\";\r\nimport {connect} from \"react-redux\";\r\nimport { initialize} from \"../../redux/App-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: state.auth.captchaUrl,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {initialize})(App)","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\nconst CHANGE_NEW_MESSAGE = 'CHANGE-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {name: \"Alexander\", id: 1},\r\n        {name: \"Alexander1\", id: 2},\r\n        {name: \"Alexander2\", id: 3},\r\n        {name: \"Alexander3\", id: 4},\r\n        {name: \"Alexander5\", id: 5},\r\n        {name: \"Alexander6\", id: 6},\r\n        {name: \"Alexander7\", id: 7},\r\n        {name: \"Alexander8\", id: 8},\r\n    ],\r\n    messages: [\r\n        {\r\n            msg: \"1This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 1,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"2This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 2,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"3This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 3,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {msg: \"it to make it appear circular.\", id: 4, imgsrc: \"https://via.placeholder.com/300\"},\r\n        {\r\n            msg: \"5This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 5,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n        {\r\n            msg: \"This is a square image. Add the  class to it to make it appear circular.\",\r\n            id: 6,\r\n            imgsrc: \"https://via.placeholder.com/300\"\r\n        },\r\n    ],\r\n    newMessageText: 'test text'\r\n\r\n};\r\n\r\nconst DialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE:\r\n            let newMessage = {\r\n                msg: state.newMessageText,\r\n                id: Date.now()\r\n            }\r\n            return {\r\n                ...state,\r\n                newMessageText: '',\r\n                messages: [newMessage, ...state.messages]\r\n            }\r\n        case CHANGE_NEW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const addNewMessageActionCreator = () => {\r\n    return {type: ADD_NEW_MESSAGE}\r\n}\r\nexport const updateMessageActionCreator = (text) => {\r\n    return {type: CHANGE_NEW_MESSAGE, newText: text}\r\n}\r\n\r\nexport default DialogsReducer","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_NEW_POST = 'ADD-NEW-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst CHANGE_NEW_POST = 'CHANGE-NEW-POST';\r\nconst SET_USER = 'SET_USER';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst UPDATE_STATUS = 'UPDATE_STATUS';\r\nconst UPDATE_PHOTO = 'UPDATE_PHOTO';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: '0',\r\n            imgPost: 'https://social-network.samuraijs.com/activecontent/images/users/16277/user.jpg?v=2',\r\n            text: 'text',\r\n        },\r\n        {\r\n            id: '1',\r\n            imgPost: 'https://social-network.samuraijs.com/activecontent/images/users/16277/user.jpg?v=2',\r\n            text: 'text',\r\n        }\r\n    ],\r\n    user: \"\",\r\n    status: \"\",\r\n    newPostText: \"\",\r\n}\r\n\r\nconst ProfileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST: {\r\n            let newPost = {\r\n                text: action.newPostText,\r\n                imgPost: \"https://social-network.samuraijs.com/activecontent/images/users/16277/user.jpg?v=2\"\r\n            }\r\n            let copyState = {...state}\r\n            copyState.posts = [...copyState.posts]\r\n            copyState.posts.unshift(newPost);\r\n            return copyState\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.id)\r\n            }\r\n        }\r\n        case CHANGE_NEW_POST: {\r\n            let copyState = {...state}\r\n            copyState.newPostText = action.newText;\r\n            return copyState\r\n        }\r\n        case SET_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case UPDATE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case UPDATE_PHOTO: {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                user: {...state.user, photos: action.photos}\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {type: ADD_NEW_POST, newPostText}\r\n};\r\nexport const updatePostActionCreator = (text) => {\r\n    return {type: CHANGE_NEW_POST, newText: text}\r\n};\r\nexport const deletePost = (id) => {\r\n    return {type: DELETE_POST, id}\r\n};\r\nexport const setUser = (user) => {\r\n    return {type: SET_USER, user}\r\n}\r\nexport const setStatus = (status) => {\r\n    return {type: SET_STATUS, status}\r\n}\r\n\r\nexport const uploadPhotoSucceess = (photos) => {\r\n    return {type: UPDATE_PHOTO, photos}\r\n}\r\n\r\nexport const getUserInfo = (userId) => (dispatch) => {\r\n    profileAPI.getUserInfo(userId)\r\n        .then(responce => {\r\n            dispatch(setUser(responce))\r\n        })\r\n}\r\nexport const getStatus = (id) => (dispatch) => {\r\n    profileAPI.getStatus(id)\r\n        .then(responce => {\r\n            if (responce.status === 200) {\r\n                dispatch(setStatus(responce.data))\r\n            }\r\n        })\r\n}\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus({status: status})\r\n        .then(responce => {\r\n            if (responce.resultCode === 0) {\r\n                dispatch(setStatus(responce.data.status))\r\n            }\r\n        })\r\n}\r\nexport const updateUserInfo = (user) => async (dispatch, getState) => {\r\n    let userId = getState().auth.id\r\n    let responce = await profileAPI.updateUserInfo(user)\r\n    if (responce.resultCode === 0) {\r\n        dispatch(getUserInfo(userId))\r\n    } else {\r\n        debugger\r\n    }\r\n\r\n}\r\nexport const uploadPhoto = (photo) => async (dispatch) => {\r\n    let responce = await profileAPI.uploadPhoto(photo)\r\n    if (responce.data.resultCode === 0) {\r\n        dispatch(uploadPhotoSucceess(responce.data.data.photos))\r\n    }\r\n}\r\n\r\nexport default ProfileReducer","import {usersAPI} from \"../api/api\";\r\n\r\nlet FOLLOW = 'FOLLOW';\r\nlet SET_USERS = 'SET_USERS';\r\nlet SELECT_PAGE = 'SELECT_PAGE';\r\nlet TOGGLE_PRELOADER = 'TOGGLE_PRELOADER';\r\nlet GET_TOTAL_USERS = 'GET_TOTAL_USERS';\r\nlet TOOGLE_FOLLOWING_IN_PROGRESS = 'TOOGLE_FOLLOWING_IN_PROGRESS'\r\nlet IS_AUTH = 'IS_AUTH'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    rowsPerPage: 10,\r\n    currentPage: 1,\r\n    totalUsers: 0,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users.items],\r\n                totalUsers: action.users.totalCount\r\n            }\r\n        }\r\n        case IS_AUTH: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.body\r\n            }\r\n        }\r\n        case SELECT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.page + 1\r\n            }\r\n\r\n        }\r\n        case GET_TOTAL_USERS: {\r\n            return {\r\n                ...state,\r\n                totalUsers: action.totalUsers\r\n            }\r\n\r\n        }\r\n        case TOGGLE_PRELOADER: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        }\r\n        case TOOGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.isFetching\r\n                        ? [...state.followingInProgress, action.isFetching]\r\n                        : state.followingInProgress.filter(id => id !== action.userId)\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n// Подписка\r\nexport const followSuccess = (id) => {\r\n    return {type: FOLLOW, id: id}\r\n}\r\nexport const isAuth = (body) => {\r\n    return {type: FOLLOW, body: body}\r\n}\r\nexport const unfollowSuccess = (id) => {\r\n    return {type: FOLLOW, id: id}\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type: SET_USERS, users}\r\n}\r\nexport const selectPage = (page) => {\r\n    return {type: SELECT_PAGE, page}\r\n}\r\nexport const getTotalUsers = (totalUsers) => {\r\n    return {type: GET_TOTAL_USERS, totalUsers}\r\n}\r\nexport const togglePreloader = (isFetching) => {\r\n    return {type: TOGGLE_PRELOADER, isFetching}\r\n}\r\n\r\nexport const toggleFollowingInProgress = (isFetching, userID) => {\r\n    return {type: TOOGLE_FOLLOWING_IN_PROGRESS, isFetching, userID}\r\n}\r\n\r\nexport const getUsersThunkCreator = (rowsPerPage, currentPage) => {\r\n    return async (dispatch) => {\r\n        dispatch(togglePreloader(true))\r\n        let response = await usersAPI.getUsers(rowsPerPage, currentPage)\r\n        dispatch(setUsers(response))\r\n        dispatch(togglePreloader(false))\r\n    }\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod) => {\r\n    dispatch(toggleFollowingInProgress(true, id))\r\n    let response = await apiMethod(id)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(followSuccess(id))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, id))\r\n}\r\nexport const follow = (id) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch,id, usersAPI.following)\r\n    }\r\n}\r\nexport const unfollow = (id) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, id, usersAPI.unfollowing)\r\n    }\r\n}\r\n\r\nexport default UsersReducer","import DialogsReducer from \"./Dialogs-reducer\";\r\nimport ProfileReducer from \"./Profile-reducer\";\r\nimport UsersReducer from \"./Users-reducer\";\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport AuthReducer from \"./Auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport AppReducer from \"./App-reducer\";\r\n\r\nlet redusers = combineReducers({\r\n    dialogsPage: DialogsReducer,\r\n    profilePage: ProfileReducer,\r\n    usersPage: UsersReducer,\r\n    auth: AuthReducer,\r\n    app: AppReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from 'react-redux'\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>,\r\n        document.getElementById('root')\r\n    )\r\n\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"SignInPage_formWrapper__17ygC\",\"test\":\"SignInPage_test__fVNm1\",\"centerAlign\":\"SignInPage_centerAlign__2z34l\"};"],"sourceRoot":""}